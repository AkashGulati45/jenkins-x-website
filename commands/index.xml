<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Commands on Jenkins X</title>
    <link>https://jenkins-x.io/commands/</link>
    <description>Recent content in Commands on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Sep 2018 14:39:09 +0000</lastBuildDate>
    
	<atom:link href="https://jenkins-x.io/commands/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jx cloudbees</title>
      <link>https://jenkins-x.io/commands/jx_cloudbees/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_cloudbees/</guid>
      <description> jx cloudbees Opens the CloudBees app for Kubernetes for visualising CI/CD and your environments
Synopsis Opens the CloudBees app for Kubernetes in a browser.
Which helps you visualise your CI/CD pipelines, apps, environments and teams.
For more information please see https://www.cloudbees.com/blog/want-help-build-cloudbees-kubernetes-jenkins-x
jx cloudbees [flags]  Examples  # Open the CDX dashboard in a browser jx cloudbees # Print the Jenkins X console URL but do not open a browser jx console -u  Options  -h, --help help for cloudbees -u, --url Only displays and the URL and does not open the browser  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx completion</title>
      <link>https://jenkins-x.io/commands/jx_completion/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_completion/</guid>
      <description>jx completion Output shell completion code for the given shell (bash or zsh)
Synopsis Output shell completion code for the given shell (bash or zsh).
This command prints shell code which must be evaluation to provide interactive completion of jx commands.
$ source &amp;lt;(jx completion bash)
will load the jx completion code for bash. Note that this depends on the bash-completion framework. It must be sourced before sourcing the jx completion, e.</description>
    </item>
    
    <item>
      <title>jx compliance</title>
      <link>https://jenkins-x.io/commands/jx_compliance/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance/</guid>
      <description> jx compliance Run compliance tests against Kubernetes cluster
Synopsis Run compliance tests against Kubernetes cluster
jx compliance ACTION [flags]  Options  -h, --help help for compliance  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx compliance delete - Deletes the Kubernetes resources allocated by the compliance tests jx compliance logs - Prints the logs of compliance tests jx compliance results - Shows the results of compliance tests jx compliance run - Runs the compliance tests jx compliance status - Retrieves the status of compliance tests  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx compliance delete</title>
      <link>https://jenkins-x.io/commands/jx_compliance_delete/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance_delete/</guid>
      <description> jx compliance delete Deletes the Kubernetes resources allocated by the compliance tests
Synopsis Deletes the Kubernetes resources allocated by the compliance tests
jx compliance delete [flags]  Examples  # Delete the Kubernetes resources allocated by the compliance test jx compliance delete  Options  -h, --help help for delete  SEE ALSO  jx compliance - Run compliance tests against Kubernetes cluster  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx compliance logs</title>
      <link>https://jenkins-x.io/commands/jx_compliance_logs/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance_logs/</guid>
      <description> jx compliance logs Prints the logs of compliance tests
Synopsis Prints the logs of compliance tests
jx compliance logs [flags]  Examples  # Print the compliance logs jx compliance logs  Options  -f, --follow Specify if the logs should be streamed. -h, --help help for logs  SEE ALSO  jx compliance - Run compliance tests against Kubernetes cluster  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx compliance results</title>
      <link>https://jenkins-x.io/commands/jx_compliance_results/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance_results/</guid>
      <description> jx compliance results Shows the results of compliance tests
Synopsis Shows the results of the compliance tests
jx compliance results [flags]  Examples  # Show the compliance results jx compliance results  Options  -h, --help help for results  SEE ALSO  jx compliance - Run compliance tests against Kubernetes cluster  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx compliance run</title>
      <link>https://jenkins-x.io/commands/jx_compliance_run/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance_run/</guid>
      <description> jx compliance run Runs the compliance tests
Synopsis Runs the compliance tests
jx compliance run [flags]  Examples  # Run the compliance tests jx compliance run  Options  -h, --help help for run  SEE ALSO  jx compliance - Run compliance tests against Kubernetes cluster  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx compliance status</title>
      <link>https://jenkins-x.io/commands/jx_compliance_status/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_compliance_status/</guid>
      <description> jx compliance status Retrieves the status of compliance tests
Synopsis Retrieves the current status of the compliance tests
jx compliance status [flags]  Examples  # Get the status jx compliance status  Options  -h, --help help for status  SEE ALSO  jx compliance - Run compliance tests against Kubernetes cluster  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx console</title>
      <link>https://jenkins-x.io/commands/jx_console/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_console/</guid>
      <description> jx console Opens the Jenkins console
Synopsis Opens the Jenkins X console in a browser.
jx console [flags]  Examples  # Open the Jenkins X console in a browser jx console # Print the Jenkins X console URL but do not open a browser jx console -u # Open the Jenkins X console in a browser using the classic skin jx console --classic  Options  --classic Use the classic Jenkins skin instead of Blue Ocean -e, --env string Specifies the Environment name to look inside -h, --help help for console -n, --namespace string Specifies the namespace name to look inside -u, --url Only displays and the URL and does not open the browser  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx context</title>
      <link>https://jenkins-x.io/commands/jx_context/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_context/</guid>
      <description> jx context View or change the current kubernetes context (kubernetes cluster)
Synopsis Displays or changes the current kubernetes context (cluster).
jx context [flags]  Examples  # to select the context to switch to jx context # or the more concise alias jx ctx # view the current context jx ctx -b # Change the current namespace to &#39;minikube&#39; jx ctx minikube  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for context --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx controller</title>
      <link>https://jenkins-x.io/commands/jx_controller/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_controller/</guid>
      <description> jx controller Runs a controller
Synopsis Runs a controller
jx controller [flags]  Examples   Options  -h, --help help for controller  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx controller backup - Runs the backup controller jx controller build - Runs the build controller jx controller role - Controller which mirrors Role &amp;amp; EnvironmentRoleBinding resources to Roles and RoleBindings in all matching Environment namespaces jx controller workflow - Runs the workflow controller  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx controller backup</title>
      <link>https://jenkins-x.io/commands/jx_controller_backup/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_controller_backup/</guid>
      <description> jx controller backup Runs the backup controller
Synopsis Runs the backup controller
jx controller backup [flags]  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for backup --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The namespace to watch or defaults to the current namespace --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -o, --organisation string The organisation to backup --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx controller - Runs a controller  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx controller build</title>
      <link>https://jenkins-x.io/commands/jx_controller_build/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_controller_build/</guid>
      <description> jx controller build Runs the build controller
Synopsis Runs the build controller
jx controller build [flags]  Options  -h, --help help for build -n, --namespace string The namespace to watch or defaults to the current namespace  SEE ALSO  jx controller - Runs a controller  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx controller role</title>
      <link>https://jenkins-x.io/commands/jx_controller_role/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_controller_role/</guid>
      <description>jx controller role Controller which mirrors Role &amp;amp; EnvironmentRoleBinding resources to Roles and RoleBindings in all matching Environment namespaces
Synopsis Controller which replicas Role and EnvironmentRoleBinding resources to Roles and RoleBindings in all matching Environment namespaces.
RBAC in Kubernetes is either global with ClusterRoles or is namespace based with Roles per Namespace.
We use a Custom Resource called EnvironmentRoleBinding which binds Roles and its bindings from the development environment into each Environment&amp;rsquo;s Namespace.</description>
    </item>
    
    <item>
      <title>jx controller workflow</title>
      <link>https://jenkins-x.io/commands/jx_controller_workflow/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_controller_workflow/</guid>
      <description> jx controller workflow Runs the workflow controller
Synopsis Runs the workflow controller
jx controller workflow [flags]  Options  -r, --helm-repo-name string The name of the helm repository that contains the app (default &amp;quot;releases&amp;quot;) -h, --help help for workflow -n, --namespace string The namespace to watch or defaults to the current namespace --no-watch Disable watch so just performs any delta processes on pending workflows --pull-request-poll-time string Poll time when waiting for a Pull Request to merge (default &amp;quot;20s&amp;quot;)  SEE ALSO  jx controller - Runs a controller  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon</title>
      <link>https://jenkins-x.io/commands/jx_create_addon/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon/</guid>
      <description> jx create addon Creates an addon
Synopsis Creates an addon
jx create addon [flags]  Options  --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for addon -n, --namespace string The Namespace to install into -r, --release string The chart release name -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2)  SEE ALSO  jx create - Create a new resource jx create addon ambassador - Create an ambassador addon jx create addon anchore - Create the Anchore addon for verifying container images jx create addon cloudbees - Create the CloudBees app for Kubernetes (a web console for working with CI/CD, Environments and GitOps) jx create addon gitea - Create a gitea addon for hosting git repositories jx create addon istio - Create the Istio addon for service mesh jx create addon knative-build - Create the Knative Build addon jx create addon kubeless - Create a kubeless addon for hosting git repositories jx create addon owasp-zap - Create the OWASP Zed Attack Proxy addon for dynamic security checks against running apps jx create addon pipeline-events - Create the pipeline events addon jx create addon prow - Create a prow addon jx create addon sso - Create a SSO addon for Single Sign-On  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon ambassador</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_ambassador/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_ambassador/</guid>
      <description> jx create addon ambassador Create an ambassador addon
Synopsis Creates the ambassador addon for smart load balancing on kubernetes
jx create addon ambassador [flags]  Examples  # Create the ambassador addon jx create addon ambassador # Create the ambassador addon in a custom namespace jx create addon ambassador -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;datawire/ambassador&amp;quot;) --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for ambassador --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --release string The chart release name (default &amp;quot;ambassador&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -v, --version string The version of the ambassador addon to use  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon anchore</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_anchore/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_anchore/</guid>
      <description>jx create addon anchore Create the Anchore addon for verifying container images
Synopsis Creates the anchore addon for serverless on kubernetes
jx create addon anchore [flags]  Examples  # Create the anchore addon jx create addon anchore # Create the anchore addon in a custom namespace jx create addon anchore -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;stable/anchore-engine&amp;quot;) -d, --config-dir string The config directory to use (default &amp;quot;/anchore_service_dir&amp;quot;) --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for anchore --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;anchore&amp;quot;) --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --password string The default password to use for Anchore (default &amp;quot;anchore&amp;quot;) -r, --release string The chart release name (default &amp;quot;anchore&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -v, --version string The version of the Anchore chart to use (default &amp;quot;0.</description>
    </item>
    
    <item>
      <title>jx create addon cloudbees</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_cloudbees/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_cloudbees/</guid>
      <description> jx create addon cloudbees Create the CloudBees app for Kubernetes (a web console for working with CI/CD, Environments and GitOps)
Synopsis Creates the CloudBees app for Kubernetes addon
CloudBees app for Kubernetes provides unified Continuous Delivery Environment console to make it easier to do CI/CD and Environments across a number of microservices and teams
For more information please see https://www.cloudbees.com/blog/want-help-build-cloudbees-kubernetes-jenkins-x
jx create addon cloudbees [flags]  Examples  # Create the cloudbees addon jx create addon cloudbees  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for cloudbees --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;jx&amp;quot;) --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --release string The chart release name (default &amp;quot;cb&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --sso Enable single sign-on --verbose Enable verbose logging  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon gitea</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_gitea/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_gitea/</guid>
      <description>jx create addon gitea Create a gitea addon for hosting git repositories
Synopsis Creates the gitea addon (hosted git server)
jx create addon gitea [flags]  Examples  # Create the gitea addon jx create addon gitea  Options  --admin Should the new user created be an admin of the gitea server -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;jenkins-x/gitea&amp;quot;) -e, --email string The email address of the new user to create in gitea --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for gitea --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --no-token If true disable trying to create a new token in the gitea server --no-user If true disable trying to create a new user in the gitea server -p, --password string The password for the user to create in gitea.</description>
    </item>
    
    <item>
      <title>jx create addon istio</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_istio/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_istio/</guid>
      <description> jx create addon istio Create the Istio addon for service mesh
Synopsis Creates the istio addon for service mesh on kubernetes
jx create addon istio [flags]  Examples  # Create the istio addon jx create addon istio # Create the istio addon in a custom namespace jx create addon istio -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use -d, --config-dir string The config directory to use (default &amp;quot;/istio_service_dir&amp;quot;) --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for istio --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;istio-system&amp;quot;) --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --no-injector-webhook Disables the injector webhook -p, --password string The default password to use for Istio (default &amp;quot;istio&amp;quot;) -r, --release string The chart release name (default &amp;quot;istio&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -v, --version string The version of the Istio chart to use  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon knative-build</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_knative-build/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_knative-build/</guid>
      <description> jx create addon knative-build Create the Knative Build addon
Synopsis Creates the Knative Build addon
jx create addon knative-build [flags]  Examples  # Create the knative addon jx create addon knative-build  Options  -l, --backoff-limit int32 The backoff limit: how many times to retry the job before considering it failed) to run in the Job (default 2) -h, --help help for knative-build -i, --image string The KnativeBuild image to use to run the ZA Proxy baseline scan (default &amp;quot;KnativeBuild/zap2docker-live:latest&amp;quot;)  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon kubeless</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_kubeless/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_kubeless/</guid>
      <description> jx create addon kubeless Create a kubeless addon for hosting git repositories
Synopsis Creates the kubeless addon for serverless on kubernetes
jx create addon kubeless [flags]  Examples  # Create the kubeless addon in the kubeless namespace jx create addon kubeless # Create the kubeless addon in a custom namespace jx create addon kubeless -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;incubator/kubeless&amp;quot;) --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for kubeless --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;kubeless&amp;quot;) --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --release string The chart release name (default &amp;quot;kubeless&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -v, --version string The version of the kubeless addon to use  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon owasp-zap</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_owasp-zap/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_owasp-zap/</guid>
      <description> jx create addon owasp-zap Create the OWASP Zed Attack Proxy addon for dynamic security checks against running apps
Synopsis Creates the Owasp dynamic security testing addon
jx create addon owasp-zap [flags]  Examples  # Create the owasp addon jx create addon owasp-zap  Options  -l, --backoff-limit int32 The backoff limit: how many times to retry the job before considering it failed) to run in the Job (default 2) -h, --help help for owasp-zap -i, --image string The OWASP image to use to run the ZA Proxy baseline scan (default &amp;quot;owasp/zap2docker-live:latest&amp;quot;)  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create addon pipeline-events</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_pipeline-events/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_pipeline-events/</guid>
      <description>jx create addon pipeline-events Create the pipeline events addon
Synopsis Creates the Jenkins X pipeline events addon
jx create addon pipeline-events [flags]  Examples  # Create the pipeline-events addon jx create addon pipeline-events # Create the pipeline-events addon in a custom namespace jx create addon pipeline-events -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for pipeline-events --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;pipeline-events&amp;quot;) --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --password string Password to access pipeline-events services such as Kibana and Elasticsearch.</description>
    </item>
    
    <item>
      <title>jx create addon prow</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_prow/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_prow/</guid>
      <description>jx create addon prow Create a prow addon
Synopsis Creates the prow addon for handling webhook events
jx create addon prow [flags]  Examples  # Create the prow addon jx create addon prow # Create the prow addon in a custom namespace jx create addon prow -n mynamespace  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;jenkins-x/prow&amp;quot;) --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for prow --hmac-token string OPTIONAL: The hmac-token is the token that you give to GitHub for validating webhooks.</description>
    </item>
    
    <item>
      <title>jx create addon sso</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_sso/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_sso/</guid>
      <description> jx create addon sso Create a SSO addon for Single Sign-On
Synopsis Creates the Single Sign-On addon
This addon will install and configure the dex identity provider, sso-operator and cert-manager.
jx create addon sso [flags]  Examples  # Create the sso addon jx create addon sso  Options  -b, --batch-mode In batch mode the command never prompts for user input --cluster Enable cluster wide Ingress upgrade --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for sso --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The Namespace to install into (default &amp;quot;jx&amp;quot;) --namespaces stringArray Namespaces to upgrade --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --release string The chart release name (default &amp;quot;jx&amp;quot;) -s, --set string The chart set values (can specify multiple or separate values with commas: key1=val1,key2=val2) --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --skip-certmanager Skips certmanager installation --verbose Enable verbose logging  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create archetype</title>
      <link>https://jenkins-x.io/commands/jx_create_archetype/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_archetype/</guid>
      <description>jx create archetype Create a new app from a Maven Archetype and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new Maven project using an Archetype
You then get the option to import the generated source code into a git repository and Jenkins for CI/CD
jx create archetype [flags]  Examples  # Create a new application from a Maven Archetype using the UI to choose which archetype to use jx create archetype # Creates a Camel Archetype, filtering on the archetypes containing the text &#39;spring&#39; jx create archetype --filter-group org.</description>
    </item>
    
    <item>
      <title>jx create branchpattern</title>
      <link>https://jenkins-x.io/commands/jx_create_branchpattern/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_branchpattern/</guid>
      <description> jx create branchpattern Create a git branch pattern for your team
Synopsis Create a git branch pattern for your team.
The pattern should match all the branches you wish to automate CI/CD on when creating or importing projects.
For more documentation see: https://jenkins-x.io/developing/import/#branch-patterns
jx create branchpattern [flags]  Examples  # Create a branch pattern for your team jx create branch pattern &amp;quot;master|develop|PR-.*&amp;quot;  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for branchpattern --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create camel</title>
      <link>https://jenkins-x.io/commands/jx_create_camel/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_camel/</guid>
      <description>jx create camel Create a new camel based application and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new Apache Camel application using Spring Boot and then optionally setups CI/CD pipelines and GitOps promotion.
For more documentation about camel see: https://camel.apache.org/
jx create camel [flags]  Examples  # Create a camel application and be prompted for the folder name jx create camel # Create a camel application called awesome jx create camel -a awesome  Options  -a, --artifact string The artifact ID for the new application -b, --batch-mode In batch mode the command never prompts for user input --branches string The branch pattern for branches to trigger CI/CD pipelines on -c, --camel-version string The Version of the Archetype to use (default &amp;quot;RELEASE&amp;quot;) --credentials string The Jenkins credentials name used by the job --default-owner string The default user/organisation used if no user is found for the current git repository being imported (default &amp;quot;someone&amp;quot;) --dry-run Performs local changes to the repo but skips the import into Jenkins X --git-api-token string The git API token to use for creating new git repositories --git-private Create new git repositories as private --git-provider-url string The git server URL to create new git repositories inside --git-username string The git username to use for creating new git repositories -g, --group string The group ID for the new application (default &amp;quot;com.</description>
    </item>
    
    <item>
      <title>jx create chat</title>
      <link>https://jenkins-x.io/commands/jx_create_chat/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_chat/</guid>
      <description> jx create chat Creates a chat server resource
Synopsis Creates a chat server resource
jx create chat [flags]  Options  -h, --help help for chat  SEE ALSO  jx create - Create a new resource jx create chat server - Creates a new chat server URL jx create chat token - Adds a new token/login for a user on a Chat service server  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create chat server</title>
      <link>https://jenkins-x.io/commands/jx_create_chat_server/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_chat_server/</guid>
      <description> jx create chat server Creates a new chat server URL
Synopsis Adds a new Chat Server URL
jx create chat server kind [url] [flags]  Examples  # Add a new chat server URL jx create chat server slack https://myroom.slack.server  Options  -h, --help help for server -n, --name string The name for the chat server being created  SEE ALSO  jx create chat - Creates a chat server resource  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create chat token</title>
      <link>https://jenkins-x.io/commands/jx_create_chat_token/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_chat_token/</guid>
      <description> jx create chat token Adds a new token/login for a user on a Chat service server
Synopsis Creates a new User Token for a Chat service
jx create chat token [username] [flags]  Examples  # Add a new User Token for a Chat service jx create chat token -n jira someUserName # As above with the password being passed in jx create git token -n jira -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for token --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the git server to add a user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --timeout string The timeout if using browser automation to generate the API token (by passing username and password) -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create chat - Creates a chat server resource  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create cluster</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster/</guid>
      <description>jx create cluster Create a new kubernetes cluster
Synopsis This command creates a new kubernetes cluster, installing required local dependencies and provisions the Jenkins X platform
You can see a demo of this command here: https://jenkins-x.io/demos/create_cluster/
Valid kubernetes providers include:
* aks (Azure Container Service - https://docs.microsoft.com/en-us/azure/aks) * aws (Amazon Web Services via kops - https://github.com/aws-samples/aws-workshop-for-kubernetes/blob/master/readme.adoc) * eks (Amazon Web Services Elastic Container Service for Kubernetes - https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html) * gke (Google Container Engine - https://cloud.</description>
    </item>
    
    <item>
      <title>jx create cluster aks</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_aks/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_aks/</guid>
      <description>jx create cluster aks Create a new kubernetes cluster on AKS: Runs on Azure
Synopsis This command creates a new kubernetes cluster on AKS, installing required local dependencies and provisions the Jenkins X platform
Azure Container Service (AKS) manages your hosted Kubernetes environment, making it quick and easy to deploy and manage containerized applications without container orchestration expertise. It also eliminates the burden of ongoing operations and maintenance by provisioning, upgrading, and scaling resources on demand, without taking your applications offline.</description>
    </item>
    
    <item>
      <title>jx create cluster aws</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_aws/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_aws/</guid>
      <description>jx create cluster aws Create a new kubernetes cluster on AWS with kops
Synopsis This command creates a new kubernetes cluster on Amazon Web Service (AWS) using kops, installing required local dependencies and provisions the Jenkins X platform
AWS manages your hosted Kubernetes environment via kops, making it quick and easy to deploy and manage containerized applications without container orchestration expertise. It also eliminates the burden of ongoing operations and maintenance by provisioning, upgrading, and scaling resources on demand, without taking your applications offline.</description>
    </item>
    
    <item>
      <title>jx create cluster eks</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_eks/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_eks/</guid>
      <description>jx create cluster eks Create a new kubernetes cluster on AWS using EKS
Synopsis This command creates a new kubernetes cluster on Amazon Web Services (AWS) using EKS, installing required local dependencies and provisions the Jenkins X platform
EKS is a managed kubernetes service on AWS.
jx create cluster eks [flags]  Examples  # to create a new kubernetes cluster with Jenkins X in your default zones (from $EKS_AVAILABILITY_ZONES) jx create cluster eks # to specify the zones jx create cluster eks --zones us-west-2a,us-west-2b,us-west-2c  Options  --aws-api-timeout duration Duration of AWS API timeout (default 20m0s) -b, --batch-mode In batch mode the command never prompts for user input --cleanup-temp-files Cleans up any temporary values.</description>
    </item>
    
    <item>
      <title>jx create cluster gke</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_gke/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_gke/</guid>
      <description>jx create cluster gke Create a new kubernetes cluster on GKE: Runs on Google Cloud
Synopsis This command creates a new kubernetes cluster on GKE, installing required local dependencies and provisions the Jenkins X platform
You can see a demo of this command here: https://jenkins-x.io/demos/create_cluster_gke/
Google Kubernetes Engine is a managed environment for deploying containerized applications. It brings our latest innovations in developer productivity, resource efficiency, automated operations, and open source flexibility to accelerate your time to market.</description>
    </item>
    
    <item>
      <title>jx create cluster gke terraform</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_gke_terraform/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_gke_terraform/</guid>
      <description>jx create cluster gke terraform Create a new kubernetes cluster on GKE using Terraform: Runs on Google Cloud
Synopsis This command creates a new kubernetes cluster on GKE, installing required local dependencies and provisions the Jenkins X platform
You can see a demo of this command here: https://jenkins-x.io/demos/create_cluster_gke/
Google Kubernetes Engine is a managed environment for deploying containerized applications. It brings our latest innovations in developer productivity, resource efficiency, automated operations, and open source flexibility to accelerate your time to market.</description>
    </item>
    
    <item>
      <title>jx create cluster minikube</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_minikube/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_minikube/</guid>
      <description>jx create cluster minikube Create a new kubernetes cluster with minikube: Runs locally
Synopsis This command creates a new kubernetes cluster, installing required local dependencies and provisions the Jenkins X platform
Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.
jx create cluster minikube [flags]  Examples  jx create cluster minikube  Options  -b, --batch-mode In batch mode the command never prompts for user input --cleanup-temp-files Cleans up any temporary values.</description>
    </item>
    
    <item>
      <title>jx create cluster minishift</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_minishift/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_minishift/</guid>
      <description>jx create cluster minishift Create a new OpenShift cluster with minishift: Runs locally
Synopsis This command creates a new kubernetes cluster, installing required local dependencies and provisions the Jenkins X platform
Minishift is a tool that makes it easy to run OpenShift locally. Minishift runs a single-node OpenShift cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.
jx create cluster minishift [flags]  Examples  jx create cluster minishift  Options  -b, --batch-mode In batch mode the command never prompts for user input --cleanup-temp-files Cleans up any temporary values.</description>
    </item>
    
    <item>
      <title>jx create cluster oke</title>
      <link>https://jenkins-x.io/commands/jx_create_cluster_oke/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_cluster_oke/</guid>
      <description>jx create cluster oke Create a new kubernetes cluster on OKE: Runs on Oracle Cloud
Synopsis This command creates a new kubernetes cluster on OKE, installs required local dependencies and provisions the Jenkins X platform
Please add your $HOME/bin to $PATH otherwise jx will have issue invoking OCI CLI command. If you have already  installed OCI CLI, please make sure it is in $PATH.
Oracle Cloud Infrastructure Container Engine for Kubernetes is a fully-managed, scalable, and highly available service that you can use to deploy your containerized applications to the cloud.</description>
    </item>
    
    <item>
      <title>jx create codeship</title>
      <link>https://jenkins-x.io/commands/jx_create_codeship/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_codeship/</guid>
      <description>jx create codeship Creates a build on CodeShip to create/update JX clusters
Synopsis Creates a build on CodeShip to create/update JX clusters
jx create codeship [flags]  Examples  jx create codeship # to specify the org and service account via flags jx create codeship -o org --gke-service-account &amp;lt;path&amp;gt;  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --cluster stringArray Name and Kubernetes provider (gke, aks, eks) of clusters to be created in the form --cluster foo=gke --codeship-organisation string The Codeship organisation to use, this will not be stored anywhere --codeship-password string The password to login to Codeship with, this will not be stored anywhere --codeship-username string The username to login to Codeship with, this will not be stored anywhere -f, --fork-git-repo string The Git repository used as the fork when creating new Organisation git repos (default &amp;quot;https://github.</description>
    </item>
    
    <item>
      <title>jx create devpod</title>
      <link>https://jenkins-x.io/commands/jx_create_devpod/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_devpod/</guid>
      <description> jx create devpod Creates a Developer Pod for running builds and tests inside the cluster
Synopsis Creates a new DevPod
For more documentation see: https://jenkins-x.io/developing/devpods/
jx create devpod [flags]  Examples  # creates a new DevPod asking the user for the label to use jx create devpod # creates a new Maven DevPod jx create devpod -l maven  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for devpod --install-dependencies Should any required dependencies be installed automatically -l, --label string The label of the pod template to use --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --ports ints Container ports exposed by the DevPod -c, --request-cpu string The request CPU of the dev pod (default &amp;quot;1&amp;quot;) --reuse Reuse and existing DevPod for this folder and label if one exists --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found -s, --suffix string The suffix to append the pod name --sync Also synchronise the local file system into the DevPod --verbose Enable verbose logging -w, --working-dir string The working directory of the dev pod  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 4-Sep-2018 </description>
    </item>
    
    <item>
      <title>jx create docker</title>
      <link>https://jenkins-x.io/commands/jx_create_docker/</link>
      <pubDate>Tue, 04 Sep 2018 14:39:09 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_docker/</guid>
      <description></description>
    </item>
    
    <item>
      <title>jx</title>
      <link>https://jenkins-x.io/commands/jx/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx/</guid>
      <description> jx jx is a command line tool for working with Jenkins X
Synopsis jx [flags]  Options  -h, --help help for jx  SEE ALSO  jx cloudbees - Opens the CloudBees app for Kubernetes for visualising CI/CD and your environments jx completion - Output shell completion code for the given shell (bash or zsh) jx compliance - Run compliance tests against Kubernetes cluster jx console - Opens the Jenkins console jx context - View or change the current kubernetes context (kubernetes cluster) jx controller - Runs a controller jx create - Create a new resource jx delete - Deletes one or many resources jx edit - Edit a resource jx environment - View or change the current environment in the current kubernetes cluster jx gc - Garbage collects Jenkins X resources jx get - Display one or many resources jx import - Imports a local project or git repository into Jenkins jx init - Init Jenkins X jx install - Install Jenkins X in the current Kubernetes cluster jx logs - Tails the log of the latest pod for a deployment jx namespace - View or change the current namespace context in the current kubernetes cluster jx open - Open a service in a browser jx options - jx preview - Creates or updates a Preview Environment for the current version of an application jx promote - Promotes a version of an application to an environment jx prompt - Generate the command line prompt for the current team and environment jx repository - Opens the web page for the current git repository in a browser jx rsh - Opens a terminal in a pod or runs a command in the pod jx scan - Perform a scan action jx shell - Create a sub shell so that changes to the kubernetes context, namespace or environment remain local to the shell jx start - Starts a process such as a pipeline jx status - status of the Kubernetes cluster or named node jx step - pipeline steps jx stop - Stops a process such as a pipeline jx sync - Synchronises your local files to a devpod jx team - View or change the current team in the current kubernetes cluster jx uninstall - Uninstall the Jenkins X platform jx update - Updates an existing resource jx upgrade - Upgrades a resource jx version - Print the version information  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create</title>
      <link>https://jenkins-x.io/commands/jx_create/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create/</guid>
      <description> jx create Create a new resource
Synopsis Creates a new resource.
Valid resource types include:
 archetype
 cluster
 env
 git
 spring (aka &amp;lsquo;springboot&amp;rsquo;)
jx create [flags]   Options  -h, --help help for create  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx create addon - Creates an addon jx create archetype - Create a new app from a Maven Archetype and import the generated code into git and Jenkins for CI/CD jx create branchpattern - Create a git branch pattern for your team jx create camel - Create a new camel based application and import the generated code into git and Jenkins for CI/CD jx create chat - Creates a chat server resource jx create cluster - Create a new kubernetes cluster jx create codeship - Creates a build on CodeShip to create/update JX clusters jx create devpod - Creates a Developer Pod for running builds and tests inside the cluster jx create docs - Creates the documentation files jx create environment - Create a new Environment which is used to promote your Team&amp;rsquo;s Applications via Continuous Delivery jx create etc-hosts - Creates a new git server URL jx create git - Creates a git resource jx create gke-service-account - Creates a GKE service account jx create issue - Create an issue on the git project for the current directory jx create jenkins - Creates a jenkins resource jx create jhipster - Create a new JHipster based application and import the generated code into git and Jenkins for CI/CD jx create lile - Create a new lile based application and import the generated code into git and Jenkins for CI/CD jx create micro - Create a new micro based application and import the generated code into git and Jenkins for CI/CD jx create post - Create a job which is triggered after a Preview is created jx create quickstart - Create a new app from a Quickstart and import the generated code into git and Jenkins for CI/CD jx create quickstartlocation - Create a location of quickstarts for your team jx create spring - Create a new spring boot application and import the generated code into git and Jenkins for CI/CD jx create team - Create a new Team which is then provisioned later on jx create terraform - Creates a Jenkins X terraform plan jx create token - Creates a new user token for a service jx create tracker - Creates an issue tracker resource jx create user - Create a new User which is then provisioned by the user controller  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create docs</title>
      <link>https://jenkins-x.io/commands/jx_create_docs/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_docs/</guid>
      <description> jx create docs Creates the documentation files
Synopsis Creates the documentation markdown files
jx create docs [flags]  Examples  # Create the documentation files jx create docs  Options  -d, --dir string the directory to generate the docs into (default &amp;quot;.&amp;quot;) -h, --help help for docs  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create environment</title>
      <link>https://jenkins-x.io/commands/jx_create_environment/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_environment/</guid>
      <description>jx create environment Create a new Environment which is used to promote your Team&amp;rsquo;s Applications via Continuous Delivery
Synopsis Creates a new Environment
An Environment maps to a kubernetes cluster and namespace and is a place that your team&amp;rsquo;s applications can be promoted to via Continous Delivery.
You can optionally use GitOps to manage the configuration of an Environment by storing all configuration in a git repository and then only changing it via Pull Requests and CI/CD.</description>
    </item>
    
    <item>
      <title>jx create etc-hosts</title>
      <link>https://jenkins-x.io/commands/jx_create_etc-hosts/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_etc-hosts/</guid>
      <description> jx create etc-hosts Creates a new git server URL
Synopsis Creates /etc/hosts entries for all current exposed services
jx create etc-hosts kind [url] [flags]  Examples  # Creates /etc/hosts entries for all current exposed services sudo jx create etc-hosts  Options  -h, --help help for etc-hosts -i, --ip string The IP address of the node to point the host entries to -n, --name string The etc hosts file to edit (default &amp;quot;/etc/hosts&amp;quot;)  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create git</title>
      <link>https://jenkins-x.io/commands/jx_create_git/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_git/</guid>
      <description> jx create git Creates a git resource
Synopsis Creates a git resource
jx create git [flags]  Options  -h, --help help for git  SEE ALSO  jx create - Create a new resource jx create git server - Creates a new git server URL jx create git token - Adds a new API token for a user on a git server jx create git user - Adds a new user to the git server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create git server</title>
      <link>https://jenkins-x.io/commands/jx_create_git_server/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_git_server/</guid>
      <description> jx create git server Creates a new git server URL
Synopsis Adds a new Git Server URL
jx create git server kind [url] [flags]  Examples  # Add a new git server jx create git server bitbucket http://bitbucket.org # Add a new git server with a name jx create git server bitbucket http://bitbucket.org -n MyBitBucket For more documentation see: [https://jenkins-x.io/developing/git/](https://jenkins-x.io/developing/git/)  Options  -h, --help help for server -n, --name string The name for the git server being created  SEE ALSO  jx create git - Creates a git resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create git token</title>
      <link>https://jenkins-x.io/commands/jx_create_git_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_git_token/</guid>
      <description> jx create git token Adds a new API token for a user on a git server
Synopsis Creates a new API Token for a user on a Git Server
jx create git token [username] [flags]  Examples  # Add a new API Token for a user for the local git server # prompting the user to find and enter the API Token jx create git token -n local someUserName # Add a new API Token for a user for the local git server # using browser automation to login to the git server # with the username an password to find the API Token jx create git token -n local -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for token --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the git server to add a user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --password string The User password to try automatically create a new API Token --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --timeout string The timeout if using browser automation to generate the API token (by passing username and password) -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create git - Creates a git resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create git user</title>
      <link>https://jenkins-x.io/commands/jx_create_git_user/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_git_user/</guid>
      <description> jx create git user Adds a new user to the git server
Synopsis Creates a new user for a Git Server. Only supported for Gitea so far
jx create git user [username] [flags]  Examples  # Creates a new user in the local gitea server jx create git user -n local someUserName -p somepassword -e foo@bar.com  Options  -a, --admin Whether the user is an admin user -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input -e, --email string The User email address --headless Enable headless operation if using browser automation -h, --help help for user --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the git server to add a user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --password string The User password to try automatically create a new API Token --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create git - Creates a git resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create gke-service-account</title>
      <link>https://jenkins-x.io/commands/jx_create_gke-service-account/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_gke-service-account/</guid>
      <description> jx create gke-service-account Creates a GKE service account
Synopsis Creates a GKE service account
jx create gke-service-account [flags]  Examples  jx create gke-service-account # to specify the options via flags jx create gke-service-account --name my-service-account --project my-gke-project  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for gke-service-account --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the service account to create --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --project string The GCP project to create the service account in --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --skip-login Skip Google auth if already logged in via gloud auth --verbose Enable verbose logging  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create issue</title>
      <link>https://jenkins-x.io/commands/jx_create_issue/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_issue/</guid>
      <description>jx create issue Create an issue on the git project for the current directory
Synopsis Creates an issue in a the git project of the current directory
jx create issue [flags]  Examples  # Create an issue in the current project jx create issue -t &amp;quot;something we should do&amp;quot; # Create an issue with a title and a body jx create issue -t &amp;quot;something we should do&amp;quot; --body &amp;quot; some more text goes here &amp;quot;&amp;quot; &amp;quot;  Options  -b, --batch-mode In batch mode the command never prompts for user input --body string The body of the issue --dir string The source directory used to detect the git repository.</description>
    </item>
    
    <item>
      <title>jx create jenkins</title>
      <link>https://jenkins-x.io/commands/jx_create_jenkins/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_jenkins/</guid>
      <description> jx create jenkins Creates a jenkins resource
Synopsis Creates a jenkins resource
jx create jenkins [flags]  Options  -h, --help help for jenkins  SEE ALSO  jx create - Create a new resource jx create jenkins token - Adds a new username and api token for a Jenkins server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create jenkins token</title>
      <link>https://jenkins-x.io/commands/jx_create_jenkins_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_jenkins_token/</guid>
      <description> jx create jenkins token Adds a new username and api token for a Jenkins server
Synopsis Creates a new user and API Token for the current Jenkins Server
jx create jenkins token [username] [flags]  Examples  # Add a new API Token for a user for the current Jenkins server # prompting the user to find and enter the API Token jx create jenkins token someUserName # Add a new API Token for a user for the current Jenkins server # using browser automation to login to the git server # with the username an password to find the API Token jx create jenkins token -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --browser Use a Chrome browser to automatically find the API token if the user and password are known --headless Enable headless operation if using browser automation -h, --help help for token --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the git server to add a user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --password string The User password to try automatically create a new API Token --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --timeout string The timeout if using browser automation to generate the API token (by passing username and password) -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create jenkins - Creates a jenkins resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create jhipster</title>
      <link>https://jenkins-x.io/commands/jx_create_jhipster/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_jhipster/</guid>
      <description>jx create jhipster Create a new JHipster based application and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new JHipster application and then optionally setups CI/CD pipelines and GitOps promotion.
JHipster is an application generator for gRPC services in Go with a set of tools/libraries.
This command is expected to be run within your &amp;lsquo;$GOHOME&amp;rsquo; directory. e.g. at &amp;lsquo;$GOHOME/src/github.com/myOrgOrUser/&amp;rsquo;
For more documentation about JHipster see: https://www.</description>
    </item>
    
    <item>
      <title>jx create lile</title>
      <link>https://jenkins-x.io/commands/jx_create_lile/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_lile/</guid>
      <description>jx create lile Create a new lile based application and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new lile application and then optionally setups CI/CD pipelines and GitOps promotion.
Lile is an application generator for gRPC services in Go with a set of tools/libraries.
This command is expected to be run within your &amp;lsquo;$GOHOME&amp;rsquo; directory. e.g. at &amp;lsquo;$GOHOME/src/github.com/myOrgOrUser/&amp;rsquo;
For more documentation about lile see: https://github.</description>
    </item>
    
    <item>
      <title>jx create micro</title>
      <link>https://jenkins-x.io/commands/jx_create_micro/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_micro/</guid>
      <description>jx create micro Create a new micro based application and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new micro application and then optionally setups CI/CD pipelines and GitOps promotion.
Micro is an application generator for gRPC services in Go with a set of tools/libraries.
This command is expected to be run within your &amp;lsquo;$GOHOME&amp;rsquo; directory. e.g. at &amp;lsquo;$GOHOME/src/github.com/myOrgOrUser/&amp;rsquo;
For more documentation about micro see: https://github.</description>
    </item>
    
    <item>
      <title>jx create post</title>
      <link>https://jenkins-x.io/commands/jx_create_post/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_post/</guid>
      <description> jx create post Create a job which is triggered after a Preview is created
Synopsis Create a job which is triggered after a Preview is created
jx create post preview job [flags]  Examples  # Create a post preview job jx create post preview job --name owasp --image owasp/zap2docker-stable:latest -c &amp;quot;zap-baseline.py&amp;quot; -c &amp;quot;-t&amp;quot; -c &amp;quot;\$(JX_PREVIEW_URL)&amp;quot;  Options  -l, --backoff-limit int32 The backoff limit: how many times to retry the job before considering it failed) to run in the Job (default 2) -b, --batch-mode In batch mode the command never prompts for user input -c, --commands stringArray The commands to run in the job --headless Enable headless operation if using browser automation -h, --help help for post -i, --image string The image to run in the jobb --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the job --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create quickstart</title>
      <link>https://jenkins-x.io/commands/jx_create_quickstart/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_quickstart/</guid>
      <description>jx create quickstart Create a new app from a Quickstart and import the generated code into git and Jenkins for CI/CD
Synopsis Create a new project from a sample/starter (found in https://github.com/jenkins-x-quickstarts)
This will create a new project for you from the selected template. It will exclude any work-in-progress repos (containing the &amp;ldquo;WIP-&amp;rdquo; pattern)
For more documentation see: https://jenkins-x.io/developing/create-quickstart/
jx create quickstart [flags]  Examples  Create a new project from a sample/starter (found in https://github.</description>
    </item>
    
    <item>
      <title>jx create quickstartlocation</title>
      <link>https://jenkins-x.io/commands/jx_create_quickstartlocation/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_quickstartlocation/</guid>
      <description>jx create quickstartlocation Create a location of quickstarts for your team
Synopsis Create a location of quickstarts for your team
For more documentation see: https://jenkins-x.io/developing/create-quickstart/#customising-your-teams-quickstarts
jx create quickstartlocation [flags]  Examples  # Create a quickstart location using a github repository organisation jx create quickstartlocation --owner my-quickstarts # Create a quickstart location using a github repository organisation via an abbreviation jx create qsloc --owner my-quickstarts # Create a quickstart location for your git repo and organisation jx create quickstartlocation --url https://mygit.</description>
    </item>
    
    <item>
      <title>jx create spring</title>
      <link>https://jenkins-x.io/commands/jx_create_spring/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_spring/</guid>
      <description>jx create spring Create a new spring boot application and import the generated code into git and Jenkins for CI/CD
Synopsis Creates a new Spring Boot application and then optionally setups CI/CD pipelines and GitOps promotion.
You can see a demo of this command here: https://jenkins-x.io/demos/create_spring/
For more documentation see: https://jenkins-x.io/developing/create-spring/
jx create spring [flags]  Examples  # Create a Spring Boot application where you use the terminal to pick the values jx create spring # Creates a Spring Boot application passing in the required dependencies jx create spring -d web -d actuator # To pick the advanced options (such as what package type maven-project/gradle-project) etc then use jx create spring -x # To create a gradle project use: jx create spring --type gradle-project  Options  -x, --advanced Advanced mode can show more detailed forms for some resource kinds like springboot -a, --artifact string Artifact ID to generate -b, --batch-mode In batch mode the command never prompts for user input -t, --boot-version string Spring Boot version --branches string The branch pattern for branches to trigger CI/CD pipelines on --credentials string The Jenkins credentials name used by the job --default-owner string The default user/organisation used if no user is found for the current git repository being imported (default &amp;quot;someone&amp;quot;) -d, --dep stringArray Spring Boot dependencies --dry-run Performs local changes to the repo but skips the import into Jenkins X --git-api-token string The git API token to use for creating new git repositories --git-private Create new git repositories as private --git-provider-url string The git server URL to create new git repositories inside --git-username string The git username to use for creating new git repositories -g, --group string Group ID to generate --headless Enable headless operation if using browser automation -h, --help help for spring --import-commit-message string Should we override the Jenkinsfile in the project?</description>
    </item>
    
    <item>
      <title>jx create team</title>
      <link>https://jenkins-x.io/commands/jx_create_team/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_team/</guid>
      <description>jx create team Create a new Team which is then provisioned later on
Synopsis Creates a Team
jx create team [flags]  Examples  # Create a new pending Team which can then be provisioned jx create team myname &amp;quot;  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for team --install-dependencies Should any required dependencies be installed automatically -m, --member stringArray The usernames of the members to add to the Team -n, --name string The name of the new Team.</description>
    </item>
    
    <item>
      <title>jx create terraform</title>
      <link>https://jenkins-x.io/commands/jx_create_terraform/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_terraform/</guid>
      <description>jx create terraform Creates a Jenkins X terraform plan
Synopsis Creates a Jenkins X terraform plan
jx create terraform [flags]  Examples  jx create terraform # to specify the clusters via flags jx create terraform -c dev=gke -c stage=gke -c prod=gke  Options  -b, --batch-mode In batch mode the command never prompts for user input --cleanup-temp-files Cleans up any temporary values.yaml used by helm install [default true] (default true) --cloud-environment-repo string Cloud Environments git repo (default &amp;quot;https://github.</description>
    </item>
    
    <item>
      <title>jx create token</title>
      <link>https://jenkins-x.io/commands/jx_create_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_token/</guid>
      <description> jx create token Creates a new user token for a service
Synopsis Creates a new user token for a service
jx create token [flags]  Options  -h, --help help for token  SEE ALSO  jx create - Create a new resource jx create token addon - Adds a new token/login for a user for a given addon  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create token addon</title>
      <link>https://jenkins-x.io/commands/jx_create_token_addon/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_token_addon/</guid>
      <description>jx create token addon Adds a new token/login for a user for a given addon
Synopsis Creates a new User Token for an Addon service
jx create token addon [username] [flags]  Examples  # Add a new User Token for an addonservice jx create token addon -n anchore someUserName # As above with the password being passed in jx create token addon -n anchore -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for addon --install-dependencies Should any required dependencies be installed automatically -k, --kind string The kind of addon.</description>
    </item>
    
    <item>
      <title>jx create tracker</title>
      <link>https://jenkins-x.io/commands/jx_create_tracker/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_tracker/</guid>
      <description> jx create tracker Creates an issue tracker resource
Synopsis Creates an issue tracker resource
jx create tracker [flags]  Options  -h, --help help for tracker  SEE ALSO  jx create - Create a new resource jx create tracker server - Creates a new issue tracker server URL jx create tracker token - Adds a new token/login for a user on an issue tracker server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create tracker server</title>
      <link>https://jenkins-x.io/commands/jx_create_tracker_server/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_tracker_server/</guid>
      <description> jx create tracker server Creates a new issue tracker server URL
Synopsis Adds a new Issue Tracker Server URL
jx create tracker server kind [url] [flags]  Examples  # Add a new issue tracker server URL jx create tracker server jira myURL  Options  -h, --help help for server -n, --name string The name for the issue tracker server being created  SEE ALSO  jx create tracker - Creates an issue tracker resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create tracker token</title>
      <link>https://jenkins-x.io/commands/jx_create_tracker_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_tracker_token/</guid>
      <description> jx create tracker token Adds a new token/login for a user on an issue tracker server
Synopsis Creates a new User Token for an Issue Tracker
jx create tracker token [username] [flags]  Examples  # Add a new User Token for an Issue Tracker jx create tracker token -n jira someUserName # As above with the password being passed in jx create git token -n jira -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for token --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the git server to add a user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --timeout string The timeout if using browser automation to generate the API token (by passing username and password) -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create tracker - Creates an issue tracker resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx create user</title>
      <link>https://jenkins-x.io/commands/jx_create_user/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_user/</guid>
      <description> jx create user Create a new User which is then provisioned by the user controller
Synopsis Creates a user
jx create user [flags]  Examples  # Create an issue in the current project jx create issue -t &amp;quot;something we should do&amp;quot; # Create an issue with a title and a body jx create issue -t &amp;quot;something we should do&amp;quot; --body &amp;quot; some more text goes here &amp;quot;&amp;quot; &amp;quot;  Options  -b, --batch-mode In batch mode the command never prompts for user input -e, --email string The users email address --headless Enable headless operation if using browser automation -h, --help help for user --install-dependencies Should any required dependencies be installed automatically -l, --login string The user login name -n, --name string The textual full name of the user --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --role string The user&#39;s role --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete</title>
      <link>https://jenkins-x.io/commands/jx_delete/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete/</guid>
      <description> jx delete Deletes one or many resources
Synopsis Deletes one or many resources.
jx delete TYPE [flags]  Examples  # Delete an environment jx delete env staging  Options  -h, --help help for delete  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx delete addon - Deletes one or many addons jx delete application - Deletes one or many applications from Jenkins jx delete chat - Deletes one or many chat services resources jx delete contexts - Deletes one or more kubernetes contexts jx delete devpod - Deletes one or many DevPods jx delete environment - Deletes one or more environments jx delete git - Deletes one or many git resources jx delete jenkins - Deletes one or many jenkins resources jx delete post - Create a job which is triggered after a Preview is created jx delete preview - Deletes a preview environment jx delete quickstartlocation - Deletes one or more quickstart locations for your team jx delete repo - Deletes one or more git repositories jx delete team - Deletes one or many teams and their associated resources (Environments, Jenkins etc) jx delete token - Deletes one or many issue token resources jx delete tracker - Deletes one or many issue tracker resources jx delete user - Deletes one or many users  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete addon</title>
      <link>https://jenkins-x.io/commands/jx_delete_addon/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_addon/</guid>
      <description> jx delete addon Deletes one or many addons
Synopsis Deletes one or many addons
jx delete addon [flags]  Options  -h, --help help for addon -p, --purge Removes the release name from helm so it can be reused again (default true)  SEE ALSO  jx delete - Deletes one or many resources jx delete addon cloudbees - Deletes the CloudBees app for Kubernetes addon jx delete addon gitea - Deletes the gitea addon  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete addon cloudbees</title>
      <link>https://jenkins-x.io/commands/jx_delete_addon_cloudbees/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_addon_cloudbees/</guid>
      <description> jx delete addon cloudbees Deletes the CloudBees app for Kubernetes addon
Synopsis Deletes the CloudBees addon
jx delete addon cloudbees [flags]  Examples  # Deletes the CloudBees addon jx delete addon cloudbees  Options  -h, --help help for cloudbees -p, --purge Removes the release name from helm so it can be reused again (default true) -r, --release string The chart release name (default &amp;quot;cb&amp;quot;)  SEE ALSO  jx delete addon - Deletes one or many addons  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete addon gitea</title>
      <link>https://jenkins-x.io/commands/jx_delete_addon_gitea/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_addon_gitea/</guid>
      <description> jx delete addon gitea Deletes the gitea addon
Synopsis Deletes the gitea addon
jx delete addon gitea [flags]  Examples  # Deletes the gitea addon jx delete addon gitea  Options  -h, --help help for gitea -p, --purge Removes the release name from helm so it can be reused again (default true) -r, --release string The chart release name (default &amp;quot;gitea&amp;quot;)  SEE ALSO  jx delete addon - Deletes one or many addons  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete application</title>
      <link>https://jenkins-x.io/commands/jx_delete_application/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_application/</guid>
      <description>jx delete application Deletes one or many applications from Jenkins
Synopsis Deletes one or more Applications from Jenkins
Note that this command does not remove the underlying Git Repositories.
For that see the https://jenkins-x.io/commands/jx_delete_repo/command.
jx delete application [flags]  Examples  # prompt for the available apps to delete jx delete app # delete a specific app jx delete app cheese  Options  -a, --all Selects all the matched apps -b, --batch-mode Run without being prompted.</description>
    </item>
    
    <item>
      <title>jx delete chat</title>
      <link>https://jenkins-x.io/commands/jx_delete_chat/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_chat/</guid>
      <description> jx delete chat Deletes one or many chat services resources
Synopsis Deletes one or many chat services resources
jx delete chat [flags]  Options  -h, --help help for chat  SEE ALSO  jx delete - Deletes one or many resources jx delete chat server - Deletes one or more chat server(s) jx delete chat token - Deletes one or more api tokens for a user on a chat server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete chat server</title>
      <link>https://jenkins-x.io/commands/jx_delete_chat_server/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_chat_server/</guid>
      <description> jx delete chat server Deletes one or more chat server(s)
Synopsis Deletes one or more chat servers from your local settings
jx delete chat server [flags]  Examples  # Deletes an chat server jx delete chat server MyProvider  Options  -h, --help help for server -i, --ignore-missing Silently ignore attempts to remove an chat server name that does not exist  SEE ALSO  jx delete chat - Deletes one or many chat services resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete chat token</title>
      <link>https://jenkins-x.io/commands/jx_delete_chat_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_chat_token/</guid>
      <description> jx delete chat token Deletes one or more api tokens for a user on a chat server
Synopsis Deletes one or more API tokens for your chat server from your local settings
jx delete chat token [flags]  Examples  # Deletes a chat user token jx delete chat token -n slack myusername  Options  -h, --help help for token -n, --name string The name of the git server to add a user -u, --url string The URL of the git server to add a user  SEE ALSO  jx delete chat - Deletes one or many chat services resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete contexts</title>
      <link>https://jenkins-x.io/commands/jx_delete_contexts/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_contexts/</guid>
      <description> jx delete contexts Deletes one or more kubernetes contexts
Synopsis Deletes one or more kubernetes contexts.
jx delete contexts [flags]  Examples  # Deletes a context for a cluster that no longer exists jx delete context something # Deletes all contexts containing the word cheese # selecting them all by default jx delete ctx -a cheese  Options  -a, --all Selects all the matched contexts -f, --filter string Filter the list of contexts to those containing this text -h, --help help for contexts  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete devpod</title>
      <link>https://jenkins-x.io/commands/jx_delete_devpod/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_devpod/</guid>
      <description> jx delete devpod Deletes one or many DevPods
Synopsis Deletes one or more DevPods
For more documentation see: https://jenkins-x.io/developing/devpods/
jx delete devpod [flags]  Examples  # deletes a DevPod by picking one from the list and confirming to it jx delete devpod # delete a specific DevPod jx delete devpod myuser-maven2  Options  -h, --help help for devpod  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete environment</title>
      <link>https://jenkins-x.io/commands/jx_delete_environment/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_environment/</guid>
      <description> jx delete environment Deletes one or more environments
Synopsis Deletes one or more environments.
jx delete environment [flags]  Examples  # Deletes an environment jx delete env staging  Options  -h, --help help for environment -n, --namespace Delete the namespace for the Environment too?  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete git</title>
      <link>https://jenkins-x.io/commands/jx_delete_git/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_git/</guid>
      <description> jx delete git Deletes one or many git resources
Synopsis Deletes one or many git resources
jx delete git [flags]  Options  -h, --help help for git  SEE ALSO  jx delete - Deletes one or many resources jx delete git server - Deletes one or more git servers jx delete git token - Deletes one or more api tokens for a user on a git server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete git server</title>
      <link>https://jenkins-x.io/commands/jx_delete_git_server/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_git_server/</guid>
      <description> jx delete git server Deletes one or more git servers
Synopsis Deletes one or more git servers from your local settings
jx delete git server [flags]  Examples  # Deletes a git provider jx delete git server MyProvider  Options  -h, --help help for server -i, --ignore-missing Silently ignore attempts to remove a git server name that does not exist  SEE ALSO  jx delete git - Deletes one or many git resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete git token</title>
      <link>https://jenkins-x.io/commands/jx_delete_git_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_git_token/</guid>
      <description> jx delete git token Deletes one or more api tokens for a user on a git server
Synopsis Deletes one or more git tokens from your local settings
jx delete git token [flags]  Examples  # Deletes a git user token jx delete git token -n local myusername  Options  -h, --help help for token -n, --name string The name of the git server to add a user -u, --url string The URL of the git server to add a user  SEE ALSO  jx delete git - Deletes one or many git resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete jenkins</title>
      <link>https://jenkins-x.io/commands/jx_delete_jenkins/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_jenkins/</guid>
      <description> jx delete jenkins Deletes one or many jenkins resources
Synopsis Deletes one or many jenkins resources
jx delete jenkins [flags]  Options  -h, --help help for jenkins  SEE ALSO  jx delete - Deletes one or many resources jx delete jenkins user - Deletes one or more jenkins user api tokens  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete jenkins user</title>
      <link>https://jenkins-x.io/commands/jx_delete_jenkins_user/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_jenkins_user/</guid>
      <description> jx delete jenkins user Deletes one or more jenkins user api tokens
Synopsis Deletes one or more jenkins user tokens from your local settings
jx delete jenkins user [flags]  Examples  # Deletes the current jenkins token jx delete jenkins user admin  Options  -h, --help help for user -n, --name string The name of the git server to add a user -u, --url string The URL of the git server to add a user  SEE ALSO  jx delete jenkins - Deletes one or many jenkins resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete post</title>
      <link>https://jenkins-x.io/commands/jx_delete_post/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_post/</guid>
      <description> jx delete post Create a job which is triggered after a Preview is created
Synopsis Delete a job which is triggered after a Preview is created
jx delete post preview job [flags]  Examples  # Delete a post preview job jx delete post preview job --name owasp  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for post --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the job to be deleted --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete preview</title>
      <link>https://jenkins-x.io/commands/jx_delete_preview/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_preview/</guid>
      <description>jx delete preview Deletes a preview environment
Synopsis Deletes a preview environment
jx delete preview [flags]  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --cluster string The Kubernetes cluster for the Environment. If blank and a namespace is specified assumes the current cluster --dev-namespace string The Developer namespace where the preview command should run --dir string The source directory used to detect the git source URL and reference --headless Enable headless operation if using browser automation -h, --help help for preview --install-dependencies Should any required dependencies be installed automatically -l, --label string The Environment label which is a descriptive string like &#39;Production&#39; or &#39;Staging&#39; -n, --name string The Environment resource name.</description>
    </item>
    
    <item>
      <title>jx delete quickstartlocation</title>
      <link>https://jenkins-x.io/commands/jx_delete_quickstartlocation/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_quickstartlocation/</guid>
      <description>jx delete quickstartlocation Deletes one or more quickstart locations for your team
Synopsis Deletes one or more quickstart locations for your team
For more documentation see: https://jenkins-x.io/developing/create-quickstart/#customising-your-teams-quickstarts
jx delete quickstartlocation [flags]  Examples  # Pick a quickstart location to delete for your team jx delete quickstartlocation # Pick a quickstart location to delete for your team using an abbreviation jx delete qsloc # Delete a github organisation &#39;myorg&#39; for your team jx delete qsloc --owner myorg # Delete a specific location for your team jx delete qsloc --url https://foo.</description>
    </item>
    
    <item>
      <title>jx delete repo</title>
      <link>https://jenkins-x.io/commands/jx_delete_repo/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_repo/</guid>
      <description>jx delete repo Deletes one or more git repositories
Synopsis Deletes one or more repositories.
This command will require the delete repo role on your Persona Access Token.
Note that command will ask for confirmation before doing anything!
jx delete repo [flags]  Examples  # Selects the repositories to delete from the given github organisation jx delete repo --github --org myname # Selects all the repositories in organisation myname that contain &#39;foo&#39; # you get a chance to select which ones not to delete jx delete repo --github --org myname --all --filter foo  Options  -a, --all If selecting projects to import from a git provider this defaults to selecting them all -b, --batch-mode Run without being prompted.</description>
    </item>
    
    <item>
      <title>jx delete team</title>
      <link>https://jenkins-x.io/commands/jx_delete_team/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_team/</guid>
      <description> jx delete team Deletes one or many teams and their associated resources (Environments, Jenkins etc)
Synopsis Deletes one or many teams and their associated resources (Environments, Jenkins etc)
jx delete team [flags]  Examples  # Delete the named team jx delete team cheese # Delete the teams matching the given filter jx delete team -f foo  Options  -a, --all Should we default to selecting all the matched teams for deletion -b, --batch-mode In batch mode the command never prompts for user input -f, --filter string Fitlers the list of teams you can pick from --headless Enable headless operation if using browser automation -h, --help help for team --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -y, --yes Confirms we should uninstall this installation  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete token</title>
      <link>https://jenkins-x.io/commands/jx_delete_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_token/</guid>
      <description> jx delete token Deletes one or many issue token resources
Synopsis Deletes one or many issue token resources
jx delete token [flags]  Options  -h, --help help for token  SEE ALSO  jx delete - Deletes one or many resources jx delete token addon - Deletes one or more api tokens for a user on an issue addon server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete token addon</title>
      <link>https://jenkins-x.io/commands/jx_delete_token_addon/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_token_addon/</guid>
      <description> jx delete token addon Deletes one or more api tokens for a user on an issue addon server
Synopsis Deletes one or more API tokens for your addon from your local settings
jx delete token addon [flags]  Examples  # Deletes an addon user token jx delete token addon -n anchore myusername  Options  -h, --help help for addon -k, --kind string The kind of addon. Defaults to the addon name if not specified -n, --name string The name of the git server to add a user -u, --url string The URL of the git server to add a user  SEE ALSO  jx delete token - Deletes one or many issue token resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete tracker</title>
      <link>https://jenkins-x.io/commands/jx_delete_tracker/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_tracker/</guid>
      <description> jx delete tracker Deletes one or many issue tracker resources
Synopsis Deletes one or many issue tracker resources
jx delete tracker [flags]  Options  -h, --help help for tracker  SEE ALSO  jx delete - Deletes one or many resources jx delete tracker server - Deletes one or more issue tracker server(s) jx delete tracker token - Deletes one or more api tokens for a user on an issue tracker server  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete tracker server</title>
      <link>https://jenkins-x.io/commands/jx_delete_tracker_server/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_tracker_server/</guid>
      <description> jx delete tracker server Deletes one or more issue tracker server(s)
Synopsis Deletes one or more issue tracker servers from your local settings
jx delete tracker server [flags]  Examples  # Deletes an issue tracker server jx delete tracker server MyProvider  Options  -h, --help help for server -i, --ignore-missing Silently ignore attempts to remove an issue tracker server name that does not exist  SEE ALSO  jx delete tracker - Deletes one or many issue tracker resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete tracker token</title>
      <link>https://jenkins-x.io/commands/jx_delete_tracker_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_tracker_token/</guid>
      <description> jx delete tracker token Deletes one or more api tokens for a user on an issue tracker server
Synopsis Deletes one or more API tokens for your issue tracker from your local settings
jx delete tracker token [flags]  Examples  # Deletes an issue tracker user token jx delete tracker token -n jira myusername  Options  -h, --help help for token -n, --name string The name of the git server to add a user -u, --url string The URL of the git server to add a user  SEE ALSO  jx delete tracker - Deletes one or many issue tracker resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx delete user</title>
      <link>https://jenkins-x.io/commands/jx_delete_user/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_user/</guid>
      <description> jx delete user Deletes one or many users
Synopsis Deletes one or many users
jx delete user [flags]  Examples  # Delete the user with the login of cheese jx delete user cheese  Options  -a, --all Should we default to selecting all the matched users for deletion -b, --batch-mode In batch mode the command never prompts for user input -f, --filter string Fitlers the list of users you can pick from --headless Enable headless operation if using browser automation -h, --help help for user --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -y, --yes Confirms we should uninstall this installation  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit</title>
      <link>https://jenkins-x.io/commands/jx_edit/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit/</guid>
      <description> jx edit Edit a resource
Synopsis Edit a resource
jx edit [flags]  Examples  # Lets edit the staging Environment jx edit env staging  Options  -h, --help help for edit  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx edit addon - Edits the addon configuration jx edit branchpattern - Create a git branch pattern for your team jx edit buildpack - Edits the build pack configuration for your team jx edit config - Edits the project configuration jx edit environment - Edits an Environment which is used to promote your Team&amp;rsquo;s Applications via Continuous Delivery jx edit helmbin - Configures the helm binary version used by your team  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit addon</title>
      <link>https://jenkins-x.io/commands/jx_edit_addon/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_addon/</guid>
      <description> jx edit addon Edits the addon configuration
Synopsis Edits an addon
jx edit addon [flags]  Examples  # Enables or disbles an addon jx edit addon # Enables or disables an addon jx edit addon -e true gitea  Options  -e, --enabled string Enables or disables the addon -h, --help help for addon  SEE ALSO  jx edit - Edit a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit branchpattern</title>
      <link>https://jenkins-x.io/commands/jx_edit_branchpattern/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_branchpattern/</guid>
      <description> jx edit branchpattern Create a git branch pattern for your team
Synopsis Create a git branch pattern for your team.
The pattern should match all the branches you wish to automate CI/CD on when creating or importing projects.
For more documentation see: https://jenkins-x.io/developing/import/#branch-patterns
jx edit branchpattern [flags]  Examples  # Create a branch pattern for your team jx create branch pattern &amp;quot;master|develop|PR-.*&amp;quot;  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for branchpattern --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx edit - Edit a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit buildpack</title>
      <link>https://jenkins-x.io/commands/jx_edit_buildpack/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_buildpack/</guid>
      <description> jx edit buildpack Edits the build pack configuration for your team
Synopsis Edits the build pack configuration for your team
jx edit buildpack [flags]  Examples  # Edit the build pack configuration for your team jx edit buildpack For more documentation see: [https://jenkins-x.io/architecture/build-packs/](https://jenkins-x.io/architecture/build-packs/)  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for buildpack --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -r, --ref string The git reference (branch,tag,sha) in the git repository touse --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found -u, --url string The URL for the build pack git repository --verbose Enable verbose logging  SEE ALSO  jx edit - Edit a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit config</title>
      <link>https://jenkins-x.io/commands/jx_edit_config/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_config/</guid>
      <description> jx edit config Edits the project configuration
Synopsis Edits the project configuration
jx edit config [flags]  Examples  # Edit the project configuration for the current directory jx edit config  Options  -d, --dir string The root project directory -h, --help help for config -k, --kind string The kind of configuration to edit root project directory. Possible values chat, issues, wiki  SEE ALSO  jx edit - Edit a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx edit environment</title>
      <link>https://jenkins-x.io/commands/jx_edit_environment/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_environment/</guid>
      <description>jx edit environment Edits an Environment which is used to promote your Team&amp;rsquo;s Applications via Continuous Delivery
Synopsis Edits a new Environment
An Environment maps to a kubernetes cluster and namespace and is a place that your team&amp;rsquo;s applications can be promoted to via Continous Delivery.
You can optionally use GitOps to manage the configuration of an Environment by storing all configuration in a git repository and then only changing it via Pull Requests and CI/CD.</description>
    </item>
    
    <item>
      <title>jx edit helmbin</title>
      <link>https://jenkins-x.io/commands/jx_edit_helmbin/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_edit_helmbin/</guid>
      <description> jx edit helmbin Configures the helm binary version used by your team
Synopsis Configures the helm binary version used by your team
This lets you switch between helm and helm3
jx edit helmbin [flags]  Examples  # To switch your team to helm3 use: jx edit helmbin helm3 # To switch back to 2.x use: jx edit helmbin helm  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for helmbin --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx edit - Edit a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx environment</title>
      <link>https://jenkins-x.io/commands/jx_environment/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_environment/</guid>
      <description> jx environment View or change the current environment in the current kubernetes cluster
Synopsis Displays or changes the current environment.
For more documentation on Environments see: https://jenkins-x.io/about/features/#environments
jx environment [flags]  Examples  # view the current environment jx env -b # pick which environment to switch to jx env # Change the current environment to &#39;staging&#39; jx env staging  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for environment --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx gc</title>
      <link>https://jenkins-x.io/commands/jx_gc/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc/</guid>
      <description> jx gc Garbage collects Jenkins X resources
Synopsis Garbage collect resources
Valid resource types include:
 activities
 helm
 previews
 releases
jx gc TYPE [flags]   Examples  jx gc previews jx gc activities jx gc helm jx gc gke jx gc previews jx gc releases  Options  -h, --help help for gc  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx gc activities - garbage collection for activities jx gc gke - garbage collection for gke jx gc helm - garbage collection for Helm ConfigMaps jx gc previews - garbage collection for preview environments jx gc releases - garbage collection for Releases  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx gc activities</title>
      <link>https://jenkins-x.io/commands/jx_gc_activities/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc_activities/</guid>
      <description> jx gc activities garbage collection for activities
Synopsis Garbage collect the Jenkins X Activity Custom Resource Definitions
jx gc activities [flags]  Examples  jx garbage collect activities jx gc activities  Options  -h, --help help for activities -l, --revision-history-limit int Minimum number of Activities per application to keep (default 5)  SEE ALSO  jx gc - Garbage collects Jenkins X resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx gc gke</title>
      <link>https://jenkins-x.io/commands/jx_gc_gke/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc_gke/</guid>
      <description> jx gc gke garbage collection for gke
Synopsis Garbage collect Google Container Engine resources that are not deleted when a delete cluster is performed
This command will generate the gcloud command to run and delete external loadbalancers and persistent disks that are no longer in use.
jx gc gke [flags]  Examples  jx garbage collect gke jx gc gke  Options  -h, --help help for gke  SEE ALSO  jx gc - Garbage collects Jenkins X resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx gc helm</title>
      <link>https://jenkins-x.io/commands/jx_gc_helm/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc_helm/</guid>
      <description>jx gc helm garbage collection for Helm ConfigMaps
Synopsis Garbage collect Helm ConfigMaps. To facilitate rollbacks, Helm leaves a history of chart versions in place in Kubernetes and these should be pruned at intervals to avoid consuming excessive system resources.
jx gc helm [flags]  Examples  jx garbage collect helm jx gc helm  Options  -b, --batch-mode In batch mode the command never prompts for user input --dry-run Does not perform the delete operation on Kubernetes --headless Enable headless operation if using browser automation -h, --help help for helm --install-dependencies Should any required dependencies be installed automatically --no-backup Does not perform the backup operation to store files locally --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -o, --output-dir string Relative directory to output backup to.</description>
    </item>
    
    <item>
      <title>jx gc previews</title>
      <link>https://jenkins-x.io/commands/jx_gc_previews/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc_previews/</guid>
      <description> jx gc previews garbage collection for preview environments
Synopsis Garbage collect Jenkins X preview environments. If a pull request is merged or closed the associated preview environment will be deleted.
jx gc previews [flags]  Examples  jx garbage collect previews jx gc previews  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for previews --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx gc - Garbage collects Jenkins X resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx gc releases</title>
      <link>https://jenkins-x.io/commands/jx_gc_releases/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_gc_releases/</guid>
      <description> jx gc releases garbage collection for Releases
Synopsis Garbage collect the Jenkins X Activity Custom Resource Definitions
jx gc releases [flags]  Examples  jx garbage collect releases jx gc releases  Options  -h, --help help for releases -l, --revision-history-limit int Minimum number of Releases per application to keep (default 5)  SEE ALSO  jx gc - Garbage collects Jenkins X resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get</title>
      <link>https://jenkins-x.io/commands/jx_get/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get/</guid>
      <description> jx get Display one or many resources
Synopsis Display one or many resources.
Valid resource types include:
 environments (aka &amp;lsquo;env&amp;rsquo;)
 pipelines (aka &amp;lsquo;pipe&amp;rsquo;)
 urls (aka &amp;lsquo;url&amp;rsquo;)
jx get TYPE [flags]   Examples  # List all pipeines jx get pipeline # List all URLs for services in the current namespace jx get url  Options  -h, --help help for get  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx get activities - Display one or many Activities on projects jx get addons - Lists the addons jx get applications - Display one or many Applications and their versions jx get aws - Displays AWS account information jx get branchpattern - Display the git branch patterns for the current Team used on creating and importing projects jx get build - Display one or many build resources jx get buildpack - Display the teams build pack git repository and references used for the current Team used on creating and importing projects jx get chat - Display the current registered chat service URLs jx get config - Display the project configuration jx get cve - Display Common Vulnerabilities and Exposures (CVEs) jx get devpod - Lists the DevPods jx get environments - Display one or many Environments jx get git - Display the current registered git service URLs jx get helmbin - Display the helm binary name used in the pipelines jx get issue - Display the status of an issue jx get issues - Display one or many issues jx get pipelines - Display one or many Pipelines jx get post - Create a job which is triggered after a Preview is created jx get previews - Display one or many Preview Environments jx get quickstartlocations - Display one or many Quickstart Locations jx get releases - Display the Release or Releases the current user is a member of jx get teams - Display the Team or Teams the current user is a member of jx get token - Display the tokens for different kinds of services jx get tracker - Display the current registered issue tracker service URLs jx get urls - Display one or many URLs jx get users - Display the User or Users the current user is a member of jx get workflows - Display either all the available workflows or a specific workflow  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get activities</title>
      <link>https://jenkins-x.io/commands/jx_get_activities/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_activities/</guid>
      <description> jx get activities Display one or many Activities on projects
Synopsis Display the current activities for one more more projects.
jx get activities [flags]  Examples  # List the current activities for all applications in the current team jx get activities # List the current activities for application &#39;foo&#39; jx get act -f foo # Watch the activities for application &#39;foo&#39; jx get act -f foo -w  Options  -b, --build string The build number to filter on -f, --filter string Text to filter the pipeline names -h, --help help for activities -w, --watch Whether to watch the activities for changes  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get addons</title>
      <link>https://jenkins-x.io/commands/jx_get_addons/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_addons/</guid>
      <description> jx get addons Lists the addons
Synopsis Display the available addons
jx get addons [flags]  Examples  # List all the possible addons jx get addon  Options  -h, --help help for addons  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get applications</title>
      <link>https://jenkins-x.io/commands/jx_get_applications/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_applications/</guid>
      <description> jx get applications Display one or many Applications and their versions
Synopsis Display applications across environments.
jx get applications [flags]  Examples  # List applications, their URL and pod counts for all environments jx get apps # List applications only in the Staging environment jx get apps -e staging # List applications only in the Production environment jx get apps -e production # List applications only in a specific namespace jx get apps -n jx-staging # List applications hiding the URLs jx get apps -u # List applications just showing the versions (hiding urls and pod counts) jx get apps -u -p  Options  -e, --env string Filter applications in the given environment -h, --help help for applications -n, --namespace string Filter applications in the given namespace -p, --pod Hide the pod counts -w, --preview Show preview environments only -u, --url Hide the URLs  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get aws</title>
      <link>https://jenkins-x.io/commands/jx_get_aws/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_aws/</guid>
      <description> jx get aws Displays AWS account information
Synopsis Display the AWS information for the current user
jx get aws info [flags]  Examples  # Get the AWS account information jx get aws info  Options  -h, --help help for aws -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get branchpattern</title>
      <link>https://jenkins-x.io/commands/jx_get_branchpattern/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_branchpattern/</guid>
      <description> jx get branchpattern Display the git branch patterns for the current Team used on creating and importing projects
Synopsis Display the git branch patterns for the current Team used on creating and importing projects
For more documentation see: https://jenkins-x.io/developing/import/#branch-patterns
jx get branchpattern [flags]  Examples  # List the git branch patterns for the current team jx get branchpattern  Options  -h, --help help for branchpattern -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get build</title>
      <link>https://jenkins-x.io/commands/jx_get_build/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_build/</guid>
      <description> jx get build Display one or many build resources
Synopsis Display one or many resources.
Valid resource types include:
 environments (aka &amp;lsquo;env&amp;rsquo;)
 pipelines (aka &amp;lsquo;pipe&amp;rsquo;)
 urls (aka &amp;lsquo;url&amp;rsquo;)
jx get build [flags]   Examples  # List all pipeines jx get pipeline # List all URLs for services in the current namespace jx get url  Options  -h, --help help for build  SEE ALSO  jx get - Display one or many resources jx get build log - Display a build log  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get build log</title>
      <link>https://jenkins-x.io/commands/jx_get_build_log/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_build_log/</guid>
      <description> jx get build log Display a build log
Synopsis Display the git server URLs.
jx get build log [flags]  Examples  # List all registered git server URLs jx get git  Options  -b, --build int The build number to view -f, --filter string Filters all the available jobs by those that contain the given text -h, --help help for log -t, --tail Tails the build log to the current terminal (default true)  SEE ALSO  jx get build - Display one or many build resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get buildpack</title>
      <link>https://jenkins-x.io/commands/jx_get_buildpack/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_buildpack/</guid>
      <description> jx get buildpack Display the teams build pack git repository and references used for the current Team used on creating and importing projects
Synopsis Display the teams build pack git repository and references used for the current Team used on creating and importing projects
For more documentation see: https://jenkins-x.io/architecture/build-packs/
jx get buildpack [flags]  Examples  # List the build pack the current team jx get buildpack  Options  -h, --help help for buildpack -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get chat</title>
      <link>https://jenkins-x.io/commands/jx_get_chat/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_chat/</guid>
      <description> jx get chat Display the current registered chat service URLs
Synopsis Display the chat server URLs.
jx get chat [flags]  Examples  # List all registered chat server URLs jx get chat  Options  -h, --help help for chat -k, --kind string Filters the chats by the kinds: slack, irc  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get config</title>
      <link>https://jenkins-x.io/commands/jx_get_config/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_config/</guid>
      <description> jx get config Display the project configuration
Synopsis Display the project configuration
jx get config [flags]  Examples  # View the project configuration jx get config  Options  -d, --dir string The root project directory -h, --help help for config  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get cve</title>
      <link>https://jenkins-x.io/commands/jx_get_cve/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_cve/</guid>
      <description>jx get cve Display Common Vulnerabilities and Exposures (CVEs)
Synopsis Display Common Vulnerabilities and Exposures (CVEs)
jx get cve [flags]  Examples  # List all Common Vulnerabilities and Exposures (CVEs) jx get cve # using current dir as the context for app name jx get cve --app foo jx get cve --app foo --version 1.0.0 jx get cve --app foo --environment staging jx get cve --environment staging  Options  -b, --batch-mode In batch mode the command never prompts for user input -e, --environment string The Environment to find running applications --headless Enable headless operation if using browser automation -h, --help help for cve --image-id string Image ID in CVE engine if already known --image-name string Full image name e.</description>
    </item>
    
    <item>
      <title>jx get devpod</title>
      <link>https://jenkins-x.io/commands/jx_get_devpod/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_devpod/</guid>
      <description> jx get devpod Lists the DevPods
Synopsis Display the available DevPods
For more documentation see: https://jenkins-x.io/developing/devpods/
jx get devpod [flags]  Examples  # List all the possible DevPods jx get devPod  Options  -h, --help help for devpod  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get environments</title>
      <link>https://jenkins-x.io/commands/jx_get_environments/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_environments/</guid>
      <description> jx get environments Display one or many Environments
Synopsis Display one or many environments.
jx get environments [flags]  Examples  # List all environments jx get environments # List all environments using the shorter alias jx get env  Options  -h, --help help for environments -o, --output string The output format such as &#39;yaml&#39; -p, --promote string Filters the environments by promotion strategy. Possible values: Auto, Manual, Never  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get git</title>
      <link>https://jenkins-x.io/commands/jx_get_git/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_git/</guid>
      <description> jx get git Display the current registered git service URLs
Synopsis Display the git server URLs.
jx get git [flags]  Examples  # List all registered git server URLs jx get git  Options  -h, --help help for git  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get helmbin</title>
      <link>https://jenkins-x.io/commands/jx_get_helmbin/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_helmbin/</guid>
      <description> jx get helmbin Display the helm binary name used in the pipelines
Synopsis Display the helm binary name used in pipelines.
This setting lets you switch from the stable release to early access releases (e.g. from helm 2 &amp;lt;-&amp;gt; 3)
jx get helmbin [flags]  Examples  # List the git branch patterns for the current team jx get helmbin  Options  -h, --help help for helmbin -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get issue</title>
      <link>https://jenkins-x.io/commands/jx_get_issue/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_issue/</guid>
      <description> jx get issue Display the status of an issue
Synopsis Display the status of an issue for a project.
jx get issue [flags]  Examples  # Get the status of an issue for a project jx get issue --id ISSUE_ID  Options  -d, --dir string The root project directory -h, --help help for issue -i, --id string The issue ID -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get issues</title>
      <link>https://jenkins-x.io/commands/jx_get_issues/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_issues/</guid>
      <description> jx get issues Display one or many issues
Synopsis Display one or many issues for a project.
jx get issues [flags]  Examples  # List open issues on the current project jx get issues  Options  -d, --dir string The root project directory -h, --help help for issues -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get pipelines</title>
      <link>https://jenkins-x.io/commands/jx_get_pipelines/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_pipelines/</guid>
      <description> jx get pipelines Display one or many Pipelines
Synopsis Display one or many pipelines.
jx get pipelines [flags]  Examples  # List all pipelines jx get pipeline  Options  -h, --help help for pipelines -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get post</title>
      <link>https://jenkins-x.io/commands/jx_get_post/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_post/</guid>
      <description> jx get post Create a job which is triggered after a Preview is created
Synopsis Gets the jobs which are triggered after a Preview is created
jx get post preview job [flags]  Examples  # List the jobs triggered after a Preview is created jx get post preview job  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for post --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get previews</title>
      <link>https://jenkins-x.io/commands/jx_get_previews/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_previews/</guid>
      <description> jx get previews Display one or many Preview Environments
Synopsis Display one or many environments.
jx get previews [flags]  Examples  # List all preview environments jx get previews # View the current preview environment URL # inside a CI pipeline jx get preview --current  Options  -c, --current Output the URL of the current Preview application the current pipeline just deployed -h, --help help for previews -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get quickstartlocations</title>
      <link>https://jenkins-x.io/commands/jx_get_quickstartlocations/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_quickstartlocations/</guid>
      <description> jx get quickstartlocations Display one or many Quickstart Locations
Synopsis Display one or many Quickstart Locations for the current Team.
For more documentation see: https://jenkins-x.io/developing/create-quickstart/#customising-your-teams-quickstarts
jx get quickstartlocations [flags]  Examples  # List all the quickstart locations jx get quickstartlocations # List all the quickstart locations via an alias jx get qsloc  Options  -h, --help help for quickstartlocations -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get releases</title>
      <link>https://jenkins-x.io/commands/jx_get_releases/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_releases/</guid>
      <description> jx get releases Display the Release or Releases the current user is a member of
Synopsis Display one or more Releases
jx get releases [flags]  Examples  # List the recent releases done by this team jx get release # Filter the releases jx get release -f myapp  Options  -f, --filter string Filter the releases with the given text -h, --help help for releases -n, --namespace string The namespace to view or defaults to the current namespace -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get teams</title>
      <link>https://jenkins-x.io/commands/jx_get_teams/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_teams/</guid>
      <description> jx get teams Display the Team or Teams the current user is a member of
Synopsis Display the Team or Teams a user is a member of.
jx get teams [flags]  Examples  # List the provisioned team or teams the current user is a member of jx get team # List the pending Teams which are not yet provisioned and available for use jx get team -p  Options  -h, --help help for teams -o, --output string The output format such as &#39;yaml&#39; -p, --pending Display only pending Teams which are not yet provisioned yet  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get token</title>
      <link>https://jenkins-x.io/commands/jx_get_token/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_token/</guid>
      <description> jx get token Display the tokens for different kinds of services
Synopsis Display the tokens for different kinds of services
jx get token [flags]  Options  -h, --help help for token  SEE ALSO  jx get - Display one or many resources jx get token addon - Display the current users and if they have a token for the addons  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get token addon</title>
      <link>https://jenkins-x.io/commands/jx_get_token_addon/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_token_addon/</guid>
      <description> jx get token addon Display the current users and if they have a token for the addons
Synopsis Display the users with tokens for the addons
jx get token addon [flags]  Examples  # List all users with tokens for all addons jx get token addon  Options  -h, --help help for addon -k, --kind string Filters the services by the kind -n, --name string Filters the services by the name  SEE ALSO  jx get token - Display the tokens for different kinds of services  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get tracker</title>
      <link>https://jenkins-x.io/commands/jx_get_tracker/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_tracker/</guid>
      <description> jx get tracker Display the current registered issue tracker service URLs
Synopsis Display the issue tracker server URLs.
jx get tracker [flags]  Examples  # List all registered issue tracker server URLs jx get tracker  Options  -h, --help help for tracker -k, --kind string Filters the issue trackers by the kinds: bugzilla, jira, trello  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get urls</title>
      <link>https://jenkins-x.io/commands/jx_get_urls/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_urls/</guid>
      <description> jx get urls Display one or many URLs
Synopsis Display one or many URLs from the running services.
jx get urls [flags]  Examples  # List all URLs in this namespace jx get url  Options  -e, --env string Specifies the Environment name to look inside -h, --help help for urls -n, --namespace string Specifies the namespace name to look inside  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get users</title>
      <link>https://jenkins-x.io/commands/jx_get_users/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_users/</guid>
      <description> jx get users Display the User or Users the current user is a member of
Synopsis Display the Users
jx get users [flags]  Examples  # List the users jx get user  Options  -h, --help help for users -o, --output string The output format such as &#39;yaml&#39; -p, --pending Display only pending Users which are not yet provisioned yet  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx get workflows</title>
      <link>https://jenkins-x.io/commands/jx_get_workflows/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_workflows/</guid>
      <description> jx get workflows Display either all the available workflows or a specific workflow
Synopsis Display either all the workflows or a specific workflow
jx get workflows [flags]  Examples  # List all the available workflows jx get workflow # Display a specific workflow jx get workflow -n default  Options  -h, --help help for workflows -n, --name string The name of the workflow to display -o, --output string The output format such as &#39;yaml&#39;  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx import</title>
      <link>https://jenkins-x.io/commands/jx_import/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_import/</guid>
      <description>jx import Imports a local project or git repository into Jenkins
Synopsis Imports a local folder or git repository into Jenkins X.
If you specify no other options or arguments then the current directory is imported. Or you can use &amp;lsquo;&amp;ndash;dir&amp;rsquo; to specify a directory to import.
You can specify the git URL as an argument.
For more documentation see: https://jenkins-x.io/developing/import/
jx import [flags]  Examples  # Import the current folder jx import # Import a different folder jx import /foo/bar # Import a git repository from a URL jx import --url https://github.</description>
    </item>
    
    <item>
      <title>jx init</title>
      <link>https://jenkins-x.io/commands/jx_init/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_init/</guid>
      <description>jx init Init Jenkins X
Synopsis This command installs the Jenkins X platform on a connected kubernetes cluster
jx init [flags]  Examples  jx init  Options  -b, --batch-mode In batch mode the command never prompts for user input --domain string Domain to expose ingress endpoints. Example: jenkinsx.io --draft-client-only Only install draft client --external-ip string The external IP used to access ingress endpoints from outside the kubernetes cluster.</description>
    </item>
    
    <item>
      <title>jx install</title>
      <link>https://jenkins-x.io/commands/jx_install/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_install/</guid>
      <description>jx install Install Jenkins X in the current Kubernetes cluster
Synopsis Installs the Jenkins X platform on a Kubernetes cluster
Requires a &amp;ndash;git-username and &amp;ndash;git-api-token that can be used to create a new token. This is so the Jenkins X platform can git tag your releases
For more documentation see: https://jenkins-x.io/getting-started/install-on-cluster/
The current requirements are: * RBAC is enabled on the cluster * insecure docker registry is enabled for docker registries running locally inside kubernetes on the service IP range.</description>
    </item>
    
    <item>
      <title>jx logs</title>
      <link>https://jenkins-x.io/commands/jx_logs/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_logs/</guid>
      <description>jx logs Tails the log of the latest pod for a deployment
Synopsis Tails the logs of the newest pod for a Deployment.
jx logs [deployment] [flags]  Examples  # Tails the log of the latest pod in deployment myapp jx logs myapp # Tails the log of the container foo in the latest pod in deployment myapp jx logs myapp -c foo # Tails the log of the latest knative build pod jx logs -k  Options  -c, --container string The name of the container to log -d, --edit Use my Edit Environment to look for the Deployment pods -e, --env string the Environment to look for the Deployment.</description>
    </item>
    
    <item>
      <title>jx namespace</title>
      <link>https://jenkins-x.io/commands/jx_namespace/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_namespace/</guid>
      <description> jx namespace View or change the current namespace context in the current kubernetes cluster
Synopsis Displays or changes the current namespace.
jx namespace [flags]  Examples  # view the current namespace jx ns -b # to select the namespace to switch to jx ns # Change the current namespace to &#39;cheese&#39; jx ns cheese  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for namespace --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx open</title>
      <link>https://jenkins-x.io/commands/jx_open/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_open/</guid>
      <description> jx open Open a service in a browser
Synopsis Opens a named service in the browser.
You can use the &amp;lsquo;&amp;ndash;url&amp;rsquo; argument to just display the URL without opening it
jx open [flags]  Examples  # Open the Nexus console in a browser jx open jenkins-x-sonatype-nexus # Print the Nexus console URL but do not open a browser jx open jenkins-x-sonatype-nexus -u # List all the service URLs jx open  Options  --classic Use the classic Jenkins skin instead of Blue Ocean -e, --env string Specifies the Environment name to look inside -h, --help help for open -n, --namespace string Specifies the namespace name to look inside -u, --url Only displays and the URL and does not open the browser  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx options</title>
      <link>https://jenkins-x.io/commands/jx_options/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_options/</guid>
      <description> jx options Synopsis jx options [flags]  Options  -h, --help help for options  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx preview</title>
      <link>https://jenkins-x.io/commands/jx_preview/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_preview/</guid>
      <description>jx preview Creates or updates a Preview Environment for the current version of an application
Synopsis Creates or updates a Preview Environment for the given Pull Request or Branch.
For more documentation on Preview Environments see: https://jenkins-x.io/about/features/#preview-environments
jx preview [flags]  Examples  # Create or updates the Preview Environment for the Pull Request jx preview  Options  --alias string The optional alias used in the &#39;requirements.yaml&#39; file -a, --app string The Application to promote --build string The Build number which is used to update the PipelineActivity.</description>
    </item>
    
    <item>
      <title>jx promote</title>
      <link>https://jenkins-x.io/commands/jx_promote/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_promote/</guid>
      <description>jx promote Promotes a version of an application to an environment
Synopsis Promotes a version of an application to zero to many permanent environments.
For more documentation see: https://jenkins-x.io/about/features/#promotion
jx promote [application] [flags]  Examples  # Promote a version of the current application to staging # discovering the application name from the source code jx promote --version 1.2.3 --env staging # Promote a version of the myapp application to production jx promote myapp --version 1.</description>
    </item>
    
    <item>
      <title>jx prompt</title>
      <link>https://jenkins-x.io/commands/jx_prompt/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_prompt/</guid>
      <description> jx prompt Generate the command line prompt for the current team and environment
Synopsis Generate a command prompt for the current namespace and kubernetes context.
jx prompt [flags]  Examples  # Generate the current prompt jx prompt # Enable the prompt for bash PS1=&amp;quot;[\u@\h \W \$(jx prompt)]\$ &amp;quot; # Enable the prompt for zsh PROMPT=&#39;$(jx prompt)&#39;$PROMPT  Options  --context-color stringArray The color for the kubernetes context (default [cyan]) -d, --divider string The divider between the team and environment for the prompt (default &amp;quot;:&amp;quot;) -h, --help help for prompt -i, --icon Uses an icon for the label in the prompt -l, --label string The label for the prompt (default &amp;quot;k8s&amp;quot;) --label-color stringArray The color for the label (default [blue]) --namespace-color stringArray The color for the namespace (default [green]) --no-label Disables the use of the label in the prompt -p, --prefix string The prefix text for the prompt -s, --separator string The separator between the label and the rest of the prompt (default &amp;quot;:&amp;quot;) -x, --suffix string The suffix text for the prompt (default &amp;quot;&amp;gt;&amp;quot;)  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx repository</title>
      <link>https://jenkins-x.io/commands/jx_repository/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_repository/</guid>
      <description> jx repository Opens the web page for the current git repository in a browser
Synopsis Opens the web page for the current git repository in a browser
You can use the &amp;lsquo;&amp;ndash;url&amp;rsquo; argument to just display the URL without opening it
jx repository [flags]  Examples  # Open the git repository in a browser jx repo # Print the URL of the git repository jx repo -u  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for repository --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found -u, --url Only displays and the URL and does not open the browser --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx rsh</title>
      <link>https://jenkins-x.io/commands/jx_rsh/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_rsh/</guid>
      <description>jx rsh Opens a terminal in a pod or runs a command in the pod
Synopsis Opens a terminal or runs a command in a pods container
jx rsh [deploymentOrPodName] [flags]  Examples  # Open a terminal in the first container of the foo deployment&#39;s latest pod jx rsh foo # Opens a terminal in the cheese container in the latest pod in the foo deployment jx rsh -c cheese foo # To connect to one of your DevPods use: jx rsh -d # To execute something in the remote shell (like classic rsh or ssh commands) jx rsh -e &#39;do something&#39;  Options  -c, --container string The name of the container to log -d, --devpod Connect to a DevPod -e, --execute string Execute this command on the remote container (default &amp;quot;bash&amp;quot;) -h, --help help for rsh -n, --namespace string the namespace to look for the Deployment.</description>
    </item>
    
    <item>
      <title>jx scan</title>
      <link>https://jenkins-x.io/commands/jx_scan/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_scan/</guid>
      <description> jx scan Perform a scan action
Synopsis Perform a scan action.
jx scan [flags]  Options  -h, --help help for scan  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx scan cluster - Performs a cluster security scan  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx scan cluster</title>
      <link>https://jenkins-x.io/commands/jx_scan_cluster/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_scan_cluster/</guid>
      <description> jx scan cluster Performs a cluster security scan
Synopsis Performs a cluster security scan
jx scan cluster [flags]  Options  -h, --help help for cluster -o, --output string output format is one of: yaml|plain (default &amp;quot;plain&amp;quot;)  SEE ALSO  jx scan - Perform a scan action  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx shell</title>
      <link>https://jenkins-x.io/commands/jx_shell/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_shell/</guid>
      <description> jx shell Create a sub shell so that changes to the kubernetes context, namespace or environment remain local to the shell
Synopsis Create a sub shell so that changes to the kubernetes context, namespace or environment remain local to the shell.
jx shell [flags]  Examples  # create a new shell where the context changes are local to the shell only jx shell # create a new shell using a specific named context jx shell prod-cluster # ends the current shell and returns to the previous kubernetes context exit  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for shell --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx start</title>
      <link>https://jenkins-x.io/commands/jx_start/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_start/</guid>
      <description> jx start Starts a process such as a pipeline
Synopsis Starts a process such as a Jenkins pipeline.
jx start TYPE [flags]  Examples  # Start a pipeline jx start pipeline foo  Options  -h, --help help for start  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx start pipeline - Starts one or more pipelines  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx start pipeline</title>
      <link>https://jenkins-x.io/commands/jx_start_pipeline/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_start_pipeline/</guid>
      <description> jx start pipeline Starts one or more pipelines
Synopsis Starts the pipeline build.
jx start pipeline [flags]  Examples  # Start a pipeline jx start pipeline foo # Select the pipeline to start jx start pipeline # Select the pipeline to start and tail the log jx start pipeline -t  Options  -f, --filter string Filters all the available jobs by those that contain the given text -h, --help help for pipeline -t, --tail Tails the build log to the current terminal  SEE ALSO  jx start - Starts a process such as a pipeline  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx status</title>
      <link>https://jenkins-x.io/commands/jx_status/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_status/</guid>
      <description> jx status status of the Kubernetes cluster or named node
Synopsis Gets the current status of the Kubernetes cluster
jx status [node] [flags]  Examples  # displays the current status of the kubernetes cluster jx status  Options  -h, --help help for status -n, --node string the named node to get  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step</title>
      <link>https://jenkins-x.io/commands/jx_step/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step/</guid>
      <description> jx step pipeline steps
Synopsis pipeline steps
jx step [flags]  Options  -h, --help help for step  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx step blog - Creates a blog post with changes, metrics and charts showing improvements jx step changelog - Creates a changelog for a git tag jx step create - Creates a Knative Build resource for a project jx step git - git [command] jx step gpg - Creates the GPG credentials file for GPG signing releases jx step helm - helm [command] jx step link - achieve service linking in preview environments jx step next-version - Writes next semantic version jx step nexus - nexus [command] jx step post - post step actions jx step pr - pipeline step pr jx step pre - pre step actions jx step release - performs a release on the current git repository jx step report - report step actions jx step split - Mirrors the code from a monorepo into separate microservice style git repositories so its easier to do finer grained releases jx step tag - Creates a git tag and pushes to remote repo jx step validate - Validates the command line tools, container and platform to ensure a pipeline can run properly jx step verify - Performs deployment verification in a pipeline jx step wait - Waits for the given artifact to be available in a maven style repository  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step blog</title>
      <link>https://jenkins-x.io/commands/jx_step_blog/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_blog/</guid>
      <description>jx step blog Creates a blog post with changes, metrics and charts showing improvements
Synopsis Generates charts for a project
jx step blog [flags]  Examples  # create charts for the cuect jx step chart  Options  -b, --batch-mode In batch mode the command never prompts for user input --blog-dir string The Hugo-style blog source code to generate the charts into -n, --blog-name string The blog name -c, --combine-minor If enabled lets combine minor releases together to simplify the charts (default true) --dev-channel-members int If no chat bots can connect to your chat server you can pass in the counts for the developer channel here -d, --dir string The directory to query to find the projects .</description>
    </item>
    
    <item>
      <title>jx step changelog</title>
      <link>https://jenkins-x.io/commands/jx_step_changelog/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_changelog/</guid>
      <description>jx step changelog Creates a changelog for a git tag
Synopsis Generates a Changelog for the latest tag
This command will generate a Changelog as markdown for the git commit range given. If you are using GitHub it will also update the GitHub Release with the changelog. You can disable that by passing&amp;rsquo;&amp;ndash;update-release=false&amp;rsquo;
If you have just created a git tag this command will try default to the changes between the last tag and the previous one.</description>
    </item>
    
    <item>
      <title>jx step create</title>
      <link>https://jenkins-x.io/commands/jx_step_create/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_create/</guid>
      <description>jx step create Creates a Knative Build resource for a project
Synopsis Creates a Knative Build resource for a project
jx step create build [flags]  Examples  # create a knative build and render to the console jx step create build # create a knative build jx step create build -o mybuild.yaml  Options  -b, --batch-mode In batch mode the command never prompts for user input -n, --build-number int Which build number to use.</description>
    </item>
    
    <item>
      <title>jx step git</title>
      <link>https://jenkins-x.io/commands/jx_step_git/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_git/</guid>
      <description> jx step git git [command]
Synopsis git [command]
jx step git [flags]  Options  -h, --help help for git  SEE ALSO  jx step - pipeline steps jx step git credentials - Creates the git credentials file for the current pipeline git credentials  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step git credentials</title>
      <link>https://jenkins-x.io/commands/jx_step_git_credentials/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_git_credentials/</guid>
      <description> jx step git credentials Creates the git credentials file for the current pipeline git credentials
Synopsis This pipeline step generates a git credentials file for the current Git provider pipeline Secrets
jx step git credentials [flags]  Examples  # generate the git credentials file in the canonical location jx step git credentials # generate the git credentials to a output file jx step git credentials -o /tmp/mycreds  Options  -h, --help help for credentials -o, --output string The output file name  SEE ALSO  jx step git - git [command]  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step gpg</title>
      <link>https://jenkins-x.io/commands/jx_step_gpg/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_gpg/</guid>
      <description> jx step gpg Creates the GPG credentials file for GPG signing releases
Synopsis This pipeline step generates GPG credentials files from the jenkins-release-gpg secret
jx step gpg credentials [flags]  Examples  # generate the GPG credentials file in the canonical location jx step gpg credentials # generate the git credentials to a output file jx step gpg credentials -o /tmp/mycreds  Options  -h, --help help for gpg -o, --output string The output directory  SEE ALSO  jx step - pipeline steps  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step helm</title>
      <link>https://jenkins-x.io/commands/jx_step_helm/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_helm/</guid>
      <description> jx step helm helm [command]
Synopsis helm [command]
jx step helm [flags]  Options  -h, --help help for helm  SEE ALSO  jx step - pipeline steps jx step helm apply - Applies the helm chart in a given directory jx step helm build - Builds the helm chart in a given directory and validate the build completes jx step helm release - Releases the helm chart in the current directory  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step helm apply</title>
      <link>https://jenkins-x.io/commands/jx_step_helm_apply/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_helm_apply/</guid>
      <description>jx step helm apply Applies the helm chart in a given directory
Synopsis Applies the helm chart in a given directory.
This step is usually used to apply any GitOps promotion changes into a Staging or Production cluster.
jx step helm apply [flags]  Examples  # apply the chart in the env folder to namespace jx-staging jx step helm apply --dir env --namespace jx-staging  Options  --clone-https git@foo/bar.</description>
    </item>
    
    <item>
      <title>jx step helm build</title>
      <link>https://jenkins-x.io/commands/jx_step_helm_build/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_helm_build/</guid>
      <description>jx step helm build Builds the helm chart in a given directory and validate the build completes
Synopsis Builds the helm chart in a given directory.
This step is usually used to validate any GitOps Pull Requests.
jx step helm build [flags]  Examples  # builds the helm chart in the env directory jx step helm build --dir env  Options  --clone-https git@foo/bar.git Clone the environment git repo over https rather than ssh which uses git@foo/bar.</description>
    </item>
    
    <item>
      <title>jx step helm release</title>
      <link>https://jenkins-x.io/commands/jx_step_helm_release/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_helm_release/</guid>
      <description>jx step helm release Releases the helm chart in the current directory
Synopsis This pipeline step releases the Helm chart in the current directory
jx step helm release [flags]  Examples  jx step helm release  Options  --clone-https git@foo/bar.git Clone the environment git repo over https rather than ssh which uses git@foo/bar.git (default true) -d, --dir string The directory containing the helm chart to apply (default &amp;quot;.&amp;quot;) --git-provider string The Git provider for the environment Git repository (default &amp;quot;github.</description>
    </item>
    
    <item>
      <title>jx step link</title>
      <link>https://jenkins-x.io/commands/jx_step_link/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_link/</guid>
      <description> jx step link achieve service linking in preview environments
Synopsis This pipeline step helps to link microservices from different namespaces like staging/production onto a preview environment
jx step link services [flags]  Examples  #Link services from jx-staging namespace to the current namespace jx step link services --from-namespace jx-staging #Link services from jx-staging namespace to the jx-prod namespace jx step link services --from-namespace jx-staging --to-namespace jx-prod #Link services from jx-staging namespace to the jx-prod namespace including all but the ones starting with the characters &#39;cheese&#39; jx step link services --from-namespace jx-staging --to-namespace jx-prod --includes * --excludes cheese*  Options  -b, --batch-mode In batch mode the command never prompts for user input -e, --excludes stringArray What services from the source namespace to exclude from the linking process -f, --from-namespace string The source namespace from which the linking would happen --headless Enable headless operation if using browser automation -h, --help help for link -i, --includes stringArray What services from source namespace to include in the linking process --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found -t, --to-namespace string The destination namespace to which the linking would happen --verbose Enable verbose logging  SEE ALSO  jx step - pipeline steps  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step next-version</title>
      <link>https://jenkins-x.io/commands/jx_step_next-version/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_next-version/</guid>
      <description>jx step next-version Writes next semantic version
Synopsis This pipeline step command works out a semantic version, writes a file ./VERSION and optionally updates a file
jx step next-version [flags]  Examples  jx step next-version jx step next-version --filename package.json jx step next-version --filename package.json --tag jx step next-version --filename package.json --tag --version 1.2.3  Options  -b, --batch-mode In batch mode the command never prompts for user input -d, --dir string the directory to look for files that contain a pom.</description>
    </item>
    
    <item>
      <title>jx step nexus</title>
      <link>https://jenkins-x.io/commands/jx_step_nexus/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_nexus/</guid>
      <description> jx step nexus nexus [command]
Synopsis nexus [command]
jx step nexus [flags]  Options  -h, --help help for nexus  SEE ALSO  jx step - pipeline steps jx step nexus drop - Drops a staging nexus release jx step nexus release - Releases a staging nexus release  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step nexus drop</title>
      <link>https://jenkins-x.io/commands/jx_step_nexus_drop/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_nexus_drop/</guid>
      <description> jx step nexus drop Drops a staging nexus release
Synopsis This pipeline step command drops a Staging Nexus Repository
jx step nexus drop [flags]  Examples  jx step nexus drop  Options  -h, --help help for drop  SEE ALSO  jx step nexus - nexus [command]  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step nexus release</title>
      <link>https://jenkins-x.io/commands/jx_step_nexus_release/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_nexus_release/</guid>
      <description> jx step nexus release Releases a staging nexus release
Synopsis This pipeline step command releases a Nexus staging repository
jx step nexus release [flags]  Examples  jx step nexus release  Options  -d, --drop-on-fail Should we drop the repository on failure (default true) -h, --help help for release  SEE ALSO  jx step nexus - nexus [command]  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step post</title>
      <link>https://jenkins-x.io/commands/jx_step_post/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_post/</guid>
      <description> jx step post post step actions
Synopsis post step actions
jx step post [flags]  Options  -h, --help help for post  SEE ALSO  jx step - pipeline steps jx step post build - Performs post build actions in a pipeline  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step post build</title>
      <link>https://jenkins-x.io/commands/jx_step_post_build/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_post_build/</guid>
      <description> jx step post build Performs post build actions in a pipeline
Synopsis This pipeline step performs post build actions such as CVE analysis
jx step post build [flags]  Examples  jx step post build  Options  -h, --help help for build --image string The full image name to be analysed including the registry prefix  SEE ALSO  jx step post - post step actions  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step pr</title>
      <link>https://jenkins-x.io/commands/jx_step_pr/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_pr/</guid>
      <description> jx step pr pipeline step pr
Synopsis pipeline step pr
jx step pr [flags]  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for pr --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx step - pipeline steps jx step pr comment - pipeline step pr comment  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step pr comment</title>
      <link>https://jenkins-x.io/commands/jx_step_pr_comment/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_pr_comment/</guid>
      <description> jx step pr comment pipeline step pr comment
Synopsis pipeline step pr comment
jx step pr comment [flags]  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --comment string comment to add to the Pull Request --headless Enable headless operation if using browser automation -h, --help help for comment --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -o, --owner string git organisation / owner -p, --pull-request string git pull request number -r, --repository string git repository --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx step pr - pipeline step pr  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step pre</title>
      <link>https://jenkins-x.io/commands/jx_step_pre/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_pre/</guid>
      <description> jx step pre pre step actions
Synopsis pre step actions
jx step pre [flags]  Options  -h, --help help for pre  SEE ALSO  jx step - pipeline steps jx step pre build - Performs actions before a build happens in a pipeline  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step pre build</title>
      <link>https://jenkins-x.io/commands/jx_step_pre_build/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_pre_build/</guid>
      <description> jx step pre build Performs actions before a build happens in a pipeline
Synopsis This pipeline step performs pre build actions such as ensuring that a docker registry is available in the cloud
jx step pre build [flags]  Examples  jx step post build ${DOCKER_REGISTRY}/someorg/myapp  Options  -h, --help help for build -i, --image string The image name that is about to be built  SEE ALSO  jx step pre - pre step actions  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step release</title>
      <link>https://jenkins-x.io/commands/jx_step_release/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_release/</guid>
      <description>jx step release performs a release on the current git repository
Synopsis performs a release on the current git repository
jx step release [flags]  Options  -a, --application string the docker application image name -b, --build string The Build number which is used to update the PipelineActivity. If not specified its defaulted from the &#39;$BUILD_NUMBER&#39; environment variable -r, --docker-registry docker-registry the docker registry host or host:port to use. If not specified it is loaded from the docker-registry ConfigMap -e, --git-email string The git email address to configure if there is none already setup -u, --git-username string The git username to configure if there is none already setup --helm-repo-name string The name of the helm repository that contains the app (default &amp;quot;releases&amp;quot;) --helm-repo-url string The Helm Repository URL to use for the App (default &amp;quot;http://jenkins-x-chartmuseum:8080&amp;quot;) -h, --help help for release --no-batch Whether to disable batch mode -o, --organisation string the docker organisation for the generated docker image --pull-request-poll-time string Poll time when waiting for a Pull Request to merge (default &amp;quot;20s&amp;quot;) -t, --timeout string The timeout to wait for the promotion to succeed in the underlying Environment.</description>
    </item>
    
    <item>
      <title>jx step report</title>
      <link>https://jenkins-x.io/commands/jx_step_report/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_report/</guid>
      <description> jx step report report step actions
Synopsis report step actions
jx step report [flags]  Options  -h, --help help for report  SEE ALSO  jx step - pipeline steps jx step report activities - Reports activities jx step report releases - Reports Releases  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step report activities</title>
      <link>https://jenkins-x.io/commands/jx_step_report_activities/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_report_activities/</guid>
      <description> jx step report activities Reports activities
Synopsis This pipeline step reports activities to pluggable backends like ElasticSearch
jx step report activities [flags]  Examples  jx step report activities  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for activities --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -w, --watch Whether to watch activities  SEE ALSO  jx step report - report step actions  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step report releases</title>
      <link>https://jenkins-x.io/commands/jx_step_report_releases/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_report_releases/</guid>
      <description> jx step report releases Reports Releases
Synopsis This pipeline step reports releases to pluggable backends like ElasticSearch
jx step report releases [flags]  Examples  jx step report Releases  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for releases --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging -w, --watch Whether to watch Releases  SEE ALSO  jx step report - report step actions  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step split</title>
      <link>https://jenkins-x.io/commands/jx_step_split/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_split/</guid>
      <description>jx step split Mirrors the code from a monorepo into separate microservice style git repositories so its easier to do finer grained releases
Synopsis Mirrors the code from a monorepo into separate microservice style git repositories so its easier to do finer grained releases.
If you have lots of apps in folders in a monorepo then this comamnd can run on that repo to mirror changes into a number of microsevice based repositories which can each then get auto-imported into Jenkins X</description>
    </item>
    
    <item>
      <title>jx step tag</title>
      <link>https://jenkins-x.io/commands/jx_step_tag/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_tag/</guid>
      <description>jx step tag Creates a git tag and pushes to remote repo
Synopsis This pipeline step command creates a git tag using a version number prefixed with &amp;lsquo;v&amp;rsquo; and pushes it to a remote origin repo.
This commands effectively runs:
git commit -a -m &amp;ldquo;release $(VERSION)&amp;rdquo; &amp;ndash;allow-empty git tag -fa v$(VERSION) -m &amp;ldquo;Release version $(VERSION)&amp;rdquo; git push origin v$(VERSION)
jx step tag [flags]  Examples  jx step tag --version 1.</description>
    </item>
    
    <item>
      <title>jx step validate</title>
      <link>https://jenkins-x.io/commands/jx_step_validate/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_validate/</guid>
      <description>jx step validate Validates the command line tools, container and platform to ensure a pipeline can run properly
Synopsis Validates the command line tools, container and platform to ensure a pipeline can run properly.
This helps ensure that your platform installation, &amp;lsquo;addons, builder images and Jenkinsfile&amp;rsquo; are all on compatible versions.
jx step validate [flags]  Examples  # Validates that the jx version is new enough jx validate --min-jx-version 1.</description>
    </item>
    
    <item>
      <title>jx step verify</title>
      <link>https://jenkins-x.io/commands/jx_step_verify/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_verify/</guid>
      <description> jx step verify Performs deployment verification in a pipeline
Synopsis This pipeline step performs deployment verification
jx step verify [flags]  Examples  jx step verify  Options  --after int32 The time in seconds after which the application should be ready (default 60) -h, --help help for verify -p, --pods int32 Number of expected pods to be running (default 1) -r, --restarts int32 Maximum number of restarts which are acceptable within the given time  SEE ALSO  jx step - pipeline steps  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step wait</title>
      <link>https://jenkins-x.io/commands/jx_step_wait/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_wait/</guid>
      <description>jx step wait Waits for the given artifact to be available in a maven style repository
Synopsis Waits for the given artifact to be available in a maven style repository
jx step wait for artifact [flags]  Examples  # wait for a jx step gpg credentials # generate the git credentials to a output file jx step gpg credentials -o /tmp/mycreds  Options  -a, --artifact string The artifact ID of the artifact to search for --artifact-url string The full URL of the artifact to wait for.</description>
    </item>
    
    <item>
      <title>jx stop</title>
      <link>https://jenkins-x.io/commands/jx_stop/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_stop/</guid>
      <description> jx stop Stops a process such as a pipeline
Synopsis Stops a process such as a Jenkins pipeline.
jx stop TYPE [flags]  Examples  # Stop a pipeline jx stop pipeline foo  Options  -h, --help help for stop  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx stop pipeline - Stops one or more pipelines  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx stop pipeline</title>
      <link>https://jenkins-x.io/commands/jx_stop_pipeline/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_stop_pipeline/</guid>
      <description> jx stop pipeline Stops one or more pipelines
Synopsis Stops the pipeline build.
jx stop pipeline [flags]  Examples  # Stop a pipeline jx stop pipeline foo/bar/master -b 2 # Select the pipeline to stop jx stop pipeline  Options  -b, --build int The build number to stop -f, --filter string Filters all the available jobs by those that contain the given text -h, --help help for pipeline  SEE ALSO  jx stop - Stops a process such as a pipeline  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx sync</title>
      <link>https://jenkins-x.io/commands/jx_sync/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_sync/</guid>
      <description>jx sync Synchronises your local files to a devpod
Synopsis Synchronises your local files to a DevPod so you an build and test your code easily on the cloud
For more documentation see: https://jenkins-x.io/developing/devpods/
jx sync [flags]  Examples  # Starts synchonizing the current directory files to the users DevPod jx sync  Options  --daemon Runs ksync in a background daemon -h, --help help for sync --no-init Disables the use of &#39;ksync init&#39; to ensure we have initialised ksync --single-mode ksync watch Terminates eagerly if ksync watch fails --watch-only Deprecated this flag is now ignored!</description>
    </item>
    
    <item>
      <title>jx team</title>
      <link>https://jenkins-x.io/commands/jx_team/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_team/</guid>
      <description> jx team View or change the current team in the current kubernetes cluster
Synopsis Displays or changes the current team.
For more documentation on Teams see: https://jenkins-x.io/about/features/#teams
jx team [flags]  Examples  # view the current team jx team -b # pick which team to switch to jx team # Change the current team to &#39;cheese&#39; jx team cheese  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for team --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx uninstall</title>
      <link>https://jenkins-x.io/commands/jx_uninstall/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_uninstall/</guid>
      <description>jx uninstall Uninstall the Jenkins X platform
Synopsis Uninstalls the Jenkins X platform from a kubernetes cluster
jx uninstall [flags]  Examples  # Uninstall the Jenkins X platform jx uninstall  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for uninstall --install-dependencies Should any required dependencies be installed automatically -n, --namespace string The team namespace to uninstall.</description>
    </item>
    
    <item>
      <title>jx update</title>
      <link>https://jenkins-x.io/commands/jx_update/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_update/</guid>
      <description> jx update Updates an existing resource
Synopsis Updates an existing resource.
Valid resource types include:
 cluster
jx update [flags]   Options  -h, --help help for update  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx update cluster - Updates an existing kubernetes cluster  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx update cluster</title>
      <link>https://jenkins-x.io/commands/jx_update_cluster/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_update_cluster/</guid>
      <description>jx update cluster Updates an existing kubernetes cluster
Synopsis This command updates an existing kubernetes cluster, it can be used to apply minor changes to a cluster / node pool
Valid kubernetes providers include:
* aks (Azure Container Service - https://docs.microsoft.com/en-us/azure/aks) * aws (Amazon Web Services via kops - https://github.com/aws-samples/aws-workshop-for-kubernetes/blob/master/readme.adoc) * eks (Amazon Web Services Elastic Container Service for Kubernetes - https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html) * gke (Google Container Engine - https://cloud.google.com/kubernetes-engine) * oke (Oracle Cloud Infrastructure Container Engine for Kubernetes - https://docs.</description>
    </item>
    
    <item>
      <title>jx update cluster gke</title>
      <link>https://jenkins-x.io/commands/jx_update_cluster_gke/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_update_cluster_gke/</guid>
      <description> jx update cluster gke Updates an existing kubernetes cluster on GKE: Runs on Google Cloud
Synopsis Not currently implemented.
jx update cluster gke [flags]  Examples  jx update cluster gke  Options  -h, --help help for gke  SEE ALSO  jx update cluster - Updates an existing kubernetes cluster jx update cluster gke terraform - Updates an existing kubernetes cluster on GKE using Terraform: Runs on Google Cloud  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx update cluster gke terraform</title>
      <link>https://jenkins-x.io/commands/jx_update_cluster_gke_terraform/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_update_cluster_gke_terraform/</guid>
      <description> jx update cluster gke terraform Updates an existing kubernetes cluster on GKE using Terraform: Runs on Google Cloud
Synopsis Command re-applies the terraform plan in ~/.jx/clusters/ /terraform against the specified cluster
jx update cluster gke terraform [flags]  Examples  jx update cluster gke terraform  Options  -b, --batch-mode In batch mode the command never prompts for user input -n, --cluster-name string The name of this cluster --headless Enable headless operation if using browser automation -h, --help help for terraform --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies --service-account string Use a service account to login to GCE --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --skip-login Skip Google auth if already logged in via gloud auth --verbose Enable verbose logging  SEE ALSO  jx update cluster gke - Updates an existing kubernetes cluster on GKE: Runs on Google Cloud  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx upgrade</title>
      <link>https://jenkins-x.io/commands/jx_upgrade/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_upgrade/</guid>
      <description> jx upgrade Upgrades a resource
Synopsis Upgrade a the whole Jenkins-X platform.
jx upgrade [flags]  Examples  # upgrade the command line tools jx upgrade cli # upgrade the platform jx upgrade platform  Options  -h, --help help for upgrade  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx upgrade cli - Upgrades the command line applications - if there are new versions available jx upgrade cluster - Upgrades the kubernetes master to the specified version jx upgrade ingress - Upgrades Ingress rules jx upgrade platform - Upgrades the Jenkins X platform if there is a new release available  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx upgrade cli</title>
      <link>https://jenkins-x.io/commands/jx_upgrade_cli/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_upgrade_cli/</guid>
      <description> jx upgrade cli Upgrades the command line applications - if there are new versions available
Synopsis Upgrades the Jenkins X command line tools if there is a newer release
jx upgrade cli [flags]  Examples  # Upgrades the Jenkins X CLI tools jx upgrade cli  Options  -h, --help help for cli -v, --version string The specific version to upgrade to  SEE ALSO  jx upgrade - Upgrades a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx upgrade cluster</title>
      <link>https://jenkins-x.io/commands/jx_upgrade_cluster/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_upgrade_cluster/</guid>
      <description> jx upgrade cluster Upgrades the kubernetes master to the specified version
Synopsis Upgrades the Jenkins X kubernetes master to the specified version
jx upgrade cluster [flags]  Examples  # Upgrades the Jenkins X Cluster tools jx upgrade cluster  Options  -c, --cluster-name string The specific cluster to upgrade -h, --help help for cluster -v, --version string The specific version to upgrade to  SEE ALSO  jx upgrade - Upgrades a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx upgrade ingress</title>
      <link>https://jenkins-x.io/commands/jx_upgrade_ingress/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_upgrade_ingress/</guid>
      <description> jx upgrade ingress Upgrades Ingress rules
Synopsis Upgrades the Jenkins X Ingress rules
jx upgrade ingress [flags]  Examples  # Upgrades the Jenkins X Ingress rules jx upgrade ingress  Options  --cluster Enable cluster wide Ingress upgrade -h, --help help for ingress --namespaces stringArray Namespaces to upgrade --skip-certmanager Skips certmanager installation  SEE ALSO  jx upgrade - Upgrades a resource  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx upgrade platform</title>
      <link>https://jenkins-x.io/commands/jx_upgrade_platform/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_upgrade_platform/</guid>
      <description>jx upgrade platform Upgrades the Jenkins X platform if there is a new release available
Synopsis Upgrades the Jenkins X platform if there is a newer release
jx upgrade platform [flags]  Examples  # Upgrades the Jenkins X platform jx upgrade platform  Options  -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The Chart to upgrade (default &amp;quot;jenkins-x/jenkins-x-platform&amp;quot;) --cloud-environment-repo string Cloud Environments git repo (default &amp;quot;https://github.</description>
    </item>
    
    <item>
      <title>jx version</title>
      <link>https://jenkins-x.io/commands/jx_version/</link>
      <pubDate>Fri, 31 Aug 2018 12:42:57 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_version/</guid>
      <description> jx version Print the version information
Synopsis Print the version information
jx version [flags]  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation --helm-tls Whether to use TLS with helm -h, --help help for version --install-dependencies Should any required dependencies be installed automatically --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -n, --no-version-check Disable checking of version upgrade checks --skip-auth-secrets-merge Skips merging a local git auth yaml file with any pipeline secrets that are found --verbose Enable verbose logging  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 31-Aug-2018 </description>
    </item>
    
    <item>
      <title>jx step envrolebinding</title>
      <link>https://jenkins-x.io/commands/jx_step_envrolebinding/</link>
      <pubDate>Fri, 24 Aug 2018 10:37:40 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_envrolebinding/</guid>
      <description>jx step envrolebinding Mirrors EnvironmentRoleBinding resources to Roles and RoleBindings in all matching Environment namespaces
Synopsis Mirrors EnvironmentRoleBinding resources to Roles and RoleBindings in all matching Environment namespaces.
RBAC in Kubernetes is either global with ClusterRoles or is namespace based with Roles per Namespace.
We use a Custom Resource called EnvironmentRoleBinding which binds Roles and its bindings from the development environment into each Environment&amp;rsquo;s Namespace.
e.g. each EnvironmentRoleBinding will result in a RoleBinding and Role resource being create in each matching Environment.</description>
    </item>
    
    <item>
      <title>jx create gcp-service-account</title>
      <link>https://jenkins-x.io/commands/jx_create_gcp-service-account/</link>
      <pubDate>Mon, 23 Jul 2018 18:37:04 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_gcp-service-account/</guid>
      <description> jx create gcp-service-account Creates a GCP service account
Synopsis Creates a GCP service account
jx create gcp-service-account [flags]  Examples  jx create gcp-service-account # to specify the options via flags jx create gcp-service-account --name my-service-account --project my-gcp-project  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for gcp-service-account --install-dependencies Should any required dependencies be installed automatically -n, --name string The name of the service account to create --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -p, --project string The GCP project to create the service account in --verbose Enable verbose logging  SEE ALSO  jx create - Create a new resource  Auto generated by spf13/cobra on 23-Jul-2018 </description>
    </item>
    
    <item>
      <title>jx create addon owasp</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_owasp/</link>
      <pubDate>Wed, 18 Jul 2018 14:25:14 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_owasp/</guid>
      <description> jx create addon owasp Create a owasp addon for dynamic security checks
Synopsis Creates the Owasp dyanmic security testing addon
jx create addon owasp [flags]  Examples  # Create the kubeless addon in the kubeless namespace jx create addon owasp  Options  -l, --backoff-limit int32 The backoff limit: how many times to retry the job before considering it failed) to run in the Job (default 2) -h, --help help for owasp -i, --image string The OWASP image to use to run the ZA Proxy baseline scan (default &amp;quot;owasp/zap2docker-live:latest&amp;quot;)  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 18-Jul-2018 </description>
    </item>
    
    <item>
      <title>jx step service</title>
      <link>https://jenkins-x.io/commands/jx_step_service/</link>
      <pubDate>Wed, 11 Jul 2018 19:08:14 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_step_service/</guid>
      <description> jx step service achieve service linking in preview environments
Synopsis This pipeline step helps to link microservices from different namespaces like staging/production onto a preview environment
jx step service linking [flags]  Examples  #Link services from jx-staging namespace to the current namespace jx step link services --from-namespace jx-staging #Link services from jx-staging namespace to the jx-prod namespace jx step link services --from-namespace jx-staging --to-namespace jx-prod #Link services from jx-staging namespace to the jx-prod namespace including all but the ones starting with the characters &#39;cheese&#39; jx step link services --from-namespace jx-staging --to-namespace jx-prod --includes * --excludes cheese*  Options  -b, --batch-mode In batch mode the command never prompts for user input -e, --excludes stringArray What services from the source namespace to exclude from the linking process -f, --from-namespace string The source namespace from which the linking would happen --headless Enable headless operation if using browser automation -h, --help help for service -i, --includes stringArray What services from source namespace to include in the linking process --no-brew Disables the use of brew on MacOS to install or upgrade command line dependencies -t, --to-namespace string The destination namespace to which the linking would happen --verbose Enable verbose logging  SEE ALSO  jx step - pipeline steps  Auto generated by spf13/cobra on 11-Jul-2018 </description>
    </item>
    
    <item>
      <title>jx cdx</title>
      <link>https://jenkins-x.io/commands/jx_cdx/</link>
      <pubDate>Tue, 15 May 2018 21:52:45 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_cdx/</guid>
      <description> jx cdx Opens the CDX dashboard for visualising CI/CD and your environments
Synopsis Opens the CDX dashboard in a browser.
Which helps you visualise your CI/CD pipelines, apps, environments and teams.
jx cdx [flags]  Examples  # Open the CDX dashboard in a browser jx cdx # Print the Jenkins X console URL but do not open a browser jx console -u  Options  -h, --help help for cdx -u, --url Only displays and the URL and does not open the browser  SEE ALSO  jx - jx is a command line tool for working with Jenkins X  Auto generated by spf13/cobra on 15-May-2018 </description>
    </item>
    
    <item>
      <title>jx create addon cdx</title>
      <link>https://jenkins-x.io/commands/jx_create_addon_cdx/</link>
      <pubDate>Tue, 15 May 2018 21:52:45 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_addon_cdx/</guid>
      <description> jx create addon cdx Create the CDX addon (a web console for working with CI/CD and Environments)
Synopsis Creates the CDX addon
CDX provides unified Continuous Delivery Environment console to make it easier to do CI/CD and Environments across a number of microservices and teams
jx create addon cdx [flags]  Examples  # Create the cdx addon jx create addon cdx  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for cdx -n, --namespace string The Namespace to install into (default &amp;quot;jx&amp;quot;) --no-brew Disables the use of brew on macOS to install or upgrade command line dependencies -r, --release string The chart release name (default &amp;quot;cdx&amp;quot;) --verbose Enable verbose logging  SEE ALSO  jx create addon - Creates an addon  Auto generated by spf13/cobra on 15-May-2018 </description>
    </item>
    
    <item>
      <title>jx delete env</title>
      <link>https://jenkins-x.io/commands/jx_delete_env/</link>
      <pubDate>Fri, 09 Mar 2018 13:26:03 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_delete_env/</guid>
      <description> jx delete env Deletes one or more environments
Synopsis Deletes one or more environments.
jx delete env [flags]  Examples  # Deletes an environment jx delete env staging  Options  -h, --help help for env -n, --namespace Delete the namespace for the Environment too?  SEE ALSO  jx delete - Deletes one or many resources  Auto generated by spf13/cobra on 9-Mar-2018 </description>
    </item>
    
    <item>
      <title>jx get apps</title>
      <link>https://jenkins-x.io/commands/jx_get_apps/</link>
      <pubDate>Fri, 09 Mar 2018 13:26:03 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_get_apps/</guid>
      <description> jx get apps Display one or many Applications and their versions
Synopsis Display applications across environments.
jx get apps [flags]  Examples  # List applications for all environments jx get apps # List applications and their URLs for all environments jx get apps -u  Options  -h, --help help for apps -u, --url Show the URLs rather than pod numbers  SEE ALSO  jx get - Display one or many resources  Auto generated by spf13/cobra on 9-Mar-2018 </description>
    </item>
    
    <item>
      <title>jx addon</title>
      <link>https://jenkins-x.io/commands/jx_addon/</link>
      <pubDate>Tue, 06 Mar 2018 13:30:20 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_addon/</guid>
      <description> jx addon Creates an addon
Synopsis Creates an addon
jx addon [flags]  Options  --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for addon -n, --namespace string The Namespace to install into -r, --release string The chart release name (default &amp;quot;gitea&amp;quot;)  SEE ALSO  jx - jx is a command line tool for working with Jenkins X jx addon cdx - Create the CDX addon (a web console for working with CI / CD and Environments) jx addon gitea - Create a gitea addon for hosting git repositories  Auto generated by spf13/cobra on 6-Mar-2018 </description>
    </item>
    
    <item>
      <title>jx addon cdx</title>
      <link>https://jenkins-x.io/commands/jx_addon_cdx/</link>
      <pubDate>Tue, 06 Mar 2018 13:30:20 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_addon_cdx/</guid>
      <description> jx addon cdx Create the CDX addon (a web console for working with CI / CD and Environments)
Synopsis Creates the CDX addon
CDX provides unified Continuous Delivery Environment console to make it easier to do CI / CD and Environments across a number of microservices and teams
jx addon cdx [flags]  Examples  # Create the cdx addon jx create addon cdx  Options  -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for cdx -n, --namespace string The Namespace to install into -r, --release string The chart release name (default &amp;quot;gitea&amp;quot;) --verbose Enable verbose logging  SEE ALSO  jx addon - Creates an addon  Auto generated by spf13/cobra on 6-Mar-2018 </description>
    </item>
    
    <item>
      <title>jx addon gitea</title>
      <link>https://jenkins-x.io/commands/jx_addon_gitea/</link>
      <pubDate>Tue, 06 Mar 2018 13:30:20 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_addon_gitea/</guid>
      <description>jx addon gitea Create a gitea addon for hosting git repositories
Synopsis Creates the gitea addon (hosted git server)
jx addon gitea [flags]  Examples  # Create the gitea addon jx create addon gitea  Options  --admin Should the new user created be an admin of the gitea server -b, --batch-mode In batch mode the command never prompts for user input -c, --chart string The name of the chart to use (default &amp;quot;jenkins-x/gitea&amp;quot;) -e, --email string The email address of the new user to create in gitea --headless Enable headless operation if using browser automation --helm-update Should we run helm update first to ensure we use the latest version (default true) -h, --help help for gitea -n, --namespace string The Namespace to install into --no-token If true disable trying to create a new token in the gitea server --no-user If true disable trying to create a new user in the gitea server -p, --password string The password for the user to create in gitea.</description>
    </item>
    
    <item>
      <title>jx create jenkins user</title>
      <link>https://jenkins-x.io/commands/jx_create_jenkins_user/</link>
      <pubDate>Tue, 06 Mar 2018 13:30:20 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_create_jenkins_user/</guid>
      <description> jx create jenkins user Adds a new user name and api token for a jenkins server server
Synopsis Creates a new user and API Token for the current Jenkins Server
jx create jenkins user [username] [flags]  Examples  # Add a new API Token for a user for the current Jenkins server # prompting the user to find and enter the API Token jx create jenkins token someUserName # Add a new API Token for a user for the current Jenkins server # using browser automation to login to the git server # with the username an password to find the API Token jx create jenkins token -p somePassword someUserName  Options  -t, --api-token string The API Token for the user -b, --batch-mode In batch mode the command never prompts for user input --headless Enable headless operation if using browser automation -h, --help help for user -n, --name string The name of the git server to add a user -p, --password string The User password to try automatically create a new API Token --timeout string The timeout if using browser automation to generate the API token (by passing username and password) -u, --url string The URL of the git server to add a user --verbose Enable verbose logging  SEE ALSO  jx create jenkins - Creates a jenkins resource  Auto generated by spf13/cobra on 6-Mar-2018 </description>
    </item>
    
    <item>
      <title>jx metrics</title>
      <link>https://jenkins-x.io/commands/jx_metrics/</link>
      <pubDate>Tue, 06 Mar 2018 13:30:20 +0000</pubDate>
      
      <guid>https://jenkins-x.io/commands/jx_metrics/</guid>
      <description>jx metrics Gets the metrics of the latest pod for a deployment
Synopsis Gets the metrics of the newest pod for a Deployment.
jx metrics [deployment] [flags]  Examples  # displays metrics of the latest pod in deployment myapp jx metrics myapp # Tails the metrics of the container foo in the latest pod in deployment myapp jx metrics myapp -c foo  Options  -d, --duration string The duration to query (e.</description>
    </item>
    
  </channel>
</rss>