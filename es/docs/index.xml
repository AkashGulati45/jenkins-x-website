<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X – Documentación</title>
    <link>/es/docs/</link>
    <description>Recent content in Documentación on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    
	  <atom:link href="/es/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ¿Que sigue?</title>
      <link>/es/docs/getting-started/next/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/next/</guid>
      <description>
        
        
        &lt;p&gt;Perfecto, entonces ya &lt;a href=&#34;/getting-started/install/&#34;&gt;tienes la CLI jx&lt;/a&gt; y también has logrado realizar al menos uno de estos dos objetivos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/getting-started/create-cluster/&#34;&gt;crear un clúster de Kubernetes con Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/getting-started/install-on-cluster/&#34;&gt;instalar Jenkins X en un clúster de Kubernete existente&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;¿Qué es lo siguiente?&lt;/p&gt;

&lt;p&gt;Bueno, la sección &lt;a href=&#34;/docs/using-jx/&#34;&gt;Utilizando de Jenkins X&lt;/a&gt; contiene los siguientes pasos que puede probar, como por ejemplo:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/docs/using-jx/creating/create-spring/&#34;&gt;cree una nueva aplicación Spring Boot e impórtela a Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/getting-started/first-project/create-quickstart/&#34;&gt;cree un nuevo inicio e impórtelo a Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/using-jx/creating/import/&#34;&gt;importe un proyecto existente (código fuente) en Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/docs/using-jx/developing/browsing/&#34;&gt;navegue&lt;/a&gt; por canales, compilaciones, aplicaciones y actividades&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También puede consultar las &lt;a href=&#34;/docs/getting-started/demos-talks-posts/&#34;&gt;diversas demostraciones de lo que puede hacer con Jenkins X&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tutoriales Google Cloud Alojado</title>
      <link>/es/docs/managing-jx/tutorials/google-hosted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/managing-jx/tutorials/google-hosted/</guid>
      <description>
        
        
        

&lt;p&gt;Estos tutoriales se pueden utilizar con &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34; target=&#34;_blank&#34;&gt;Google Kubernetes Engine&lt;/a&gt; utilizando su función &lt;a href=&#34;https://cloud.google.com/shell/docs/&#34; target=&#34;_blank&#34;&gt;Google Cloud Shell&lt;/a&gt; para ayudarte a ponerte en marcha rápidamente.&lt;/p&gt;

&lt;h3 id=&#34;instalando-jx-en-gke&#34;&gt;Instalando JX en GKE&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tiempo de duración.&lt;/strong&gt; Aproximadamente 25 minutos&lt;/p&gt;

&lt;p&gt;Al finalizar esta guía deberás tener:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;una instalación de JX funcionando en Google Kubernetes Engine&lt;/li&gt;
&lt;li&gt;creada una aplciación de inicio rápido&lt;/li&gt;
&lt;li&gt;promovida esta aplicación a producción&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/cloudshell/open?git_repo=https%3A%2F%2Fgithub.com%2Fjenkins-x%2Fjx-tutorial&amp;amp;page=editor&amp;amp;print=install-guide.txt&amp;amp;tutorial=tutorials%2Finstall-jx-on-gke%2Flesson.md&#34; target=&#34;_blank&#34;&gt;&lt;svg height=&#34;54&#34; width=&#34;274&#34;
   xmlns=&#34;http://www.w3.org/2000/svg&#34;
   version=&#34;1.2&#34;&gt;
  &lt;g
     transform=&#34;translate(0,-6)&#34;
     id=&#34;layer1&#34;&gt;
    &lt;rect
       width=&#34;266.465&#34;
       height=&#34;50.53175&#34;
       ry=&#34;4.6644692&#34;
       x=&#34;1.7675018&#34;
       y=&#34;7.7341251&#34;
       id=&#34;rect3101&#34;
       style=&#34;fill:#3367d6;fill-opacity:1&#34; /&gt;
  &lt;/g&gt;
  &lt;g
     id=&#34;layer2&#34;&gt;
    &lt;text
       x=&#34;52.473&#34;
       y=&#34;31.976562&#34;
       id=&#34;text4303&#34;
       xml:space=&#34;preserve&#34;
       style=&#34;font-size:13px;font-style:normal;font-weight:normal;line-height:100%;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Roboto, Sans;user-select: none&#34;&gt;ABRIR EN GOOGLE CLOUD SHELL&lt;/text&gt;
    &lt;g
       transform=&#34;matrix(1.1349981,0,0,1.1349981,16.464659,15.380023)&#34;
       id=&#34;g3949&#34;
       style=&#34;fill:#ffffff&#34;&gt;
      &lt;path
         d=&#34;M 21,2 H 3 C 1.9,2 1,2.9 1,4 v 11.9 c 0,1.1 0.9,2 2,2 h 7 V 20 H 8 v 2 h 8 v -2 h -2 v -2.2 h 7 c 1.1,0 2,-0.9 2,-2 V 4 C 23,2.9 22.1,2 21,2 z m -4,13 h -4 v -2 h 4 v 2 z m 0.1,-4.8 -9.9,4.1 v -2.1 l 7.2,-3.1 -7.2,-3 v -2 l 9.9,4.1 v 2 z&#34;
         id=&#34;path3937&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
      &lt;path
         d=&#34;m 10,17.8 h 4 V 20 h -4 z&#34;
         id=&#34;path3939&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
      &lt;path
         d=&#34;m 8,20 h 8 v 2 H 8 z&#34;
         id=&#34;path3941&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;instalar-jx-en-gke-utilizando-terraform&#34;&gt;Instalar JX en GKE utilizando Terraform&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Tiempo de duración.&lt;/strong&gt; Aproximadamente 30 minutos&lt;/p&gt;

&lt;p&gt;Al finalizar esta guía deberás tener:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;una instalación de JX funcionando en Google Kubernetes Engine utilizando Terraform&lt;/li&gt;
&lt;li&gt;creada una aplciación de inicio rápido&lt;/li&gt;
&lt;li&gt;promovida esta aplicación a producción utilizando prow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/cloudshell/open?git_repo=https%3A%2F%2Fgithub.com%2Fjenkins-x%2Fjx-tutorial&amp;amp;page=editor&amp;amp;print=install-guide.txt&amp;amp;tutorial=tutorials%2Finstall-jx-on-gke-with-terraform%2Flesson.md&#34; target=&#34;_blank&#34;&gt;&lt;svg height=&#34;54&#34; width=&#34;274&#34;
   xmlns=&#34;http://www.w3.org/2000/svg&#34;
   version=&#34;1.2&#34;&gt;
  &lt;g
     transform=&#34;translate(0,-6)&#34;
     id=&#34;layer1&#34;&gt;
    &lt;rect
       width=&#34;266.465&#34;
       height=&#34;50.53175&#34;
       ry=&#34;4.6644692&#34;
       x=&#34;1.7675018&#34;
       y=&#34;7.7341251&#34;
       id=&#34;rect3101&#34;
       style=&#34;fill:#3367d6;fill-opacity:1&#34; /&gt;
  &lt;/g&gt;
  &lt;g
     id=&#34;layer2&#34;&gt;
    &lt;text
       x=&#34;52.473&#34;
       y=&#34;31.976562&#34;
       id=&#34;text4303&#34;
       xml:space=&#34;preserve&#34;
       style=&#34;font-size:13px;font-style:normal;font-weight:normal;line-height:100%;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Roboto, Sans;user-select: none&#34;&gt;ABRIR EN GOOGLE CLOUD SHELL&lt;/text&gt;
    &lt;g
       transform=&#34;matrix(1.1349981,0,0,1.1349981,16.464659,15.380023)&#34;
       id=&#34;g3949&#34;
       style=&#34;fill:#ffffff&#34;&gt;
      &lt;path
         d=&#34;M 21,2 H 3 C 1.9,2 1,2.9 1,4 v 11.9 c 0,1.1 0.9,2 2,2 h 7 V 20 H 8 v 2 h 8 v -2 h -2 v -2.2 h 7 c 1.1,0 2,-0.9 2,-2 V 4 C 23,2.9 22.1,2 21,2 z m -4,13 h -4 v -2 h 4 v 2 z m 0.1,-4.8 -9.9,4.1 v -2.1 l 7.2,-3.1 -7.2,-3 v -2 l 9.9,4.1 v 2 z&#34;
         id=&#34;path3937&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
      &lt;path
         d=&#34;m 10,17.8 h 4 V 20 h -4 z&#34;
         id=&#34;path3939&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
      &lt;path
         d=&#34;m 8,20 h 8 v 2 H 8 z&#34;
         id=&#34;path3941&#34;
         style=&#34;fill:#ffffff&#34; /&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Azure</title>
      <link>/es/docs/getting-started/setup/create-cluster/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/setup/create-cluster/azure/</guid>
      <description>
        
        
        &lt;p&gt;You may find &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2019/03/06/jenkins-x-azure-kubernetes-service-setup/&#34; target=&#34;_blank&#34;&gt;this blog helpful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Otherwise ensure you &lt;a href=&#34;/docs/getting-started/setup/install/&#34;&gt;have installed the jx CLI&lt;/a&gt; then run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create cluster aks --skip-installation&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Background</title>
      <link>/es/docs/getting-started/setup/boot/background/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/setup/boot/background/</guid>
      <description>
        
        
        &lt;p&gt;We&amp;rsquo;ve learnt over the last 1-2 years that there are many different kinds of Kubernetes cluster and ways of setting up things like Ingress, DNS, domains, certificates which leads to complexity in the current &lt;a href=&#34;/commands/jx_create_cluster&#34;&gt;jx create cluster&lt;/a&gt; and &lt;a href=&#34;/commands/jx_install/&#34;&gt;jx install&lt;/a&gt; commands.&lt;/p&gt;

&lt;p&gt;Plus its now recommended to use tools like Terraform to manage all of your cloud resources: creating/updating Kubernetes clusters, cloud storage buckets, service accounts, KMS etc.&lt;/p&gt;

&lt;p&gt;We found we had lots of different bits of install logic spread across all kinds of different ways of installing (e.g. &lt;a href=&#34;/commands/jx_create_cluster&#34;&gt;jx create cluster&lt;/a&gt;, &lt;a href=&#34;/commands/jx_install/&#34;&gt;jx install&lt;/a&gt;, the use of the &lt;a href=&#34;/docs/managing-jx/common-tasks/manage-via-gitops/&#34;&gt;&amp;ndash;gitops flag&lt;/a&gt; together with the different ways of managing production secrets - that were hard to test and keep solid.&lt;/p&gt;

&lt;p&gt;We also hit issues that the &lt;a href=&#34;/commands/jx_create_cluster&#34;&gt;jx create cluster&lt;/a&gt; and &lt;a href=&#34;/commands/jx_install/&#34;&gt;jx install&lt;/a&gt; commands would install things like ingress controller and not give users the chance to configure/override their installation.&lt;/p&gt;

&lt;p&gt;Users often struggled with understanding how to easily configure and override things; or upgrade values after things have been installed.&lt;/p&gt;

&lt;p&gt;So we wanted to come up with a new cleaner approach which worked for every kind of installation and provided a standard way to extend and customise the configuration via &lt;a href=&#34;/docs/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; and helm style configuration.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Google</title>
      <link>/es/docs/getting-started/setup/create-cluster/google/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/setup/create-cluster/google/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;using-the-google-cloud-console&#34;&gt;Using the Google Cloud Console&lt;/h2&gt;

&lt;p&gt;You can create Kubernetes clusters in a few clicks on the &lt;a href=&#34;https://console.cloud.google.com/&#34; target=&#34;_blank&#34;&gt;Google Cloud Console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First make sure you have created/selected a Project:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/quickstart/gke-select-project.png&#34; class=&#34;img-thumbnail&#34;&gt;&lt;/p&gt;

&lt;p&gt;Now you can click the &lt;code&gt;create cluster&lt;/code&gt; button on the &lt;a href=&#34;https://console.cloud.google.com/kubernetes/list&#34; target=&#34;_blank&#34;&gt;kubernetets clusters&lt;/a&gt; page or try &lt;a href=&#34;https://console.cloud.google.com/kubernetes/add&#34; target=&#34;_blank&#34;&gt;create cluster&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;using-gcloud&#34;&gt;Using gcloud&lt;/h2&gt;

&lt;p&gt;The CLI tool for working with google cloud is called &lt;code&gt;gcloud&lt;/code&gt;. If you have not done so already please &lt;a href=&#34;https://cloud.google.com/sdk/install&#34; target=&#34;_blank&#34;&gt;install gcloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To create a cluster with gcloud &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster&#34; target=&#34;_blank&#34;&gt;follow these instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;using-google-cloud-shell&#34;&gt;Using Google Cloud Shell&lt;/h2&gt;

&lt;p&gt;To avoid having to install &lt;code&gt;gcloud&lt;/code&gt; you can use the &lt;a href=&#34;https://console.cloud.google.com/&#34; target=&#34;_blank&#34;&gt;Google Cloud Shell&lt;/a&gt; as it already comes with most of the things you may need to install (&lt;code&gt;git, gcloud, kubectl&lt;/code&gt; etc).&lt;/p&gt;

&lt;p&gt;First you need to open the Google Cloud Shell via the button in the toolbar:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/quickstart/gke-start-shell.png&#34; class=&#34;img-thumbnail&#34;&gt;&lt;/p&gt;

&lt;p&gt;You can then create a cluster with &lt;code&gt;gcloud&lt;/code&gt; by &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster&#34; target=&#34;_blank&#34;&gt;following these instructions&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;connecting-to-your-cluster&#34;&gt;Connecting to your cluster&lt;/h2&gt;

&lt;p&gt;Once you have created a cluster, you need to connect to it so you can access it via the &lt;code&gt;kubectl&lt;/code&gt; or &lt;a href=&#34;/docs/getting-started/setup/install/&#34;&gt;jx&lt;/a&gt; command line tools.&lt;/p&gt;

&lt;p&gt;To do this click on the &lt;code&gt;Connect&lt;/code&gt; button on the &lt;a href=&#34;https://console.cloud.google.com/kubernetes/list&#34; target=&#34;_blank&#34;&gt;Kubernetes Engine page&lt;/a&gt; in the &lt;a href=&#34;https://console.cloud.google.com/&#34; target=&#34;_blank&#34;&gt;Google Console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/quickstart/gke-connect.png&#34; class=&#34;img-thumbnail&#34;&gt;&lt;/p&gt;

&lt;p&gt;You should now be able to use the &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;jx&lt;/code&gt; CLI tools on your laptop to talk to the GKE cluster. e.g. this command should list the nodes in your cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl get node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Create EKS cluster with Terraform</title>
      <link>/es/docs/getting-started/setup/create-cluster/amazon/terraform/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/setup/create-cluster/amazon/terraform/</guid>
      <description>
        
        
        &lt;p&gt;This is a short guide to setup EKS on AWS and the required resources for Jenkins X&amp;rsquo;s setup of Vault
using Terraform. It assumes access to AWS is configured and familiarity with AWS, kubectl and Terraform.&lt;/p&gt;

&lt;p&gt;This snippet of Terraform code sets EKS and up needed resources on AWS. It outputs the parameters
you then need to add to append to &lt;code&gt;jx install&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;region&amp;#34;&lt;/span&gt; {
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;list&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vpc_id&amp;#34;&lt;/span&gt; {
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;key_name&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    description&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SSH key name for worker nodes&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bucket_domain&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    description&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Suffix for S3 bucket used for vault unseal operation&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;provider&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    region&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${var.region}&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;eks&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    source&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;terraform-aws-modules/eks/aws&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    cluster_name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${var.region}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    subnets&lt;/span&gt;      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${var.subnets}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    vpc_id&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${var.vpc_id}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    worker_groups&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
        {
&lt;span style=&#34;color:#c4a000&#34;&gt;            autoscaling_enabled&lt;/span&gt;   &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;            asg_min_size&lt;/span&gt;          &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;            asg_desired_capacity&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;            instance_type&lt;/span&gt;         &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;t3.large&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;            asg_max_size&lt;/span&gt;          &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;            key_name&lt;/span&gt;              &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${var.key_name}&amp;#34;&lt;/span&gt;
        }
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    version&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5.0.0&amp;#34;&lt;/span&gt;
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Needed for cluster-autoscaler
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_iam_role_policy_attachment&amp;#34; &amp;#34;workers_AmazonEC2ContainerRegistryPowerUser&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;  policy_arn&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;  role&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${module.eks.worker_iam_role_name}&amp;#34;&lt;/span&gt;
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Create S3 bucket for KMS
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_s3_bucket&amp;#34; &amp;#34;vault-unseal&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    bucket&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vault-unseal.${var.region}.${var.bucket_domain}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    acl&lt;/span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;private&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#a40000&#34;&gt;versioning&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        enabled&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
    }
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Create KMS key
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_kms_key&amp;#34; &amp;#34;bank_vault&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    description&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;KMS Key for bank vault unseal&amp;#34;&lt;/span&gt;
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Create DynamoDB table
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_dynamodb_table&amp;#34; &amp;#34;vault-data&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    name&lt;/span&gt;           &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vault-data&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    read_capacity&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    write_capacity&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    hash_key&lt;/span&gt;       &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Path&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    range_key&lt;/span&gt;      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Key&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a40000&#34;&gt;attribute&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Path&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;
    }

    &lt;span style=&#34;color:#a40000&#34;&gt;attribute&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Key&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        type&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;
    }
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Create service account for vault. Should the policy
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_iam_user&amp;#34; &amp;#34;vault&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;  name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vault_${var.region}&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#a40000&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_iam_policy_document&amp;#34; &amp;#34;vault&amp;#34;&lt;/span&gt; {
    &lt;span style=&#34;color:#a40000&#34;&gt;statement&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        sid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;DynamoDB&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        effect&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        actions&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DescribeLimits&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DescribeTimeToLive&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:ListTagsOfResource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DescribeReservedCapacityOfferings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DescribeReservedCapacity&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:ListTables&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:BatchGetItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:BatchWriteItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:CreateTable&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DeleteItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:GetItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:GetRecords&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:PutItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:Query&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:UpdateItem&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:Scan&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;dynamodb:DescribeTable&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        resources&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_dynamodb_table.vault-data.arn}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    }
    &lt;span style=&#34;color:#a40000&#34;&gt;statement&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        sid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;S3&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        effect&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        actions&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
                &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;s3:PutObject&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;s3:GetObject&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        resources&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_s3_bucket.vault-unseal.arn}/*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    }
    &lt;span style=&#34;color:#a40000&#34;&gt;statement&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        sid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;S3List&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        effect&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        actions&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;s3:ListBucket&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        resources&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_s3_bucket.vault-unseal.arn}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    }
    &lt;span style=&#34;color:#a40000&#34;&gt;statement&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;        sid&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;KMS&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        effect&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Allow&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        actions&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kms:Encrypt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kms:Decrypt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kms:DescribeKey&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;        resources&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_kms_key.bank_vault.arn}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
    }
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_iam_user_policy&amp;#34; &amp;#34;vault&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vault_${var.region}&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#c4a000&#34;&gt;    user&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_iam_user.vault.name}&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#c4a000&#34;&gt;    policy&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${data.aws_iam_policy_document.vault.json}&amp;#34;&lt;/span&gt;
}

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;aws_iam_access_key&amp;#34; &amp;#34;vault&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    user&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;${aws_iam_user.vault.name}&amp;#34;&lt;/span&gt;
}&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Output KMS key id, S3 bucket name and secret name in the form of jx install options
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;jx_params&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#c4a000&#34;&gt;    value&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt; &amp;#34;--provider&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;eks --gitops --no-tiller --vault --aws-dynamodb-region&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${var.region} --aws-dynamodb-table&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${aws_dynamodb_table.vault-data.name} --aws-kms-region&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${var.region} --aws-kms-key-id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${aws_kms_key.bank_vault.key_id} --aws-s3-region&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${var.region}  --aws-s3-bucket&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${aws_s3_bucket.vault-unseal.id} --aws-access-key-id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;${aws_iam_access_key.vault.id} --aws-secret-access-key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;aws_iam_access_key&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#34;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Save as &lt;code&gt;eks.tf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The module terraform-aws-modules/eks/aws will also store a kubeconfig file as &lt;code&gt;config&lt;/code&gt;. This can be
copied to or merged with your &lt;code&gt;~/.kube/config&lt;/code&gt;. Then &lt;code&gt;jx install&lt;/code&gt; can be run with the parameters
output by the Terraform config above.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: How it works</title>
      <link>/es/docs/getting-started/setup/boot/how-it-works/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/es/docs/getting-started/setup/boot/how-it-works/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;source-repositories&#34;&gt;Source Repositories&lt;/h2&gt;

&lt;p&gt;Boot automatically sets up any source repositories which exist in the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34; target=&#34;_blank&#34;&gt;repositories/templates&lt;/a&gt; folder as &lt;a href=&#34;/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt;  custom resources and uses any associated &lt;a href=&#34;/docs/reference/components/custom-resources/#scheduler&#34;&gt;Scheduler&lt;/a&gt; custom resources to regenerate the Prow configuration.&lt;/p&gt;

&lt;p&gt;Boot also automatically creates or updates any required webhooks on the git provider for your &lt;a href=&#34;/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt; resources.&lt;/p&gt;

&lt;p&gt;If you are using GitOps we hope to automate the population of the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34; target=&#34;_blank&#34;&gt;repositories/templates&lt;/a&gt; folder as you import/create projects. Until then you can manually create a Pull Request on your boot git repository via &lt;a href=&#34;/commands/jx_step_create_pullrequest_repositories/&#34;&gt;jx step create pullrequest repositories&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pipeline&#34;&gt;Pipeline&lt;/h2&gt;

&lt;p&gt;The install/upgrade process is defined in a &lt;a href=&#34;/docs/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipeline&lt;/a&gt; in a file called &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/jenkins-x.yml&#34; target=&#34;_blank&#34;&gt;jenkins-x.yml&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Typically you won&amp;rsquo;t need to edit this file; though if you do see the &lt;a href=&#34;/docs/concepts/jenkins-x-pipelines/#customising-the-pipelines&#34;&gt;editing guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;The boot process is configured using helm style configuration in &lt;code&gt;values.yaml&lt;/code&gt; files. Though we support a few &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/4328&#34; target=&#34;_blank&#34;&gt;extensions to helm&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;parameters-file&#34;&gt;Parameters file&lt;/h3&gt;

&lt;p&gt;We define a &lt;a href=&#34;https://github.com/jstrachan/environment-simple-tekton/blob/master/env/parameters.yaml&#34; target=&#34;_blank&#34;&gt;env/parameters.yaml&lt;/a&gt; file which defines all the parameters either checked in or loaded from Vault or a local file system secrets location.&lt;/p&gt;

&lt;h4 id=&#34;injecting-secrets-into-the-parameters&#34;&gt;Injecting secrets into the parameters&lt;/h4&gt;

&lt;p&gt;If you look at the current &lt;a href=&#34;https://github.com/jstrachan/environment-simple-tekton/blob/master/env/parameters.yaml&#34; target=&#34;_blank&#34;&gt;env/parameters.yaml&lt;/a&gt; file you will see some values inlined and others use URIs of the form &lt;code&gt;local:my-cluster-folder/nameofSecret/key&lt;/code&gt;. This currently supports 2 schemes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vault:&lt;/code&gt; to load from a path + key from Vault&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local:&lt;/code&gt; to load from a key in a YAML file at &lt;code&gt;~/.jx/localSecrets/$path.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means we can populate all the Parameters we need on startup then refer to them from &lt;code&gt;values.tmpl.yaml&lt;/code&gt; to populate the tree of values to then inject those into Vault.&lt;/p&gt;

&lt;h3 id=&#34;populating-the-parameters-yaml-file&#34;&gt;Populating the &lt;code&gt;parameters.yaml&lt;/code&gt; file&lt;/h3&gt;

&lt;p&gt;We can then use the new step to populate the &lt;code&gt;parameters.yaml&lt;/code&gt; file in the Pipeline via this command in the &lt;code&gt;env&lt;/code&gt; folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx step create values --name parameters&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This uses the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/env/parameters.schema.json&#34; target=&#34;_blank&#34;&gt;parameters.schema.json&lt;/a&gt; file which powers the UI.&lt;/p&gt;

&lt;h3 id=&#34;improvements-to-values-yaml&#34;&gt;Improvements to values.yaml&lt;/h3&gt;

&lt;h4 id=&#34;support-a-tree-of-values-yaml-files&#34;&gt;Support a tree of values.yaml files&lt;/h4&gt;

&lt;p&gt;Rather than a huge huge deeply nested values.yaml file we can have a tree of files for each App only include the App specific configuration in each folder. e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;env/
  values.yaml   &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# top level configuration&lt;/span&gt;
  prow/
    values.yaml &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# prow specific config&lt;/span&gt;
  tekton/
    values.yaml  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# tekton specific config&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;values-tmpl-yaml-templates&#34;&gt;values.tmpl.yaml templates&lt;/h4&gt;

&lt;p&gt;When using &lt;code&gt;jx step helm apply&lt;/code&gt; we now allow &lt;code&gt;values.tmpl.yaml&lt;/code&gt; files to use go/helm templates just like &lt;code&gt;templates/foo.yaml&lt;/code&gt; files support inside helm charts so that we can generate value/secret strings which can use templating to compose things from smaller secret values. e.g. creating a maven &lt;code&gt;settings.xml&lt;/code&gt; file or docker &lt;code&gt;config.json&lt;/code&gt; which includes many user/passwords for different registries.&lt;/p&gt;

&lt;p&gt;We can then check in the &lt;code&gt;values.tmpl.yaml&lt;/code&gt; file which does all of this composition and reference the actual secret values via URLs (or template functions) to access vault or local vault files&lt;/p&gt;

&lt;p&gt;To do this we use expressions like: &lt;code&gt;{{ .Parameter.pipelineUser.token }}&lt;/code&gt; somewhere in the &lt;code&gt;values.tmpl.yaml&lt;/code&gt; values file. So this is like injecting values into the helm templates; but it happens up front to help generate the &lt;code&gt;values.yaml&lt;/code&gt; files.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
