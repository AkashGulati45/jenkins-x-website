<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X â€“ Developing with Jenkins X</title>
    <link>/docs/using-jx/developing/</link>
    <description>Recent content in Developing with Jenkins X on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/using-jx/developing/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Browsing</title>
      <link>/docs/using-jx/developing/browsing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/using-jx/developing/browsing/</guid>
      <description>
        
        
        

&lt;p&gt;If you have used kubernetes before you&amp;rsquo;re probably used the &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34; target=&#34;_blank&#34;&gt;kubectl&lt;/a&gt; command line to view kubernetes resources:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl get pods
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Jenkins X command line tool, &lt;a href=&#34;/commands/jx&#34;&gt;jx&lt;/a&gt;, has a similar look and feel to &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34; target=&#34;_blank&#34;&gt;kubectl&lt;/a&gt; and lets you get the status of all the Jenkins X resources.&lt;/p&gt;

&lt;h3 id=&#34;view-jenkins-console&#34;&gt;View Jenkins Console&lt;/h3&gt;

&lt;p&gt;If you are familiar with the Jenkins console then you can use &lt;a href=&#34;/commands/jx_console&#34;&gt;jx console&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx console
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to open it in a browser.&lt;/p&gt;

&lt;h3 id=&#34;pipeline-activity&#34;&gt;Pipeline Activity&lt;/h3&gt;

&lt;p&gt;To view the current pipeline activity &lt;a href=&#34;/commands/jx_get_activities&#34;&gt;jx get activities&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get activities
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to watch whats going on with your app &lt;code&gt;myapp&lt;/code&gt;  you can use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get activities -f myapp -w
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will watch the pipeline activities and update the screen whenever a significant change happens (e.g. a release completes, a PR is created to start &lt;a href=&#34;/developing/promote&#34;&gt;promotion&lt;/a&gt; etc).&lt;/p&gt;

&lt;h3 id=&#34;pipeline-build-logs&#34;&gt;Pipeline Build logs&lt;/h3&gt;

&lt;p&gt;To view the current pipeline build logs via &lt;a href=&#34;/commands/jx_get_build_logs&#34;&gt;jx get build logs&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get build logs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are then presented with all the possible pipelines to watch.&lt;/p&gt;

&lt;p&gt;You can quickly filter that via&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get build logs -f myapp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or if you wish to be explicit&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get build logs myorg/myapp/master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h3&gt;

&lt;p&gt;To view the current configured pipelines use &lt;a href=&#34;/commands/jx_get_pipelines&#34;&gt;jx get pipelines&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get pipelines
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;applications&#34;&gt;Applications&lt;/h3&gt;

&lt;p&gt;To view all the applications in your team across all your environments with URLs and pod counts use  &lt;a href=&#34;/commands/jx_get_applications&#34;&gt;jx get applications&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get applications
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to hide the URLs or the pod counts you can use &lt;code&gt;u&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt;. e.g. to hide the URLs:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get applications -u
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or hide the pod counts:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get applications -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also filter the apps by an environment:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get applications -e staging
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;environments&#34;&gt;Environments&lt;/h3&gt;

&lt;p&gt;To view the &lt;a href=&#34;/docs/concepts/features/#environments&#34;&gt;environments&lt;/a&gt; defined for your team use &lt;a href=&#34;/commands/jx_get_environments&#34;&gt;jx get environments&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get environments
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create a new environment via &lt;a href=&#34;/commands/jx_create_environment&#34;&gt;jx create environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;edit an environment via &lt;a href=&#34;/commands/jx_edit_environment&#34;&gt;jx edit environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;delete an environment via &lt;a href=&#34;/commands/jx_delete_environment&#34;&gt;jx delete environment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Developing Using DevPods</title>
      <link>/docs/using-jx/developing/devpods/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/using-jx/developing/devpods/</guid>
      <description>
        
        
        

&lt;p&gt;Jenkins X allows you to edit app code by using a Kubernetes Pod which we call &lt;code&gt;DevPod&lt;/code&gt;.  This helps you develop inside the cloud with the same software tools, platform, container images and pod templates as the CI/CD pipelines. This helps keep everyone in the team and your CI/CD pipelines using the same platform and tools all the time to reduce waste and avoid those pesky &amp;lsquo;it works on my laptop but not in production&amp;rsquo; issues.&lt;/p&gt;

&lt;p&gt;There are a couple of ways that you as a developer can quickly become productive when editing an app, and add value ultra fast.&lt;/p&gt;

&lt;p&gt;There are specific steps for each approach, and we provide you a visual representation of each workflow, as well as the specific steps to quickly get started.&lt;/p&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Keep in mind, this development workflow helps you make changes before even checking in your code to the repo, or submitting a formal pull request.  Really meant for you to validate your changes fast!
&lt;/div&gt;


&lt;h2 id=&#34;develop-using-devpods-and-a-desktop-ide&#34;&gt;Develop Using DevPods and a desktop IDE&lt;/h2&gt;

&lt;p&gt;In this scenario, you are using a desktop IDE such as VS Code or Intellij which in fact have &lt;a href=&#34;/developing/ide&#34;&gt;a plugin&lt;/a&gt; for &lt;code&gt;Jenkins X&lt;/code&gt;.  You are making &lt;strong&gt;iterative&lt;/strong&gt; changes using your IDE and said changes are reflected immediately when you open the &lt;code&gt;url&lt;/code&gt; assigned to your &lt;code&gt;DevPod&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;
&lt;img src=&#34;/images/developing/developer_workflow_ide.png&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Developer Workflow - Develop Using DevPods and an IDE&lt;/h5&gt;
&lt;/figcaption&gt;&lt;/p&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

See &lt;a href=&#34;/docs/using-jx/common-tasks/ide/#vs-code&#34;&gt;IDE&lt;/a&gt; for more details on using VSCode
&lt;/div&gt;


&lt;p&gt;To get started using this approach, simply execute the following command in the root of your app directory.  We are using a &lt;code&gt;NodeJS&lt;/code&gt; app for this example, therefore we specify the language using the &lt;code&gt;-l&lt;/code&gt; parameter.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx create devpod -l nodejs --reuse --sync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A successful execution will ensures the following happened:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Output the &lt;code&gt;URLs&lt;/code&gt; available to access the &lt;code&gt;Pod&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;App folder will sync with the &lt;code&gt;Pod&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An ssh session is initiated to the &lt;code&gt;Pod&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this happens, you must execute one more command within your ssh session to the Pod to ensure any changes are synchronized.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./watch.sh
&lt;/code&gt;&lt;/pre&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

From this point forward, any changes you make &lt;strong&gt;(step 1 in diagram)&lt;/strong&gt;, trigger a Docker Image build, and you should see the output of that build command in your terminal as it happens.
&lt;/div&gt;


&lt;p&gt;Once you are happy with changes to your app, you go to &lt;strong&gt;(step 2 in diagram)&lt;/strong&gt; and check-in your code, create a &lt;code&gt;Pull Request&lt;/code&gt; at which point a &lt;code&gt;Jenkins X Pipeline&lt;/code&gt; is triggered immediately to promote your changes to &lt;code&gt;Staging&lt;/code&gt; enviornment.&lt;/p&gt;

&lt;h2 id=&#34;develop-using-devpods-and-a-web-based-ide&#34;&gt;Develop Using DevPods and a Web-based IDE&lt;/h2&gt;

&lt;p&gt;If you prefer not to use an IDE on your desktop using a similar workflow as above.  To edit the app code, you use the well known &lt;a href=&#34;https://www.theia-ide.org/&#34; target=&#34;_blank&#34;&gt;Theia&lt;/a&gt; IDE.&lt;/p&gt;

&lt;p&gt;&lt;figure&gt;
&lt;img src=&#34;/images/developing/developer_workflow_theia.png&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Developer Workflow - Develop Using DevPods and Web-based IDE Theia&lt;/h5&gt;
&lt;/figcaption&gt;&lt;/p&gt;

&lt;p&gt;Using this approach, you execute the following on your terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;
jx create devpod --verbose true

# some output us removed for brevity
Creating a DevPod of label: nodejs
Created pod me-nodejs - waiting for it to be ready...
Using helmBinary helm with feature flag: none
Updating Helm repository...
Helm repository update done.
...
Pod me-nodejs is now ready!
You can open other shells into this DevPod via jx create devpod

You can edit your app using Theia (a browser based IDE) at http://me-nodejs-theia.jx.yourdomain.com

Attempting to install Bash Completion into DevPod
Running command: kubectl exec -it -n jx -c theia me-nodejs -- /bin/sh -c mkdir -p /workspace
cd /workspace
...
[root@me-nodejs node-app]#
&lt;/code&gt;&lt;/pre&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;NOTE&lt;/strong&gt;: We are not passing the &lt;code&gt;--sync&lt;/code&gt; flag because we plan on using the web based IDE
&lt;/div&gt;


&lt;p&gt;A succesful execution of the command above, will ensure the following has happened:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DevPod is created, and exposed for you to access app via URL&lt;/li&gt;
&lt;li&gt;Theia Docker container is running&lt;/li&gt;
&lt;li&gt;App folder is mounted to Theia Docker container at &lt;code&gt;/workspace&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;You have a terminal session into the &lt;code&gt;DevPod&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To see your changes in real-time, you must also execute the following command within your terminal session connected to the Pod:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./watch.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;promote-to-staging&#34;&gt;Promote to Staging&lt;/h3&gt;

&lt;p&gt;Once you are happy with the changes you made to the app, you can simply check-in your code and create a &lt;code&gt;pull request&lt;/code&gt;.  This will trigger the pipeline to promote your changes to the &lt;code&gt;Staging&lt;/code&gt; environment (&lt;strong&gt;Step 2 and 3 in diagram&lt;/strong&gt;)&lt;/p&gt;

&lt;h3 id=&#34;promote-to-production&#34;&gt;Promote to Production&lt;/h3&gt;

&lt;p&gt;Most of the time,the Production environment in &lt;strong&gt;Jenkins X&lt;/strong&gt; will have its &lt;code&gt;Promote&lt;/code&gt; setting set to &lt;code&gt;MANUAL&lt;/code&gt;.  Therefore, promoting your app can happen manually after stakeholders have reviewed the staging envionment, for example.&lt;/p&gt;

&lt;p&gt;To promote the app to production, you can execute the following commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;first get the app version from this output&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get apps
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;promote app version 0.0.2 from staging to production&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx promote --version 0.0.2 --env production
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;additional-learning&#34;&gt;Additional Learning&lt;/h1&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: IDE</title>
      <link>/docs/using-jx/developing/ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/using-jx/developing/ide/</guid>
      <description>
        
        
        

&lt;p&gt;As developers we often spend lots of time in our IDE of choice working on code. Jenkins X is all about helping developers deliver business value faster through software; so we want to make Jenkins X super easy to work with from inside your IDE.&lt;/p&gt;

&lt;p&gt;So we have IDE plugins for working with Jenkins X&lt;/p&gt;

&lt;h2 id=&#34;vs-code&#34;&gt;VS Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34;&gt;VS Code&lt;/a&gt; is a popular open source IDE from Microsoft.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve created the &lt;a href=&#34;https://github.com/jenkins-x/vscode-jx-tools&#34; target=&#34;_blank&#34;&gt;vscode-jx-tools&lt;/a&gt; extension for VS Code.&lt;/p&gt;

&lt;p&gt;You can install this into VS Code via the &lt;code&gt;Extensions&lt;/code&gt; window, searching for &lt;code&gt;jx&lt;/code&gt; should find the extension.&lt;/p&gt;

&lt;p&gt;After its installed hit &lt;code&gt;Reload&lt;/code&gt; and you should be good to go.&lt;/p&gt;

&lt;p&gt;If you then expand the &lt;code&gt;JENKINS X&lt;/code&gt; navigation window you should see UI that updates in real time as you create projects, as Pull Requests are raised or code is merged to master.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/vscode.png&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;browse all the pipelines in your team with real time updates as release or pull request pipelines start/stop.&lt;/li&gt;
&lt;li&gt;open pipeline build logs inside the VS Code Terminal&lt;/li&gt;
&lt;li&gt;browse the Jenkins pipeline page, git repository, build logs or applications easily

&lt;ul&gt;
&lt;li&gt;right click on the Jenkins X explorer&lt;/li&gt;
&lt;li&gt;start/stop pipelines too!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;open &lt;a href=&#34;/docs/reference/devpods/&#34;&gt;DevPods&lt;/a&gt; with source code synchronisation in a single command in VS Code for developing inside the cloud with the same container images and pod templates as the CI/CD pipelines&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;intellij&#34;&gt;IntelliJ&lt;/h2&gt;

&lt;p&gt;We have a plugin for &lt;a href=&#34;https://www.jetbrains.com/idea/&#34; target=&#34;_blank&#34;&gt;IntelliJ&lt;/a&gt; and the associated IDEs like WebStorm, GoLand, PyCharm et al&lt;/p&gt;

&lt;p&gt;You can find the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/11099-jenkins-x&#34; target=&#34;_blank&#34;&gt;Jenkins X plugin for IntelliJ here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/intellij.png&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;web-based-ide&#34;&gt;Web based IDE&lt;/h2&gt;

&lt;p&gt;To help you work in the cloud we also support a Web Based IDE using  the &lt;a href=&#34;https://www.theia-ide.org/&#34; target=&#34;_blank&#34;&gt;Theia IDE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started with Theia see &lt;a href=&#34;/devpods/#using-theia-ide&#34;&gt;how to create a DevPod with an embedded Web IDE&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Issues</title>
      <link>/docs/using-jx/developing/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/using-jx/developing/issues/</guid>
      <description>
        
        
        

&lt;p&gt;Jenkins X defaults to using the issue tracker in your git provider for creating and browsing issues.&lt;/p&gt;

&lt;p&gt;e.g. if you are inside the source code of a github project then you can type &lt;a href=&#34;/commands/jx_create_issue&#34;&gt;jx create issue&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx create issue -t &amp;quot;lets make things more awesome&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And a new issue will be created on github.&lt;/p&gt;

&lt;p&gt;You can list open the issues on your project via &lt;a href=&#34;/commands/jx_get_issues&#34;&gt;jx get issues&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get issues
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;using-a-different-issue-tracker&#34;&gt;Using a different issue tracker&lt;/h3&gt;

&lt;p&gt;If you wish to use, say, JIRA on a project you first need to add a JIRA service.&lt;/p&gt;

&lt;p&gt;You can register your JIRA service via &lt;a href=&#34;/commands/jx_create_tracker_server&#34;&gt;jx create tracker server&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx create tracker server jira https://mycompany.atlassian.net/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can then view your issue tracker server via &lt;a href=&#34;/commands/jx_get_tracker&#34;&gt;jx get tracker&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx get tracker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then add a user and token via:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx create tracker token -n jira  myEmailAddress
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-the-issue-tracker-on-a-project&#34;&gt;configure the issue tracker on a project&lt;/h3&gt;

&lt;p&gt;In the source code of your project then use &lt;a href=&#34;/commands/jx_edit_config&#34;&gt;jx edit config&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx edit config -k issues
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if you have multiple issue trackers, pick the one you wish to use for the project&lt;/li&gt;
&lt;li&gt;enter the name of the project in the issue tracker (e.g. the upper case name of the JIRA project)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A file called &lt;code&gt;jenkins-x.yml&lt;/code&gt; will be modified in your project source code which should be added to your git repository.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Kubernetes Context</title>
      <link>/docs/using-jx/developing/kube-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/using-jx/developing/kube-context/</guid>
      <description>
        
        
        

&lt;p&gt;The kubernetes CLI tool &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34; target=&#34;_blank&#34;&gt;kubectl&lt;/a&gt; keeps track of the kubernetes cluster and namespace you are using via a local file &lt;code&gt;~/.kube/config&lt;/code&gt; (or a file at &lt;code&gt;$KUBECONFIG&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If you want to change the namespace using the kubectl command line you can use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl config set-context `kubectl config current-context` --namespace=foo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However &lt;a href=&#34;/commands/jx&#34;&gt;jx&lt;/a&gt; provides lots of helper commands for changing clusters, namespaces or environments:&lt;/p&gt;

&lt;h3 id=&#34;changing-environments&#34;&gt;Changing Environments&lt;/h3&gt;

&lt;p&gt;Use &lt;a href=&#34;/commands/jx_environment&#34;&gt;jx environment&lt;/a&gt; to switch &lt;a href=&#34;/docs/concepts/features/#environments&#34;&gt;environments&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx environment
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be presented with a list of the environments for the current team. Use the cursor keys and enter to select the one you wish to switch to. Or press &lt;code&gt;Ctrl+C&lt;/code&gt; to terminate and not change the environment.&lt;/p&gt;

&lt;p&gt;Or if you know the environment you wish to switch to just type it as an argument:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx env staging
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;changing-namespace&#34;&gt;Changing Namespace&lt;/h3&gt;

&lt;p&gt;Use &lt;a href=&#34;/commands/jx_namespace&#34;&gt;jx namespace&lt;/a&gt; to switch between different kubernetes namespaces.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx namespace
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be presented with a list of all the namespaces in the kubernetes cluster. Use the cursor keys and enter to select the one you wish to switch to. Or press &lt;code&gt;Ctrl+C&lt;/code&gt; to terminate and not change the namespace.&lt;/p&gt;

&lt;p&gt;Or if you know the kubernetes namespace you wish to switch to just type it as an argument:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx ns jx-production
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;changing-cluster&#34;&gt;Changing Cluster&lt;/h3&gt;

&lt;p&gt;Use &lt;a href=&#34;/commands/jx_context&#34;&gt;jx context&lt;/a&gt; to switch between different kubernetes clusters (or contexts).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx context
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be presented with a list of all the contexts that you have used on your machine. Use the cursor keys and enter to select the one you wish to switch to. Or press &lt;code&gt;Ctrl+C&lt;/code&gt; to terminate and not change the namespace.&lt;/p&gt;

&lt;p&gt;Or if you know the kubernetes namespace you wish to switch to just type it as an argument:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;jx ctx gke_jenkinsx-dev_europe-west2-a_myuserid-foo
jx ctx minikube
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;local-changes&#34;&gt;Local changes&lt;/h3&gt;

&lt;p&gt;When you change namespace or context in kubernetes via &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34; target=&#34;_blank&#34;&gt;kubectl&lt;/a&gt; or the commands above then the kubernetes context and namespace is changed for &lt;strong&gt;all of your terminals&lt;/strong&gt; as it updates the shared file (&lt;code&gt;~/.kube/config&lt;/code&gt; or &lt;code&gt;$KUBECONFIG&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;This can be handy - but is sometimes dangerous. e.g. if you want to do something on a production cluster; but forget and then re-run a command in another terminal to delete all the pods in your development namespace - but forget you just switched to the production namespace!&lt;/p&gt;

&lt;p&gt;So its sometimes useful to be able to change the kubernetes context and/or namespace locally in a single shell only. For example if you ever want to look at a production cluster, only use that cluster in one shell only to minimise accidents.&lt;/p&gt;

&lt;p&gt;You can do that with the &lt;a href=&#34;/commands/jx_shell&#34;&gt;jx shell&lt;/a&gt; command which prompts you to pick a different kubernetes context like the  &lt;a href=&#34;/commands/jx_context&#34;&gt;jx context&lt;/a&gt; command. However changes to the namespace and/or cluster made in this shell only affect the current shell only!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/commands/jx_shell&#34;&gt;jx shell&lt;/a&gt; also automatically updates your command prompt using &lt;a href=&#34;/commands/jx_prompt&#34;&gt;jx prompt&lt;/a&gt;
so that it is clear your shell has changed the context and/or namespace,
and adds bash completion via &lt;a href=&#34;/commands/jx_prompt&#34;&gt;jx prompt&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;customize-your-shell&#34;&gt;Customize your shell&lt;/h3&gt;

&lt;p&gt;You can use &lt;a href=&#34;/commands/jx_prompt&#34;&gt;jx prompt&lt;/a&gt;  to add the current kubernetes cluster and namespace to your terminals prompt.&lt;/p&gt;

&lt;p&gt;To add bash completion to your shell for &lt;a href=&#34;/commands/jx&#34;&gt;jx commands&lt;/a&gt; then try the  &lt;a href=&#34;/commands/jx_completion&#34;&gt;jx completion&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
