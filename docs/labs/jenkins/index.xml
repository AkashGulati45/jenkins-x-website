<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X â€“ Jenkins</title>
    <link>/docs/labs/jenkins/</link>
    <description>Recent content in Jenkins on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/labs/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Overview</title>
      <link>/docs/labs/jenkins/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/labs/jenkins/overview/</guid>
      <description>
        
        
        &lt;p&gt;The &lt;a href=&#34;https://github.com/jstrachan/enhancements/blob/jenkins-trigger/proposals/trigger-jenkins/README.md&#34;&gt;Trigger Jenkins Proposal&lt;/a&gt; aims to improve the interoperability of Jenkins and Jenkins X so you can use both together to solve all of your CI//CD needs.&lt;/p&gt;
&lt;p&gt;We want to make it easy to reuse existing remote Jenkins servers with Jenkins X / tekton so that folks can work with either 100% cloud native tekton based automated CI/CD from Jenkins X or reuse existing Jenkins pipelines with remote Jenkins servers.&lt;/p&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;p&gt;We maintain registry of Jenkins Servers using  Kubernetes &lt;code&gt;Secrets&lt;/code&gt; for each Jenkins Server with details of the URL, username and API Token.&lt;/p&gt;
&lt;p&gt;We then have a command line tool and container image which can then invoke a &lt;code&gt;Jenkinsfile&lt;/code&gt; based pipeline in any of the Jenkins Servers in the registry.&lt;/p&gt;
&lt;p&gt;This allows any Jenkins pipelines to be triggered from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;any Jenkins X Pipeline&lt;/li&gt;
&lt;li&gt;Tekton&lt;/li&gt;
&lt;li&gt;Kubernetes Job&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over time we can then bring more value to folks using a mixture of Jenkins + Jenkins X. e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reuse ChatOps from Jenkins X for existing projects that use Jenkins pipelines&lt;/li&gt;
&lt;li&gt;Reuse Jenkins X Apps / Build Packs on projects released by Jenkins
&lt;ul&gt;
&lt;li&gt;E.g. reuse Jenkins X Apps / Pipelines for linting, code quality, security scanning - while preserving the existing Jenkins pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;known-issues&#34;&gt;Known issues&lt;/h2&gt;
&lt;p&gt;If you see this error when trying to trigger a pipeline:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;403 No valid crumb was included in the request
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then until we figure out a better workaround you need to go into &lt;code&gt;Manage Jenkins&lt;/code&gt; -&amp;gt; &lt;code&gt;Configure Global Security&lt;/code&gt; then make sure you uncheck &lt;code&gt;Prevent Cross Site Request Forgery exploits&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Getting Started</title>
      <link>/docs/labs/jenkins/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/labs/jenkins/getting-started/</guid>
      <description>
        
        
        &lt;p&gt;Make sure you have got the &lt;a href=&#34;/docs/labs/jxl/&#34;&gt;jxl binary&lt;/a&gt; before proceeding.&lt;/p&gt;
&lt;h2 id=&#34;adding-jenkins-servers&#34;&gt;Adding Jenkins Servers&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;trigger-pipeline&lt;/code&gt; can automatically discover Jenkins servers created via the &lt;a href=&#34;https://jenkinsci.github.io/kubernetes-operator/&#34;&gt;Jenkins Operator&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In addition you can register any Jenkins servers you wish to the Jenkins Server Registry via the &lt;code&gt;tp add&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;To add a new Jenkins server with a guided wizard:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jxl jenkins add 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you already know the name, URL, username and API Token then you can use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jxl jenkins add 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;removing-jenkins-servers&#34;&gt;Removing Jenkins Servers&lt;/h3&gt;
&lt;p&gt;You can remove a Jenkins server via:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jxl jenkins remove
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that this only removes it from the registry; it doesn&amp;rsquo;t affect the actual Jenkins Server.&lt;/p&gt;
&lt;h2 id=&#34;listing-the-available-jenkins-servers&#34;&gt;Listing the available Jenkins Servers&lt;/h2&gt;
&lt;p&gt;To list the servers you can use try:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jxl jenkins list
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Importing Projects</title>
      <link>/docs/labs/jenkins/importing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/labs/jenkins/importing/</guid>
      <description>
        
        
        &lt;p&gt;Once you have &lt;a href=&#34;/docs/labs/jenkins/getting-started/#adding-jenkins-servers&#34;&gt;added one or more Jenkins Servers to the registry&lt;/a&gt; you can import a &lt;code&gt;Jenksinfile&lt;/code&gt; based project.&lt;/p&gt;
&lt;h2 id=&#34;import-the-code&#34;&gt;Import the code&lt;/h2&gt;
&lt;p&gt;First you need to import the code via one of these approaches:&lt;/p&gt;
&lt;h3 id=&#34;from-inside-the-source-code&#34;&gt;From inside the source code&lt;/h3&gt;
&lt;p&gt;If you are inside a git clone of the project you have with a &lt;code&gt;Jenkinsfile&lt;/code&gt;  then run the import wizard:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jxl project import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;import-via-a-git-url&#34;&gt;Import via a git URL&lt;/h3&gt;
&lt;p&gt;If you don&amp;rsquo;t have a local git clone then use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jxl project import --git-url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://github.com/myorg/myrepo.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;choose-the-remote-jenkins-server&#34;&gt;Choose the remote Jenkins server&lt;/h2&gt;
&lt;p&gt;Next the wizard will prompt you to pick which Jenkins server you wish to use (if you have more than one).&lt;/p&gt;
&lt;p&gt;In addition you get to pick between:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;importing the project directly into the Jenkins server as a Jenkins &lt;em&gt;multi branch project&lt;/em&gt; where Jenkins performs the webhook handling (the default)&lt;/li&gt;
&lt;li&gt;using &lt;code&gt;lighthouse&lt;/code&gt;  for ChatOps and webhook handling but when a pipeline is triggered we then trigger the pipeline directly into the remote Jenkins server&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
