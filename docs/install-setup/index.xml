<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Install and setup</title>
    <link>https://jenkins-x.io/docs/install-setup/</link>
    <description>Recent content in Install and setup on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/docs/install-setup/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Install Jenkins X</title>
      <link>https://jenkins-x.io/docs/install-setup/installing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/installing/</guid>
      <description>
        
        
        &lt;p&gt;Setting up Jenkins X consist of three steps.
First you need to create and prepare a Kubernetes cluster for the installation of Jenkins X.
Next you need to install the &lt;code&gt;jx&lt;/code&gt; command line interface.
Finally, use the &lt;code&gt;jx&lt;/code&gt; CLI to run &lt;code&gt;jx boot&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Upgrading Jenkins X</title>
      <link>https://jenkins-x.io/docs/install-setup/upgrade-jx/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/upgrade-jx/</guid>
      <description>
        
        
        &lt;p&gt;Keeping your Jenkins X environment updated can be done by command line
using the &lt;code&gt;jx upgrade&lt;/code&gt; command. Here are the most common resources that
can be upgraded. A comprehensive list of upgradeable resources are
available at &lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade/&#34;&gt;the Jenkins X documentation site for the
command.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;upgrading-the-cli-binary&#34;&gt;Upgrading the CLI binary&lt;/h2&gt;
&lt;p&gt;Upgrade your Jenkins X command-line by opening a terminal and running
&lt;code&gt;jx&lt;/code&gt; to upgrade the binary :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without options, the command upgrades to the latest version of the &lt;code&gt;jx&lt;/code&gt;
binary released. If you want to install a certain version of the Jenkins
X command-line binaries, you can add an option specifying the particular
version of &lt;code&gt;jx&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade cli -v 2.0.46
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;upgrading-the-platform&#34;&gt;Upgrading the platform&lt;/h2&gt;
&lt;p&gt;Upgrade your Jenkins X platform and any associated packages by using
&lt;code&gt;jx&lt;/code&gt; to upgrade the resource:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade platform
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;platform&lt;/code&gt; specified in the command is Jenkins, the Helm package
manager and its associated ChartMuseum repository service, Nexus
artifact repository, and Monocular for browsing and searching chart
apps. Any ChartMuseum server associated with the cluster (such as the
&lt;a href=&#34;http://chartmuseum.jenkins-x.io&#34;&gt;one hosted by the Jenkins X project&lt;/a&gt;)
is also referenced by the platform.&lt;/p&gt;
&lt;h2 id=&#34;upgrading-apps&#34;&gt;Upgrading apps&lt;/h2&gt;
&lt;p&gt;You can upgrade any Jenkins X apps installed during the Jenkins X
cluster creation process by using &lt;code&gt;jx&lt;/code&gt; to upgrade the resource:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade apps
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;apps&lt;/code&gt; specified includes &lt;em&gt;all&lt;/em&gt; installed apps in your kubernetes
cluster if upgrades are available. If you want to upgrade only specific
apps, you can use the &lt;code&gt;jx upgrade app&lt;/code&gt; command and the specified app:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jx upgrade app cb-app-slack
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Securing Jenkins X</title>
      <link>https://jenkins-x.io/docs/install-setup/security-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/security-features/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X has a few useful addons that can aid with ensuring the ongoing security of your deployed applications. There are static and container security, as well as dynamic security addons available.&lt;/p&gt;
&lt;h3 id=&#34;static-security&#34;&gt;Static security&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/anchore/anchore-engine&#34;&gt;Anchore Engine&lt;/a&gt; is used to provide image security, by examining contents of containers either in pull request/review state, or on running containers.&lt;/p&gt;
&lt;p&gt;This was introduced &lt;a href=&#34;https://jenkins.io/blog/2018/05/08/jenkins-x-anchore/&#34;&gt;in this blog post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To enable this run the following command and let it prepare the services:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create addon anchore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will launch the require engine and services, and make it available to run on any of your teams environments, and on any running preview applications.&lt;/p&gt;
&lt;p&gt;To try it out, you can use the following command to report on any problems found:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx get cve --environment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;staging
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is a video &lt;a href=&#34;https://youtu.be/rB8Sw0FqCQk&#34;&gt;showing it in action&lt;/a&gt;. To remove this addon:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx delete addon anchore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;dynamic-security&#34;&gt;Dynamic security&lt;/h3&gt;
&lt;p&gt;The Open Web Application Security Project publishes a tool called ZAP: the &lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project&#34;&gt;Zed Attack Proxy&lt;/a&gt;. This provides various tools including a baseline command that can be run against an application endpoint looking for a base set of problems.&lt;/p&gt;
&lt;p&gt;In Jenkins X this can be run against a Preview Application (that each application gets) by creating a post-preview hook:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create addon owasp-zap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any pull requests will then have their preview application run through the ZAP baseline scan, and should any failures be detected it will fail the CI pipeline automatically. The pipelines do not be changed to run this test, and they will apply to all pull requests for the team.&lt;/p&gt;
&lt;p&gt;To remove the ZAP test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx delete post preview job --name owasp-zap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The post preview hook can also be configured with a command like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create post preview job --name owasp --image owasp/zap2docker-weekly:latest -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zap-baseline.py&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-I&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-t&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\$(JX_PREVIEW_URL)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can have multiple hooks configured, so if you had specific containers that had probes/tests you would like to run against every preview app (ie every pull request) you could add it this way.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;Preview Environments&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Configuring SCMs</title>
      <link>https://jenkins-x.io/docs/install-setup/configure-scm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/configure-scm/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X works seamlessly with Source Code Management (SCM) systems through &lt;em&gt;webhooks&lt;/em&gt;, which allows repository events such as a pull request (PR) to trigger the Jenkins X Pipeline execution.&lt;/p&gt;
&lt;p&gt;The default webhook handler for Jenkins X is  &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;, which manages webhooks similarly to Prow, but is  designed to support a variety of Git providers.&lt;/p&gt;
&lt;h2 id=&#34;configuring-jenkins-x-for-your-scm&#34;&gt;Configuring Jenkins X for your SCM&lt;/h2&gt;
&lt;p&gt;Jenkins X has support for github.com for source code management by default.
To enable support for other providers to work with Jenkins X, configure the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file according to your preferred SCM provider.&lt;/p&gt;
&lt;h3 id=&#34;github-enterprise&#34;&gt;GitHub Enterprise&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/enterprise&#34;&gt;GitHub Enterprise&lt;/a&gt; supports the same features as the github.com service but scaled for on-premises deployment on local networks.&lt;/p&gt;
&lt;p&gt;To configure support for GitHub Enterprise webhook events in Jenkins X, add &lt;code&gt;webhook: lighthouse&lt;/code&gt; in the &lt;code&gt;cluster&lt;/code&gt; section of your &lt;code&gt;jenkins-x.yml&lt;/code&gt; file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cluster:
  provider: gke
  zone: europe-west1-c
  environmentGitOwner: myowner
  gitKind: github
  gitName: ghe
  gitServer: https://my-github.com
webhook: lighthouse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, the &lt;code&gt;cluster&lt;/code&gt; uses Google Kubernetes Engine (GKE) as the provider type and a server &lt;code&gt;zone&lt;/code&gt; in western Europe. &lt;code&gt;gitName&lt;/code&gt; is configured as GitHub Enterprise (&lt;code&gt;ghe&lt;/code&gt;).&lt;/p&gt;
&lt;h3 id=&#34;gitlab&#34;&gt;GitLab&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/stages-devops-lifecycle/source-code-management/&#34;&gt;GitLab&lt;/a&gt; features a popular SCM that supports version control, code reviews, and Git-based code branching, changes and merging.&lt;/p&gt;
&lt;p&gt;To configure support for GitLab webhook events in Jenkins X, add &lt;code&gt;webhook: lighthouse&lt;/code&gt; in the &lt;code&gt;cluster&lt;/code&gt; section of your &lt;code&gt;jenkins-x.yml&lt;/code&gt; file. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cluster:
  provider: gke
  environmentGitOwner: myowner
  gitKind: gitlab
  gitName: gitlab
  gitServer: https://my-gitlab-server.com
webhook: lighthouse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, the &lt;code&gt;cluster&lt;/code&gt; uses Google Kubernetes Engine (GKE) as the provider type. &lt;code&gt;gitKind&lt;/code&gt; and &lt;code&gt;gitName&lt;/code&gt; is configured as &lt;code&gt;gitlab&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
