<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Create cluster</title>
    <link>https://jenkins-x.io/docs/install-setup/installing/create-cluster/</link>
    <description>Recent content in Create cluster on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/docs/install-setup/installing/create-cluster/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Create GKE cluster</title>
      <link>https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

The GKE Terraform module for Jenkins X is published in the &lt;a href=&#34;https://registry.terraform.io/modules/jenkins-x/jx/google&#34;&gt;Terraform Registry&lt;/a&gt;.
The source is in the &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx&#34;&gt;terraform-google-jx&lt;/a&gt; repository on GitHub.
&lt;/div&gt;

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To use the GKE Terraform module for Jenkins X, you need a Google Cloud project.
Instructions on how to setup such a project can be found in the  &lt;a href=&#34;https://cloud.google.com/deployment-manager/docs/step-by-step-guide/installation-and-setup&#34;&gt;Google Cloud Installation and Setup&lt;/a&gt; guide.
You need your Google Cloud project id as an input variable for using this module.&lt;/p&gt;
&lt;p&gt;You also need to install the Cloud SDK, in particular &lt;code&gt;gcloud&lt;/code&gt;.
You find instructions on how to install and authenticate in the &lt;a href=&#34;https://cloud.google.com/deployment-manager/docs/step-by-step-guide/installation-and-setup&#34;&gt;Google Cloud Installation and Setup&lt;/a&gt; guide as well.&lt;/p&gt;
&lt;p&gt;Once you have &lt;code&gt;gcloud&lt;/code&gt; installed, you need to create &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login&#34;&gt;Application Default Credentials&lt;/a&gt; by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, you can export the environment variable &lt;em&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/em&gt; referencing the path to a Google Cloud &lt;a href=&#34;https://cloud.google.com/iam/docs/creating-managing-service-account-keys&#34;&gt;service account key file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Last but not least, ensure you have the following binaries installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcloud&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; ~&amp;gt; 1.14.0
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; comes bundled with the Cloud SDK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform&lt;/code&gt; ~&amp;gt; 0.12.0
&lt;ul&gt;
&lt;li&gt;Terraform installation instruction can be found &lt;a href=&#34;https://learn.hashicorp.com/terraform/getting-started/install&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cluster-provisioning&#34;&gt;Cluster provisioning&lt;/h2&gt;
&lt;p&gt;A default Jenkins X ready cluster can be provisioned by creating a file &lt;em&gt;main.tf&lt;/em&gt; in an empty directory with the following content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module &amp;quot;jx&amp;quot; {
  source  = &amp;quot;jenkins-x/jx/google&amp;quot;

  gcp_project = &amp;quot;&amp;lt;my-gcp-project-id&amp;gt;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can then apply this Terraform configuration via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;terraform init
terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates a cluster within the specified Google Cloud project with all possible configuration options defaulted.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
This example is for getting up and running quickly.
It is not intended for a production cluster.
Refer to &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/#production-cluster-considerations&#34;&gt;Production cluster considerations&lt;/a&gt; for things to consider when creating a production cluster.
&lt;/div&gt;

&lt;p&gt;On completion of &lt;code&gt;terraform apply&lt;/code&gt; there will be a &lt;em&gt;jx-requirements.yml&lt;/em&gt; in the working directory which can be used as input to &lt;code&gt;jx boot&lt;/code&gt;.
Refer to &lt;a href=&#34;#running-jx-boot&#34;&gt;Running &lt;code&gt;jx boot&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;In the default configuration, no custom domain is used.
DNS resolution occurs via &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt;.
For more information on how to configure and use a custom domain, refer to &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/#using-a-custom-domain&#34;&gt;Using a custom domain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you just want to experiment with Jenkins X, you can set &lt;code&gt;force_destroy&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.
This allows you to remove all generated resources when running &lt;code&gt;terraform destroy&lt;/code&gt;, including any generated buckets including their content.&lt;/p&gt;
&lt;p&gt;The following two paragraphs provide the full list of configuration and output variables of this Terraform module.&lt;/p&gt;
&lt;h3 id=&#34;inputs&#34;&gt;Inputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bucket_location&lt;/td&gt;
&lt;td&gt;Bucket location for storage&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;US&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_location&lt;/td&gt;
&lt;td&gt;The location (region or zone) in which the cluster master will be created. If you specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the region&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;us-central1-a&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;Name of the Kubernetes cluster to create&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dev_env_approvers&lt;/td&gt;
&lt;td&gt;List of git users allowed to approve pull request for dev enviornment repository&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_backup&lt;/td&gt;
&lt;td&gt;Whether or not Velero backups should be enabled&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;force_destroy&lt;/td&gt;
&lt;td&gt;Flag to determine whether storage buckets get forcefully destroyed&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcp_project&lt;/td&gt;
&lt;td&gt;The name of the GCP project to use&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;n/a&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git_owner_requirement_repos&lt;/td&gt;
&lt;td&gt;The git id of the owner for the requirement repositories&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jenkins_x_namespace&lt;/td&gt;
&lt;td&gt;Kubernetes namespace to install Jenkins X in&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;jx&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lets_encrypt_production&lt;/td&gt;
&lt;td&gt;Flag to determine wether or not to use the Let&amp;rsquo;s Encrypt production server.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max_node_count&lt;/td&gt;
&lt;td&gt;Maximum number of cluster nodes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min_node_count&lt;/td&gt;
&lt;td&gt;Minimum number of cluster nodes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node_disk_size&lt;/td&gt;
&lt;td&gt;Node disk size in GB&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;100&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node_machine_type&lt;/td&gt;
&lt;td&gt;Node type for the Kubernetes cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;n1-standard-2&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent_domain&lt;/td&gt;
&lt;td&gt;The parent domain to be allocated to the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;release_channel&lt;/td&gt;
&lt;td&gt;GKE &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/concepts/release-channels&#34;&gt;Release Channel&lt;/a&gt; to subscribe to.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;UNSPECIFIED&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;resource_labels&lt;/td&gt;
&lt;td&gt;Set of labels to be applied to the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;map&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tls_email&lt;/td&gt;
&lt;td&gt;Email used by Let&amp;rsquo;s Encrypt. Required for TLS when parent_domain is specified&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_url&lt;/td&gt;
&lt;td&gt;URL to an external Vault instance in case Jenkins X shall not create its own system Vault&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;velero_namespace&lt;/td&gt;
&lt;td&gt;Kubernetes namespace for Velero&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;velero&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;velero_schedule&lt;/td&gt;
&lt;td&gt;The Velero backup schedule in cron notation to be set in the Velero Schedule CRD (see &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/systems/velero-backups/templates/default-backup.yaml&#34;&gt;default-backup.yaml&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;0 * * * *&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;velero_ttl&lt;/td&gt;
&lt;td&gt;The the lifetime of a velero backup to be set in the Velero Schedule CRD (see &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/systems/velero-backups/templates/default-backup&#34;&gt;default-backup.yaml&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;720h0m0s&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version_stream_ref&lt;/td&gt;
&lt;td&gt;The git ref for version stream to use when booting Jenkins X. See &lt;a href=&#34;https://jenkins-x.io/docs/concepts/version-stream/&#34;&gt;https://jenkins-x.io/docs/concepts/version-stream/&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;master&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version_stream_url&lt;/td&gt;
&lt;td&gt;The URL for the version stream to use when booting Jenkins X. See &lt;a href=&#34;https://jenkins-x.io/docs/concepts/version-stream/&#34;&gt;https://jenkins-x.io/docs/concepts/version-stream/&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;https://github.com/jenkins-x/jenkins-x-versions.git&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;webhook&lt;/td&gt;
&lt;td&gt;Jenkins X webhook handler for git provider&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;lighthouse&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zone&lt;/td&gt;
&lt;td&gt;Zone in which to create the cluster (deprecated, use cluster_location instead)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;outputs&#34;&gt;Outputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;backup_bucket_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for backup storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_location&lt;/td&gt;
&lt;td&gt;The location of the created Kubernetes cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;The name of the created Kubernetes cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcp_project&lt;/td&gt;
&lt;td&gt;The GCP project in which the resources got created&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for log storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;report_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for report storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;repository_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for artifact storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_bucket_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for secret storage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;using-a-custom-domain&#34;&gt;Using a custom domain&lt;/h2&gt;
&lt;p&gt;If you want to use a custom domain with your Jenkins X installation, you need to provide values for the &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/#inputs&#34;&gt;variables&lt;/a&gt; &lt;em&gt;parent_domain&lt;/em&gt; and &lt;em&gt;tls_email&lt;/em&gt;.
&lt;em&gt;parent_domain&lt;/em&gt; is the fully qualified domain name you want to use and &lt;em&gt;tls_email&lt;/em&gt; is the email address you want to use for issuing Let&amp;rsquo;s Encrypt TLS certificates.&lt;/p&gt;
&lt;p&gt;Before you apply the Terraform configuration, you also need to create a &lt;a href=&#34;https://cloud.google.com/dns/zones&#34;&gt;Cloud DNS managed zone&lt;/a&gt;, with the DNS name in the managed zone matching your custom domain name, for example in the case of &lt;em&gt;example.jenkins-x.rocks&lt;/em&gt; as domain:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/getting-started/create_managed_zone.png&#34; alt=&#34;Creating a Managed Zone&#34;&gt;&lt;/p&gt;
&lt;p&gt;When creating the managed zone, a set of DNS servers get created which you need to specify in the DNS settings of your DNS registrar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/getting-started/managed_zone_details.png&#34; alt=&#34;DNS settings of a Managed Zone&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is essential that before you run &lt;code&gt;jx boot&lt;/code&gt;, your DNS servers settings are propagated, and your domain resolves.
You can use &lt;a href=&#34;https://dnschecker.org/&#34;&gt;DNS checker&lt;/a&gt; to check whether your domain settings have propagated.&lt;/p&gt;
&lt;p&gt;When a custom domain is provided, Jenkins X uses &lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; together with &lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt; to create A record entries in your managed zone for the various exposed applications.&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;parent_domain&lt;/em&gt; id not set, your cluster will use &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt; in order to create publicly resolvable URLs of the form ht&lt;span&gt;tp://&amp;lt;app-name&amp;gt;-&amp;lt;environment-name&amp;gt;.&amp;lt;cluster-ip&amp;gt;.nip.io.&lt;/p&gt;
&lt;h2 id=&#34;production-cluster-considerations&#34;&gt;Production cluster considerations&lt;/h2&gt;
&lt;p&gt;The configuration as seen in &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/#cluster-provisioning&#34;&gt;Cluster provisioning&lt;/a&gt; is not suited for creating and maintaining a production Jenkins X cluster.
The following is a list of considerations for a production usecase.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Specify the version attribute of the module, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module &amp;quot;jx&amp;quot; {
  source  = &amp;quot;jenkins-x/jx/google&amp;quot;
  version = &amp;quot;1.2.4&amp;quot;
  # insert your configuration
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Specifying the version ensures that you are using a fixed version and that version upgrades cannot occur unintented.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep the Terraform configuration under version control,  by creating a dedicated repository for your cluster configuration or by adding it to an already existing infrastructure repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup a Terraform backend to securely store and share the state of your cluster. For more information refer to &lt;a href=&#34;#configuring-a-terraform-backend&#34;&gt;Configuring a Terraform backend&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuring-a-terraform-backend&#34;&gt;Configuring a Terraform backend&lt;/h2&gt;
&lt;p&gt;A &amp;ldquo;&lt;a href=&#34;https://www.terraform.io/docs/backends/index.html&#34;&gt;backend&lt;/a&gt;&amp;rdquo; in Terraform determines how state is loaded and how an operation such as &lt;em&gt;apply&lt;/em&gt; is executed.
By default, Terraform uses the &lt;em&gt;local&lt;/em&gt; backend which keeps the state of the created resources on the local file system.
This is problematic since sensitive information will be stored on disk and it is not possible to share state across a team.
When working with Google Cloud a good choice for your Terraform backend is the &lt;a href=&#34;https://www.terraform.io/docs/backends/types/gcs.html&#34;&gt;&lt;em&gt;gcs&lt;/em&gt; backend&lt;/a&gt;  which stores the Terraform state in a Google Cloud Storage bucket.&lt;/p&gt;
&lt;p&gt;To use the gcs backend you will need to create the bucket upfront.
You can use &lt;code&gt;gsutil&lt;/code&gt; to create the bucket:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gsutil mb gs://&amp;lt;my-bucket-name&amp;gt;/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is also recommended to enable versioning on the bucket as an additional safety net in case of state corruption.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gsutil versioning set on gs://&amp;lt;my-bucket-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can verify whether a bucket has versioning enabled via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;gsutil versioning get gs://&amp;lt;my-bucket-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;running-jx-boot&#34;&gt;Running &lt;code&gt;jx boot&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;An output of applying the Terraform module is a &lt;em&gt;jx-requirements.yml&lt;/em&gt; file in the current directory.
This file can be used as input to &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;Jenkins X Boot&lt;/a&gt; which is responsible for installing all the required Jenkins X components into the cluster.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
The generated &lt;em&gt;jx-requirements.yml&lt;/em&gt; is only used for the first run of &lt;code&gt;jx boot&lt;/code&gt;.
During this first run a git repository containing the source code for Jenkins X Boot is created.
This repository contains the &lt;em&gt;jx-requirements.yml&lt;/em&gt; used by successive runs of &lt;code&gt;jx boot&lt;/code&gt;.
&lt;/div&gt;

&lt;p&gt;Change into  an empty directory and execute:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx boot --requirements &amp;lt;path-to-jx-requirements.yml&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You are prompted for any further required configuration.
The number of prompts depends on how much you have &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/create-cluster/gke/#inputs&#34;&gt;pre-configured&lt;/a&gt; via your Terraform variables.&lt;/p&gt;
&lt;p&gt;More information about the boot process can be found in the &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot&#34;&gt;Jenkins X Boot&lt;/a&gt; configuration section.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Create EKS cluster</title>
      <link>https://jenkins-x.io/docs/install-setup/installing/create-cluster/eks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/installing/create-cluster/eks/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

The EKS Terraform module for Jenkins X is published in the &lt;a href=&#34;https://registry.terraform.io/modules/jenkins-x/eks-jx/aws&#34;&gt;Terraform Registry&lt;/a&gt;.
The source is in the &lt;a href=&#34;https://github.com/jenkins-x/terraform-aws-eks-jx&#34;&gt;terraform-aws-eks-jx&lt;/a&gt; repository on GitHub.
&lt;/div&gt;

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;The EKS Terraform module for Jenkins X allows you to create an &lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;EKS&lt;/a&gt; cluster for installation of Jenkins X.
You need the following binaries locally installed and configured on your &lt;em&gt;PATH&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform&lt;/code&gt; (=&amp;gt; 0.12.17)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; (&amp;gt;=1.10)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aws-iam-authenticator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wget&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cluster-provisioning&#34;&gt;Cluster provisioning&lt;/h2&gt;
&lt;p&gt;A default Jenkins X ready cluster can be provisioned by creating a &lt;em&gt;main.tf&lt;/em&gt; file in an empty directory with the following content:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module &amp;quot;eks-jx&amp;quot; {
  source  = &amp;quot;jenkins-x/eks-jx/aws&amp;quot;
}

output &amp;quot;vault_user_id&amp;quot; {
  value       = module.eks-jx.vault_user_id
  description = &amp;quot;The Vault IAM user id&amp;quot;
}

output &amp;quot;vault_user_secret&amp;quot; {
  value       = module.eks-jx.vault_user_secret
  description = &amp;quot;The Vault IAM user secret&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Due to the Vault issue &lt;a href=&#34;https://github.com/hashicorp/vault/issues/7450&#34;&gt;7450&lt;/a&gt;, the Terraform module needs to create a new IAM user for installing Vault.
It also creates an IAM access key whose id and secret are defined in the output above.
You need the id and secret for running &lt;a href=&#34;#running-jx-boot&#34;&gt;&lt;code&gt;jx boot&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you do not want Terraform to create a new IAM user, or you do not have permissions to create one, you need to provide the name of an existing IAM user.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module &amp;quot;eks-jx&amp;quot; {
  source  = &amp;quot;jenkins-x/eks-jx/aws&amp;quot;

  vault_user=&amp;quot;&amp;lt;your_vault_iam_username&amp;gt;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The IAM user does not need any permissions attached to it.
For more information, refer to &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/clouds/amazon/#configuring-vault-for-eks&#34;&gt;Configuring Vault for EKS&lt;/a&gt; in the Jenkins X documentation.&lt;/p&gt;
&lt;p&gt;Once you have your initial configuration, you can apply it by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;terraform init
terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates an EKS cluster with all possible configuration options defaulted.&lt;/p&gt;
&lt;p&gt;You then need to export the environment variables &lt;em&gt;VAULT_AWS_ACCESS_KEY_ID&lt;/em&gt; and &lt;em&gt;VAULT_AWS_SECRET_ACCESS_KEY&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export VAULT_AWS_ACCESS_KEY_ID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;terraform output vault_user_id&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
export VAULT_AWS_SECRET_ACCESS_KEY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;terraform output vault_user_secret&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you specified &lt;em&gt;vault_user&lt;/em&gt; you need to provide the access key id and secret for the specified user.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
This example is for getting up and running quickly.
It is not intended for a production cluster.
Refer to &lt;a href=&#34;#production-cluster-considerations&#34;&gt;Production cluster considerations&lt;/a&gt; for things to consider when creating a production cluster.
&lt;/div&gt;

&lt;p&gt;The following sections provide a full list of configuration in- and output variables.&lt;/p&gt;
&lt;h3 id=&#34;inputs&#34;&gt;Inputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apex_domain&lt;/td&gt;
&lt;td&gt;The main domain to either use directly or to configure a subdomain from&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;Variable to provide your desired name for the cluster. The script will create a random name if this is empty&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_version&lt;/td&gt;
&lt;td&gt;Kubernetes version to use for the EKS cluster.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;1.15&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;create_and_configure_subdomain&lt;/td&gt;
&lt;td&gt;Flag to create an NS record set for the subdomain in the apex domain&amp;rsquo;s Hosted Zone&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;desired_node_count&lt;/td&gt;
&lt;td&gt;The number of worker nodes to use for the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_external_dns&lt;/td&gt;
&lt;td&gt;Flag to enable or disable External DNS in the final &lt;code&gt;jx-requirements.yml&lt;/code&gt; file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_logs_storage&lt;/td&gt;
&lt;td&gt;Flag to enable or disable long term storage for logs&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_reports_storage&lt;/td&gt;
&lt;td&gt;Flag to enable or disable long term storage for reports&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_repository_storage&lt;/td&gt;
&lt;td&gt;Flag to enable or disable the repository bucket storage&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_spot_instances&lt;/td&gt;
&lt;td&gt;Flag to enable Spot Instances&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable_tls&lt;/td&gt;
&lt;td&gt;Flag to enable TLS in the final &lt;code&gt;jx-requirements.yml&lt;/code&gt; file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;force_destroy&lt;/td&gt;
&lt;td&gt;Flag to determine whether storage buckets get forcefully destroyed. If set to false, empty the bucket first in the aws s3 console, else terraform destroy will fail with BucketNotEmpty error&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max_node_count&lt;/td&gt;
&lt;td&gt;The maximum number of worker nodes to use for the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min_node_count&lt;/td&gt;
&lt;td&gt;The minimum number of worker nodes to use for the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node_machine_type&lt;/td&gt;
&lt;td&gt;The instance type to use for the cluster&amp;rsquo;s worker nodes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;m5.large&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;production_letsencrypt&lt;/td&gt;
&lt;td&gt;Flag to use the production environment of letsencrypt in the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;region&lt;/td&gt;
&lt;td&gt;The region to create the resources into&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;us-east-1&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;spot_price&lt;/td&gt;
&lt;td&gt;The ceiling price for spot instances&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;0.1&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;subdomain&lt;/td&gt;
&lt;td&gt;The subdomain to be added to the apex domain. If subdomain is set, it will be appended to the apex domain in  &lt;code&gt;jx-requirements-eks.yml&lt;/code&gt; file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tls_email&lt;/td&gt;
&lt;td&gt;The email to register the LetsEncrypt certificate with. Added to the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_user&lt;/td&gt;
&lt;td&gt;The AWS IAM Username whose credentials will be used to authenticate the Vault pods against AWS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vpc_cidr_block&lt;/td&gt;
&lt;td&gt;The vpc CIDR block&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;10.0.0.0/16&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vpc_name&lt;/td&gt;
&lt;td&gt;The name of the VPC to be created for the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;tf-vpc-eks&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vpc_subnets&lt;/td&gt;
&lt;td&gt;The subnet CIDR block to use in the created VPC&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;pre&gt;[&lt;br&gt;  &amp;ldquo;10.0.1.0/24&amp;rdquo;,&lt;br&gt;  &amp;ldquo;10.0.2.0/24&amp;rdquo;,&lt;br&gt;  &amp;ldquo;10.0.3.0/24&amp;quot;&lt;br&gt;]&lt;/pre&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;outputs&#34;&gt;Outputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cert_manager_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the Cert Manager pod will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;The name of the created cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cm_cainjector_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the CM CA Injector pod will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;controllerbuild_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the ControllerBuild pod will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;external_dns_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the External DNS pod will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;jxui_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the Jenkins X UI pod will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lts_logs_bucket&lt;/td&gt;
&lt;td&gt;The bucket where logs from builds will be stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lts_reports_bucket&lt;/td&gt;
&lt;td&gt;The bucket where test reports will be stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lts_repository_bucket&lt;/td&gt;
&lt;td&gt;The bucket that will serve as artifacts repository&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tekton_bot_iam_role&lt;/td&gt;
&lt;td&gt;The IAM Role that the build pods will assume to authenticate&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_dynamodb_table&lt;/td&gt;
&lt;td&gt;The Vault DynamoDB table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_kms_unseal&lt;/td&gt;
&lt;td&gt;The Vault KMS Key for encryption&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_unseal_bucket&lt;/td&gt;
&lt;td&gt;The Vault storage bucket&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_user_id&lt;/td&gt;
&lt;td&gt;The Vault IAM user id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_user_secret&lt;/td&gt;
&lt;td&gt;The Vault IAM user secret&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;long-term-storage&#34;&gt;Long Term Storage&lt;/h2&gt;
&lt;p&gt;You can choose to create S3 buckets for long term storage and enable them in the generated &lt;em&gt;jx-requirements.yml&lt;/em&gt; file with &lt;code&gt;enable_logs_storage&lt;/code&gt;, &lt;code&gt;enable_reports_storage&lt;/code&gt; and &lt;code&gt;enable_repository_storage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;During &lt;code&gt;terraform apply&lt;/code&gt; the enabledS3 buckets are created, and the generated &lt;code&gt;jx-requirements.yml&lt;/code&gt; will contain the following section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;storage&lt;/span&gt;:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;logs&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;enabled&lt;/span&gt;: ${enable_logs_storage}
        &lt;span style=&#34;color:#66d9ef&#34;&gt;url&lt;/span&gt;: s3://${logs_storage_bucket}
      &lt;span style=&#34;color:#66d9ef&#34;&gt;reports&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;enabled&lt;/span&gt;: ${enable_reports_storage}
        &lt;span style=&#34;color:#66d9ef&#34;&gt;url&lt;/span&gt;: s3://${reports_storage_bucket}
      &lt;span style=&#34;color:#66d9ef&#34;&gt;repository&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;enabled&lt;/span&gt;: ${enable_repository_storage}
        &lt;span style=&#34;color:#66d9ef&#34;&gt;url&lt;/span&gt;: s3://${repository_storage_bucket}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you just want to experiment with Jenkins X, you can set force_destroy to true. This allows you to remove all generated buckets when running terraform destroy.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
&lt;strong&gt;Note&lt;/strong&gt;: If you set &lt;code&gt;force_destroy&lt;/code&gt; to false, and run a &lt;code&gt;terraform destroy&lt;/code&gt;, it will fail. In that case empty the s3 buckets from the aws s3 console, and re run &lt;code&gt;terraform destroy&lt;/code&gt;.
&lt;/div&gt;

&lt;p&gt;For more information refer to the &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/storage/&#34;&gt;Storage&lt;/a&gt; section.&lt;/p&gt;
&lt;h2 id=&#34;using-spot-instances&#34;&gt;Using Spot Instances&lt;/h2&gt;
&lt;p&gt;You can save up to 90% of cost when you use Spot Instances. You just need to make sure your applications are resilient. You can set the ceiling &lt;code&gt;spot_price&lt;/code&gt; of what you want to pay then set &lt;code&gt;enable_spot_instances&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

&lt;strong&gt;Note&lt;/strong&gt;: If the price of the instance reaches this point it will be terminated.
&lt;/div&gt;

&lt;h2 id=&#34;vault&#34;&gt;Vault&lt;/h2&gt;
&lt;p&gt;Vault is used by Jenkins X for managing secrets.
Part of this module&amp;rsquo;s responsibilities is the creation of all resources required to run the &lt;a href=&#34;https://github.com/banzaicloud/bank-vaults&#34;&gt;Vault Operator&lt;/a&gt;.
These resources are An S3 Bucket, a DynamoDB Table and a KMS Key.&lt;/p&gt;
&lt;p&gt;For more information refer around Vault refer to the &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/vault/&#34;&gt;Vault&lt;/a&gt; section.&lt;/p&gt;
&lt;h2 id=&#34;externaldns&#34;&gt;ExternalDNS&lt;/h2&gt;
&lt;p&gt;You can enable &lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; with the &lt;code&gt;enable_external_dns&lt;/code&gt; variable. This modifies the generated &lt;em&gt;jx-requirements.yml&lt;/em&gt; file to enable External DNS when running &lt;code&gt;jx boot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;enable_external_dns&lt;/code&gt; is &lt;em&gt;true&lt;/em&gt;, additional configuration is required.&lt;/p&gt;
&lt;p&gt;If you want to use a domain with an already existing Route 53 Hosted Zone, you can provide it through the &lt;code&gt;apex_domain&lt;/code&gt; variable:&lt;/p&gt;
&lt;p&gt;This domain will be configured in the resulting &lt;em&gt;jx-requirements.yml&lt;/em&gt; file in the following section:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;ingress&lt;/span&gt;:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;domain&lt;/span&gt;: ${domain}
      &lt;span style=&#34;color:#66d9ef&#34;&gt;ignoreLoadBalancer&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;externalDNS&lt;/span&gt;: ${enable_external_dns}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to use a subdomain and have this module create and configure a new Hosted Zone with DNS delegation, you can provide the following variables:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subdomain&lt;/code&gt;: This subdomain is added to the apex domain and configured in the resulting &lt;em&gt;jx-requirements.yml&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;create_and_configure_subdomain&lt;/code&gt;: This flag instructs the script to create a new &lt;code&gt;Route53 Hosted Zone&lt;/code&gt; for your subdomain and configure DNS delegation with the apex domain.&lt;/p&gt;
&lt;p&gt;By providing these variables, the script creates a new &lt;code&gt;Route 53&lt;/code&gt; HostedZone that looks like &lt;code&gt;&amp;lt;subdomain&amp;gt;.&amp;lt;apex_domain&amp;gt;&lt;/code&gt;, then it delegates the resolving of DNS to the apex domain.
This is done by creating a &lt;code&gt;NS&lt;/code&gt; RecordSet in the apex domain&amp;rsquo;s Hosted Zone with the subdomain&amp;rsquo;s HostedZone nameservers.&lt;/p&gt;
&lt;p&gt;This ensures that the newly created HostedZone for the subdomain is instantly resolvable instead of having to wait for DNS propagation.&lt;/p&gt;
&lt;h2 id=&#34;cert-manager&#34;&gt;cert-manager&lt;/h2&gt;
&lt;p&gt;You can enable &lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt; to use TLS for your cluster through LetsEncrypt with the &lt;code&gt;enable_tls&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;LetsEncrypt&lt;/a&gt; has two environments, &lt;code&gt;staging&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you use staging, you will receive self-signed certificates, but you are not rate-limited, if you use the &lt;code&gt;production&lt;/code&gt; environment, you receive certificates signed by LetsEncrypt, but you can be rate limited.&lt;/p&gt;
&lt;p&gt;You can choose to use the &lt;code&gt;production&lt;/code&gt; environment with the &lt;code&gt;production_letsencrypt&lt;/code&gt; variable:&lt;/p&gt;
&lt;p&gt;You need to provide a valid email to register your domain in LetsEncrypt with &lt;code&gt;tls_email&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;running-jx-boot&#34;&gt;Running &lt;code&gt;jx boot&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;An output of applying this Terraform module is a &lt;em&gt;jx-requirements.yml&lt;/em&gt; file in the current directory.
This file can be used as input to &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;Jenkins X Boot&lt;/a&gt; which is responsible for installing all the required Jenkins X components into the cluster created by this module.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Warning&lt;/h4&gt;
&lt;strong&gt;Note&lt;/strong&gt;: The generated &lt;em&gt;jx-requirements.yml&lt;/em&gt; is only used for the first run of &lt;code&gt;jx boot&lt;/code&gt;.
During this first run a git repository containing the source code for Jenkins X Boot is created.
This repository contains the &lt;em&gt;jx-requirements.yml&lt;/em&gt; used by successive runs of &lt;code&gt;jx boot&lt;/code&gt;.
&lt;/div&gt;

&lt;p&gt;Change into  an empty directory and execute:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx boot --requirements &amp;lt;path-to-jx-requirements.yml&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;

Remember you need to export &lt;em&gt;VAULT_AWS_ACCESS_KEY_ID&lt;/em&gt; and &lt;em&gt;VAULT_AWS_SECRET_ACCESS_KEY&lt;/em&gt;.
&lt;/div&gt;

&lt;p&gt;See &lt;a href=&#34;#cluster-provisioning&#34;&gt;Cluster provisioning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You are prompted for any further required configuration.
The number of prompts depends on how much you have &lt;a href=&#34;#inputs&#34;&gt;pre-configured&lt;/a&gt; via your Terraform variables.&lt;/p&gt;
&lt;p&gt;More information about the boot process can be found in the &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot&#34;&gt;Run Boot&lt;/a&gt; section.&lt;/p&gt;
&lt;h2 id=&#34;production-cluster-considerations&#34;&gt;Production cluster considerations&lt;/h2&gt;
&lt;p&gt;The configuration, as seen in &lt;a href=&#34;#cluster-provisioning&#34;&gt;Cluster provisioning&lt;/a&gt;, is not suited for creating and maintaining a production Jenkins X cluster.
The following is a list of considerations for a production use case.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Specify the version attribute of the module, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;module &amp;quot;jx&amp;quot; {
  source  = &amp;quot;jenkins-x/eks-jx/aws&amp;quot;
  version = &amp;quot;1.0.0&amp;quot;
  # insert your configuration
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Specifying the version ensures that you are using a fixed version and that version upgrades cannot occur unintended.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keep the Terraform configuration under version control by creating a dedicated repository for your cluster configuration or by adding it to an already existing infrastructure repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup a Terraform backend to securely store and share the state of your cluster. For more information refer to &lt;a href=&#34;#configuring-a-terraform-backend&#34;&gt;Configuring a Terraform backend&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuring-a-terraform-backend&#34;&gt;Configuring a Terraform backend&lt;/h2&gt;
&lt;p&gt;A &amp;ldquo;&lt;a href=&#34;https://www.terraform.io/docs/backends/index.html&#34;&gt;backend&lt;/a&gt;&amp;rdquo; in Terraform determines how state is loaded and how an operation such as &lt;em&gt;apply&lt;/em&gt; is executed.
By default, Terraform uses the &lt;em&gt;local&lt;/em&gt; backend, which keeps the state of the created resources on the local file system.
This is problematic since sensitive information will be stored on disk and it is not possible to share state across a team.
When working with AWS a good choice for your Terraform backend is the &lt;a href=&#34;https://www.terraform.io/docs/backends/types/s3.html&#34;&gt;&lt;em&gt;s3&lt;/em&gt; backend&lt;/a&gt;  which stores the Terraform state in an AWS S3 bucket.
The &lt;a href=&#34;https://github.com/jenkins-x/terraform-aws-eks-jx/examples&#34;&gt;examples&lt;/a&gt; directory of the &lt;a href=&#34;https://github.com/jenkins-x/terraform-aws-eks-jx&#34;&gt;terraform-aws-eks-jx&lt;/a&gt; repository contains configuration examples for using the &lt;em&gt;s3&lt;/em&gt; backed.&lt;/p&gt;
&lt;p&gt;To use the &lt;em&gt;s3&lt;/em&gt; backend, you will need to create the bucket upfront.
You need the S3 bucket as well as a Dynamo table for state locks.
You can use &lt;a href=&#34;https://github.com/cloudposse/terraform-aws-tfstate-backend&#34;&gt;terraform-aws-tfstate-backend&lt;/a&gt; to create these resources.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Required cloud resources</title>
      <link>https://jenkins-x.io/docs/install-setup/installing/create-cluster/required-cloud-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/install-setup/installing/create-cluster/required-cloud-resources/</guid>
      <description>
        
        
        &lt;p&gt;No matter which Terraform module you choose, each will create a similar set of resources.
Most importantly it will create the Kubernetes cluster of course, but there are a other aspects as well.&lt;/p&gt;
&lt;h2 id=&#34;cloud-apis&#34;&gt;Cloud APIs&lt;/h2&gt;
&lt;p&gt;Terraform enables all required cloud provider APIs.&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;Logs, test reports and build artifacts, but also backups and secrets are stored in cloud storage (buckets).
One task of the Terraform module is to create these buckets.
Some buckets are optional and you can configure whether they get created or not.
Refer to the documentation for your cloud provider specific Terraform module for more information.&lt;/p&gt;
&lt;p&gt;If all storage options are enabled, the following buckets are created:&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;
&lt;/dt&gt;
 &lt;dd&gt;&lt;/dd&gt;
 &lt;dt&gt; Log bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for storing build logs.
Refer to &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/storage#configuring-storage&#34;&gt;Configuring Storage&lt;/a&gt; for more information.&lt;/dd&gt;
 &lt;dt&gt; Report bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for storing test and coverage reports.
Refer to &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/storage#configuring-storage&#34;&gt;Configuring Storage&lt;/a&gt; for more information.&lt;/dd&gt;
 &lt;dt&gt; Repository bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket used for storing artifacts when using &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/boot/repository/#bucketrepo&#34;&gt;Bucketrepo&lt;/a&gt;.
Bucketrepo  is a small footprint microservice that is an alternative to both Nexus and Chartmusem.&lt;/dd&gt;
 &lt;dt&gt; Velero bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for &lt;a href=&#34;https://velero.io&#34;&gt;Velero&lt;/a&gt; backups.&lt;/dd&gt;
 &lt;dt&gt; Vault bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket used by Vault for storing its data.
Jenkins X uses Vault to store secrets.
Refer to &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/boot/secrets/#vault&#34;&gt;Vault&lt;/a&gt; for more information.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;permission-management&#34;&gt;Permission management&lt;/h2&gt;
&lt;p&gt;Several Jenkins X services need to interact with the underlying cloud infrastructure.
For example, the Build Controller needs to be able to store log files into the log storage bucket.
Another example is &lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; creating dynamically new DNS entries for services.
In this case ExternalDNS service needs access to the DNS APIs of the underyling cloud provider.&lt;/p&gt;
&lt;p&gt;To ensure that each service gets only the permissions it needs to fulfill its resposibilty, cloud providers allow to bind Kuberenetes service accounts to cloud provider specific service announts or roles.
The mechanism to achieve this varies between cloud providers.
For Google Cloud it is called &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity&#34;&gt;Workload Identity&lt;/a&gt; and for AWS &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html&#34;&gt;IAM Roles for Service Accounts&lt;/a&gt;.
It is the resposibilty of the corresponding Terraform module to configure these permissions.&lt;/p&gt;
&lt;p&gt;At the moment Kubernetes service accounts for the following areas are created:&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;
&lt;/dt&gt;
 &lt;dd&gt;&lt;/dd&gt;
 &lt;dt&gt; Tekton&lt;/dt&gt;
 &lt;dd&gt;Service account used by Tekton for the actual pipline execution.
The Tekton service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;tekton-bot&lt;/em&gt;.&lt;/dd&gt;
 &lt;dt&gt; Build Controller&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Build Controller service which is responsible to track the overall progress of pipeline executions.
The Build Controller service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;jenkins-x-controllerbuild&lt;/em&gt;.&lt;/dd&gt;
 &lt;dt&gt; DNS&lt;/dt&gt;
 &lt;dd&gt;There are three Kuberenetes services accounts created related to DNS.
One for ExternalDNS with the name &lt;em&gt;exdns-external-dns&lt;/em&gt; and two for &lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt;, namely &lt;em&gt;cm-cert-manager&lt;/em&gt; and &lt;em&gt;cm-cainjector&lt;/em&gt;.
Each of these services need access to the DNS API of the cloud provider.&lt;/dd&gt;
 &lt;dt&gt; Vault&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Vault operator.
The Vault service account needs permissions to read and write to cloud storage and access to kryptographic key managment.
The name of the service account is _&amp;lt;cluster-name&amp;gt;-vt.&lt;/dd&gt;
 &lt;dt&gt; Velero&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Velero backup service.
The Velero service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;velero-server&lt;/em&gt;&lt;/dd&gt;
 &lt;dt&gt; Kaniko&lt;/dt&gt;
 &lt;dd&gt;Service account used by &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;Kaniko&lt;/a&gt; which is a safer option to build Docker images in Kuberenetes than the Docker daemon.
The Kaniko service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;kaniko-sa&lt;/em&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;kryptograpphic-key-management&#34;&gt;Kryptograpphic key management&lt;/h2&gt;
&lt;p&gt;For using the Vault Operator, the Terraform module needs to create a krypographic keyring and key to seed Vault.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
