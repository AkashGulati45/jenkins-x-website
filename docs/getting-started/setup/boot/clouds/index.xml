<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X â€“ Cloud Providers</title>
    <link>/docs/getting-started/setup/boot/clouds/</link>
    <description>Recent content in Cloud Providers on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/docs/getting-started/setup/boot/clouds/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Google Cloud</title>
      <link>/docs/getting-started/setup/boot/clouds/gcp/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/setup/boot/clouds/gcp/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;setting-up-your-cluster&#34;&gt;Setting up your cluster&lt;/h2&gt;

&lt;p&gt;To setup the kubernetes cluster we recommend &lt;code&gt;jx create cluster gke --skip-installation&lt;/code&gt; which should add the scopes required to your node pool to be able to push images to GCR.&lt;/p&gt;

&lt;p&gt;If you setup your cluster directly via the web console or &lt;code&gt;gcloud&lt;/code&gt; you may need to setup those scopes yourself. e.g. with &lt;code&gt;gcloud&lt;/code&gt; add &lt;code&gt;--scopes&lt;/code&gt; for the following scopes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/cloud-platform&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/cloud-platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/compute&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/compute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/devstorage.full_control&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/devstorage.full_control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/service.management&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/service.management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/servicecontrol&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/servicecontrol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/logging.write&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/logging.write&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.googleapis.com/auth/monitoring&#34; target=&#34;_blank&#34;&gt;https://www.googleapis.com/auth/monitoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;On GCP we default to using GCR as the container registry (using &lt;code&gt;gcr.io&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Please set your provider to &lt;code&gt;gke&lt;/code&gt; via this in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; to indicate you are using GCP:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clusterConfig:
    provider: gke
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also recommend using &lt;a href=&#34;/architecture/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; as this works out of the box with kaniko for creating container images without needing a docker daemon and works well with GCR.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Amazon (AWS)</title>
      <link>/docs/getting-started/setup/boot/clouds/aws/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/setup/boot/clouds/aws/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;setting-up-your-cluster&#34;&gt;Setting up your cluster&lt;/h2&gt;

&lt;p&gt;We recommend you setup your cluster via &lt;a href=&#34;https://eksctl.io/&#34; target=&#34;_blank&#34;&gt;eksctl&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Please set your provider to &lt;code&gt;eks&lt;/code&gt; via this in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; to indicate you are using EKS:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clusterConfig:
    provider: eks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you wish to use AWS via something like &lt;code&gt;kops&lt;/code&gt; and not use EKS then use the &lt;code&gt;aws&lt;/code&gt; provider:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clusterConfig:
    provider: aws
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you wish to setup your EKS cluster by hand and not use &lt;a href=&#34;https://eksctl.io/&#34; target=&#34;_blank&#34;&gt;eksctl&lt;/a&gt; then please specify &lt;code&gt;terraform: true&lt;/code&gt; to indicating you are setting up all of the AWS related cloud resources yourself and that you do not want &lt;code&gt;jx boot&lt;/code&gt; to try set anything up.&lt;/p&gt;

&lt;p&gt;We recommend using &lt;a href=&#34;/architecture/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; as this works out of the box with kaniko for creating container images without needing a docker daemon and works well with ECR.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: On Premise</title>
      <link>/docs/getting-started/setup/boot/clouds/on-premise/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/setup/boot/clouds/on-premise/</guid>
      <description>
        
        
        

&lt;p&gt;On premise kubernetes clusters tend to differ wildly so its hard for us to know your Jenkins X installation will totally work on any cluster given we typically rely on things like persistence, ingress, storage.&lt;/p&gt;

&lt;p&gt;Here are some recommendations to hopefully get you started. If you hit any issues please &lt;a href=&#34;/community/&#34;&gt;join our community&lt;/a&gt; we can hopefully help you.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Please set your provider to &lt;code&gt;kubernetes&lt;/code&gt; via this in your &lt;code&gt;jx-requirements.yml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clusterConfig:
    provider: kubernetes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ingress&#34;&gt;Ingress&lt;/h3&gt;

&lt;p&gt;If you don&amp;rsquo;t have a real ingress solution for your on premise cluster you can start off using the &lt;code&gt;nginx-controller&lt;/code&gt; and the IP address of your api server.&lt;/p&gt;

&lt;p&gt;You can set &lt;code&gt;ingress.domain&lt;/code&gt; to be &lt;code&gt;1.2.3.4.nip.io&lt;/code&gt; where &lt;code&gt;1.2.3.4&lt;/code&gt; is the IP address of your ingress service.&lt;/p&gt;

&lt;p&gt;By default boot will try to recreate the &lt;code&gt;ingress.domain&lt;/code&gt; by discovering the IP address on the nginx controller service - which is commonly generated dynamically on the public clouds.&lt;/p&gt;

&lt;p&gt;If you are on premise and using a hard coded IP address for ingress you may want to set this on your &lt;code&gt;jx-requirements.yml&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;clusterConfig:
    provider: kubernetes
ingress:
  domain: 1.2.3.4.nip.io
  ignoreLoadBalancer: true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;general-advice&#34;&gt;General advice&lt;/h2&gt;

&lt;p&gt;We recommend starting with the most simple possible installation and get that working, then gradually try to be more complex. e.g. start off by ignoring these features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vault&lt;/li&gt;
&lt;li&gt;DNS&lt;/li&gt;
&lt;li&gt;TLS / certificates&lt;/li&gt;
&lt;li&gt;cloud storage for artifacts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then once you have something working, incrementally try enabling each of those in turn.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
