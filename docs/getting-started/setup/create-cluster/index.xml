<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X â€“ Create cluster</title>
    <link>/docs/getting-started/setup/create-cluster/</link>
    <description>Recent content in Create cluster on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/getting-started/setup/create-cluster/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Create GKE cluster</title>
      <link>/docs/getting-started/setup/create-cluster/gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/setup/create-cluster/gke/</guid>
      <description>
        
        
        

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;
The GKE Terraform Module for Jenkins X is published in the &lt;a href=&#34;https://registry.terraform.io/modules/jenkins-x/jx/google&#34;&gt;Terraform Registry&lt;/a&gt;.
The source is in the &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx&#34;&gt;terraform-google-jx&lt;/a&gt; repository on GitHub.
&lt;/div&gt;

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;To create your GKE cluster, you need first a Google Cloud project.
Instructions on how to setup a project can be found in the Google Cloud &lt;a href=&#34;https://cloud.google.com/deployment-manager/docs/step-by-step-guide/installation-and-setup&#34;&gt;documentation&lt;/a&gt;.
You need your Google Cloud project id as input for using the Terraform Module.&lt;/p&gt;
&lt;p&gt;You also need to install the Cloud SDK, in particular &lt;code&gt;gcloud&lt;/code&gt;.
You find instructions on how to install and authenticate in the documentation mentioned above.&lt;/p&gt;
&lt;p&gt;Once you have &lt;code&gt;gcloud&lt;/code&gt; installed, you need to create &lt;a href=&#34;https://cloud.google.com/sdk/gcloud/reference/auth/application-default/login&#34;&gt;Application Default Credentials&lt;/a&gt; by running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, ensure you have the following binaries installed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcloud&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; ~&amp;gt; 1.14.0
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kubectl&lt;/code&gt; comes bundled with the Cloud SDK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;terraform&lt;/code&gt; ~&amp;gt; 0.12.0
&lt;ul&gt;
&lt;li&gt;Terraform installation instruction can be found &lt;a href=&#34;https://learn.hashicorp.com/terraform/getting-started/install&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cluster-creation&#34;&gt;Cluster creation&lt;/h2&gt;
&lt;p&gt;A default Jenkins X ready cluster can be provisioned by creating a file &lt;em&gt;main.tf&lt;/em&gt; with the following content in an empty directory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;module&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jx&amp;#34;&lt;/span&gt; {
&lt;span style=&#34;color:#a6e22e&#34;&gt;  source&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-x/jx/google&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;  gcp_project&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;my-gcp-project-id&amp;gt;&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can then apply this Terraform configuration via the following terminal commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;terraform init
terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This creates a cluster within the specified Google Cloud project with all possible configuration options defaulted.&lt;/p&gt;
&lt;p&gt;No custom domain is used.
Instead DNS resolution occurs via &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt;.
For more information on how to configure and use a custom domain, refer to &lt;a href=&#34;/docs/getting-started/setup/create-cluster/gke#using-a-custom-domain&#34;&gt;Using a custom domain&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you just want to evaluate Jenkins X, you can set &lt;code&gt;force_destroy&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.
This allows you to remove all generated resources when running &lt;code&gt;terraform destroy&lt;/code&gt;, including any generated buckets with their content.&lt;/p&gt;
&lt;p&gt;On completion of &lt;code&gt;terraform apply&lt;/code&gt; there will be a &lt;em&gt;jx-requirements.yml&lt;/em&gt; in the working directory.
This file can be used as input for running &lt;a href=&#34;/docs/getting-started/setup/boot&#34;&gt;&lt;code&gt;jx boot&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following sections define the various configuration variables as well as the Module&amp;rsquo;s output variables.&lt;/p&gt;
&lt;h3 id=&#34;inputs&#34;&gt;Inputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;Name of the Kubernetes cluster to create&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;jenkins-x&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dev_env_approvers&lt;/td&gt;
&lt;td&gt;List of git users allowed to approve pull request for dev enviornment repository&lt;/td&gt;
&lt;td&gt;&lt;code&gt;list(string)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;force_destroy&lt;/td&gt;
&lt;td&gt;Flag to determine whether storage buckets get forcefully destroyed&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcp_project&lt;/td&gt;
&lt;td&gt;The name of the GCP project to use&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;n/a&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git_owner_requirement_repos&lt;/td&gt;
&lt;td&gt;The git id of the owner for the requirement repositories&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;max_node_count&lt;/td&gt;
&lt;td&gt;Maximum number of cluster nodes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;min_node_count&lt;/td&gt;
&lt;td&gt;Minimum number of cluster nodes&lt;/td&gt;
&lt;td&gt;&lt;code&gt;number&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node_disk_size&lt;/td&gt;
&lt;td&gt;Node disk size in GB&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;100&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node_machine_type&lt;/td&gt;
&lt;td&gt;Node type for the Kubernetes cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;n1-standard-2&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;parent_domain&lt;/td&gt;
&lt;td&gt;The parent domain to be allocated to the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tls_email&lt;/td&gt;
&lt;td&gt;Email used by Let&amp;rsquo;s Encrypt. Required for TLS when parent_domain is specified.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;velero_schedule&lt;/td&gt;
&lt;td&gt;The Velero backup schedule in cron notation to be set in the Velero Schedule CRD (see &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/systems/velero-backups/templates/default-backup.yaml&#34;&gt;default-backup.yaml&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;0 * * * *&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;velero_ttl&lt;/td&gt;
&lt;td&gt;The the lifetime of a velero backup to be set in the Velero Schedule CRD (see &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/systems/velero-backups/templates/default-backup&#34;&gt;default-backup.yaml&lt;/a&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;720h0m0s&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version_stream_ref&lt;/td&gt;
&lt;td&gt;The git ref for version stream to use when booting Jenkins X. Refer to &lt;a href=&#34;/docs/concepts/version-stream&#34;&gt;version stream&lt;/a&gt; for more information.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;master&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version_stream_url&lt;/td&gt;
&lt;td&gt;The URL for the version stream to use when booting Jenkins X. Refer to &lt;a href=&#34;/docs/concepts/version-stream&#34;&gt;version stream&lt;/a&gt; for more information.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;https://github.com/jenkins-x/jenkins-x-versions.git&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;webhook&lt;/td&gt;
&lt;td&gt;Jenkins X webhook handler for git provider&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;prow&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zone&lt;/td&gt;
&lt;td&gt;Zone in which to create the cluster&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;us-central1-a&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;no&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;outputs&#34;&gt;Outputs&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;backup_bucket_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for backup storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cluster_name&lt;/td&gt;
&lt;td&gt;The name of the created Kubernetes cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gcp_project&lt;/td&gt;
&lt;td&gt;The GCP project in which the resources got created&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for log storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;report_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for report storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;repository_storage_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for artifact storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vault_bucket_url&lt;/td&gt;
&lt;td&gt;The URL to the bucket for secret storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zone&lt;/td&gt;
&lt;td&gt;The zone of the created Kubernetes cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;using-a-custom-domain&#34;&gt;Using a custom domain&lt;/h2&gt;
&lt;p&gt;If you want to use a custom domain with your Jenkins X installation, you need to provide values for the variables &lt;em&gt;parent_domain&lt;/em&gt; and &lt;em&gt;tls_email&lt;/em&gt;.
&lt;em&gt;parent_domain&lt;/em&gt; is the fully qualified domain name you want to use and &lt;em&gt;tls_email&lt;/em&gt; is the email you want to use for issuing Let&amp;rsquo;s Encrypt TLS certificates.&lt;/p&gt;
&lt;p&gt;Before you run the Terraform configuration, you also need to create a &lt;a href=&#34;https://cloud.google.com/dns/zones&#34;&gt;Cloud DNS managed zone&lt;/a&gt;, with the DNS name in the managed zone matching your custom domain name, for example in the case of &lt;em&gt;example.jenkins-x.rocks&lt;/em&gt; as domain:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/getting-started/create_managed_zone.png&#34; alt=&#34;Creating a Managed Zone&#34;&gt;&lt;/p&gt;
&lt;p&gt;When creating the managed zone, a set of DNS servers get created which you need to specify in the DNS settings of your DNS registrar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/getting-started/managed_zone_details.png&#34; alt=&#34;DNS settings of a Managed Zone&#34;&gt;&lt;/p&gt;
&lt;p&gt;It is essential that before you run &lt;code&gt;jx boot&lt;/code&gt;, your DNS servers settings are propagated, and your domain resolves.
You can use &lt;a href=&#34;https://dnschecker.org/&#34;&gt;DNS checker&lt;/a&gt; to check whether your domain settings have propagated.&lt;/p&gt;
&lt;p&gt;When a custom domain is provided, Jenkins X uses &lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; together with &lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt; to create A record entries in your managed zone for the various exposed applications.&lt;/p&gt;
&lt;p&gt;If &lt;em&gt;parent_domain&lt;/em&gt; is not set, your cluster will use &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt; in order to create publicly resolvable URLs of the form ht&lt;span&gt;tp://&amp;lt;app-name&amp;gt;-&amp;lt;environment-name&amp;gt;.&amp;lt;cluster-ip&amp;gt;.nip.io.&lt;/p&gt;
&lt;h2 id=&#34;running-jx-boot&#34;&gt;Running &lt;code&gt;jx boot&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Applying this Terraform module will not only create the &lt;a href=&#34;/docs/getting-started/setup/create-cluster/required-cloud-resources&#34;&gt;required cloud resources&lt;/a&gt;, but also create a &lt;em&gt;jx-requirements.yml&lt;/em&gt; file.
From within an empty directory run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; jx boot -r &amp;lt;path-to-generated-jx-requirements.yml&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More information about the boot process can be found in the &lt;a href=&#34;/docs/getting-started/setup/boot&#34;&gt;Run Boot&lt;/a&gt; section.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Required cloud resources</title>
      <link>/docs/getting-started/setup/create-cluster/required-cloud-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/getting-started/setup/create-cluster/required-cloud-resources/</guid>
      <description>
        
        
        &lt;p&gt;No matter which Terraform module you choose, each will create a similar set of resources.
Most importantly it will create the Kubernetes cluster of course, but there are a other aspects as well.&lt;/p&gt;
&lt;h2 id=&#34;cloud-apis&#34;&gt;Cloud APIs&lt;/h2&gt;
&lt;p&gt;Terraform enables all required cloud provider APIs.&lt;/p&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;Logs, test reports and build artifacts, but also backups and secrets are stored in cloud storage (buckets).
One task of the Terraform module is to create these buckets.
Some buckets are optional and you can configure whether they get created or not.
Refer to the documentation for your cloud provider specific Terraform module for more information.&lt;/p&gt;
&lt;p&gt;If all storage options are enabled, the following buckets are created:&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;
&lt;/dt&gt;
 &lt;dd&gt;&lt;/dd&gt;
 &lt;dt&gt; Log bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for storing build logs.
Refer to &lt;a href=&#34;/docs/managing-jx/common-tasks/storage#configuring-storage&#34;&gt;Configuring Storage&lt;/a&gt; for more information.&lt;/dd&gt;
 &lt;dt&gt; Report bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for storing test and coverage reports.
Refer to &lt;a href=&#34;/docs/managing-jx/common-tasks/storage#configuring-storage&#34;&gt;Configuring Storage&lt;/a&gt; for more information.&lt;/dd&gt;
 &lt;dt&gt; Repository bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket used for storing artifacts when using &lt;a href=&#34;/docs/getting-started/setup/boot/#bucketrepo&#34;&gt;Bucketrepo&lt;/a&gt;.
Bucketrepo  is a small footprint microservice that is an alternative to both Nexus and Chartmusem.&lt;/dd&gt;
 &lt;dt&gt; Velero bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket for &lt;a href=&#34;https://velero.io&#34;&gt;Velero&lt;/a&gt; backups.
Refer to &lt;a href=&#34;/docs/getting-started/setup/boot/#backups&#34;&gt;Backups&lt;/a&gt; for more information.&lt;/dd&gt;
 &lt;dt&gt; Vault bucket&lt;/dt&gt;
 &lt;dd&gt;Bucket used by Vault for storing its data.
Jenkins X uses Vault to store secrets.
Refer to &lt;a href=&#34;/docs/getting-started/setup/boot/#vault&#34;&gt;Vault&lt;/a&gt; for more information.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;permission-management&#34;&gt;Permission management&lt;/h2&gt;
&lt;p&gt;Several Jenkins X services need to interact with the underlying cloud infrastructure.
For example, the Build Controller needs to be able to store log files into the log storage bucket.
Another example is &lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; creating dynamically new DNS entries for services.
In this case ExternalDNS service needs access to the DNS APIs of the underyling cloud provider.&lt;/p&gt;
&lt;p&gt;To ensure that each service gets only the permissions it needs to fulfill its resposibilty, cloud providers allow to bind Kuberenetes service accounts to cloud provider specific service announts or roles.
The mechanism to achieve this varies between cloud providers.
For Google Cloud it is called &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity&#34;&gt;Workload Identity&lt;/a&gt; and for AWS &lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html&#34;&gt;IAM Roles for Service Accounts&lt;/a&gt;.
It is the resposibilty of the corresponding Terraform module to configure these permissions.&lt;/p&gt;
&lt;p&gt;At the moment Kubernetes service accounts for the following areas are created:&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;
&lt;/dt&gt;
 &lt;dd&gt;&lt;/dd&gt;
 &lt;dt&gt; Tekton&lt;/dt&gt;
 &lt;dd&gt;Service account used by Tekton for the actual pipline execution.
The Tekton service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;tekton-bot&lt;/em&gt;.&lt;/dd&gt;
 &lt;dt&gt; Build Controller&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Build Controller service which is responsible to track the overall progress of pipeline executions.
The Build Controller service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;jenkins-x-controllerbuild&lt;/em&gt;.&lt;/dd&gt;
 &lt;dt&gt; DNS&lt;/dt&gt;
 &lt;dd&gt;There are three Kuberenetes services accounts created related to DNS.
One for ExternalDNS with the name &lt;em&gt;exdns-external-dns&lt;/em&gt; and two for &lt;a href=&#34;https://github.com/jetstack/cert-manager&#34;&gt;cert-manager&lt;/a&gt;, namely &lt;em&gt;cm-cert-manager&lt;/em&gt; and &lt;em&gt;cm-cainjector&lt;/em&gt;.
Each of these services need access to the DNS API of the cloud provider.&lt;/dd&gt;
 &lt;dt&gt; Vault&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Vault operator.
The Vault service account needs permissions to read and write to cloud storage and access to kryptographic key managment.
The name of the service account is _&amp;lt;cluster-name&amp;gt;-vt.&lt;/dd&gt;
 &lt;dt&gt; Velero&lt;/dt&gt;
 &lt;dd&gt;Service account used by the Velero backup service.
The Velero service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;velero-server&lt;/em&gt;&lt;/dd&gt;
 &lt;dt&gt; Kaniko&lt;/dt&gt;
 &lt;dd&gt;Service account used by &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;Kaniko&lt;/a&gt; which is a safer option to build Docker images in Kuberenetes than the Docker daemon.
The Kaniko service account needs permissions to read and write to cloud storage.
The name of the service account is &lt;em&gt;kaniko-sa&lt;/em&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;kryptograpphic-key-management&#34;&gt;Kryptograpphic key management&lt;/h2&gt;
&lt;p&gt;For using the Vault Operator, the Terraform module needs to create a krypographic keyring and key to seed Vault.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
