<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Jenkins X</title>
    <link>http://jenkins-x.io/architecture/</link>
    <description>Recent content in Architecture on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://jenkins-x.io/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Custom Resources</title>
      <link>http://jenkins-x.io/architecture/custom-resources/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jenkins-x.io/architecture/custom-resources/</guid>
      <description>Kubernetes provides an extension mechanism called Custom Resources which allows microservices to extend the Kubernetes platform to solve higher order problems.
So in Jenkins X we have added a number of Custom Resources to help extend Kubernetes to support CI/CD:
Environments Jenkins X natively supports environments allowing them to be defined for your team and then queried via jx get environments:
jx get environments Under the covers that command uses the custom Kubernetes resource Environments.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>http://jenkins-x.io/architecture/components/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>http://jenkins-x.io/architecture/components/</guid>
      <description>An installation of Jenkins X consists of:
 a Development Environment per team which is a kubernetes namespace zero to many other Permanent Environments  the out of the box is for each team to get their own Staging and Production environments each team can have as many environments as they wish and can call them whatever they like  optional Preview Environments  Typically each environment is associated with its own kubernetes namespace which are usually different to ensure clean isolation between the environments.</description>
    </item>
    
  </channel>
</rss>