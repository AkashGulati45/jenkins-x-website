<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developing on Jenkins X</title>
    <link>https://jenkins-x.io/developing/</link>
    <description>Recent content in Developing on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jenkins-x.io/developing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Import</title>
      <link>https://jenkins-x.io/developing/import/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/developing/import/</guid>
      <description>If you already have some source code you wish to import into Jenkins X then you can use the jx import command. e.g.
$ cd my-cool-app $ jx import Import will perform the following actions (prompting you along the way):
 add your source code into a git repository if it isn&amp;rsquo;t already create a remote git repository on a git service, such as GitHub push your code to the remote git service add any required files to your project if they do not exist:  Dockerfile to build your application as a docker image Jenkinsfile to implement the CI / CD pipeline helm chart to run your application inside Kubernetes  register a webhook on the remote git repository to your teams Jenkins add the git repository to your teams Jenkins trigger the first pipeline  Avoiding docker + helm If you are importing a repository that does not create a docker image you can use the --no-draft command line argument which will not use Draft to default the Dockerfile and helm chart.</description>
    </item>
    
    <item>
      <title>Create Spring Boot</title>
      <link>https://jenkins-x.io/developing/create-spring/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/developing/create-spring/</guid>
      <description>If you are developing Java microservices then you may well be using the popular Spring Boot.
You can create new Spring Boot applications using the Spring Boot Initializr and then import them into Jenkins X via the jx import command.
However another alternative is to use the jx create spring command which provides a fast automated path:
$ jx create spring -d web -actuator The -d argument lets you specify the Spring Boot dependencies you wish to add to your spring boot application.</description>
    </item>
    
    <item>
      <title>Browsing</title>
      <link>https://jenkins-x.io/developing/browsing/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/developing/browsing/</guid>
      <description>If you have used kubernetes before you&amp;rsquo;re probably used the kubectl command line to view kubernetes resources:
kubectl get pods The Jenkins X command line tool, jx, has a similar look and feel to kubectl and lets you get the status of all the Jenkins X resources.
Pipelines To view the current pipelines use jx get pipelines:
jx get pipelines Pipeline Activity To view the current pipeline activity jx get activities:</description>
    </item>
    
    <item>
      <title>Kubernetes Context</title>
      <link>https://jenkins-x.io/developing/kube-context/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/developing/kube-context/</guid>
      <description>The kubernetes CLI tool kubectl keeps track of the kubernetes cluster and namespace you are using via a local file ~/.kube/config (or a file at $KUBECONFIG).
If you want to change the namespace using the kubectl command line you can use:
kubectl config set-context`kubectl config current-context` --namespace=foo However jx provides lots of helper commands for changing clusters, namespaces or environments:
Changing Environments Use jx environment to switch environments
jx environment You will be presented with a list of the environments for the current team.</description>
    </item>
    
  </channel>
</rss>