<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>故障排除 on Jenkins X</title>
    <link>https://jenkins-x.io/zh/troubleshooting/</link>
    <description>Recent content in 故障排除 on Jenkins X</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jenkins-x.io/zh/troubleshooting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>常见问题解答</title>
      <link>https://jenkins-x.io/zh/troubleshooting/faq/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/troubleshooting/faq/</guid>
      <description>我们已经试图把一些常见的问题整理到这里。如果你遇到的问题没有在这里列出来，请让我们知道。
Jenkins X 是开源的吗？ 是的！Jenkins X 的所有源码和成品都是开源的；Apache 或 MIT 能保证这一点！
Jenkins X 是 Jenkins 的分支吗？ 不！Jenkins X 总是复用 Jenkins 核心，并尽可能把它配置作为 Kubenetes 的本地资源。
起初，Jenkins X 是 Jenkins 核心带着 Kubernetes 配置以及一些附加的插件，打包为一个 Helm 的 Chart。
随着时间的推移，我们希望 Jenkins X 项目可以推动 Jenkins 核心发生一些改变，以帮助 Jenkins 更加原生地支持云。例如：使用数据库或者 Kubernetes 资源来存储任务、运行和凭据，使得更加容易地支持像多 master 或单个 master。虽然，这些变化首先会在 Jenkins 核心中出现，但会被 Jenkins X 复用。
为什么要创建一个子项目？ 我们是 Kubernetes 和云的超级粉丝，并认为是软件运行的未来趋势。
然而，很多分支仍然想要通过：java -jar jenkins.war以常规的方式来运行 Jenkins。
因此，Jenkins X 子项目的想法，是为了100%关注在 Kubernetes 和云原生使用场景，并让 Jenkins 核心项目关注经典的 Java 方式。
Jenkins 最强大的是它的灵活性和巨大的插件生态。分离 Jenkins X 子项目帮助社区并行地迭代并快速改进云原生和 Jenkins 经典的发行。</description>
    </item>
    
    <item>
      <title>Jenkins 相关问题</title>
      <link>https://jenkins-x.io/zh/troubleshooting/jenkins/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/troubleshooting/jenkins/</guid>
      <description>密码 安装在 Jenkins X 中的 Jenkins 没有提供修改管理员密码的页面，但是你可以通过配置文件 ~/.jx/jenkinsAuth.yaml 来获取密码。</description>
    </item>
    
  </channel>
</rss>